// Package gen provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package gen

import (
	"encoding/json"
	"fmt"
	"time"
)

const (
	ApiKeyAuthScopes = "apiKeyAuth.Scopes"
)

// Defines values for AggregationAggType.
const (
	AGGTYPEAVG         AggregationAggType = "AGG_TYPE_AVG"
	AGGTYPECOUNT       AggregationAggType = "AGG_TYPE_COUNT"
	AGGTYPEHISTOGRAM   AggregationAggType = "AGG_TYPE_HISTOGRAM"
	AGGTYPEMAX         AggregationAggType = "AGG_TYPE_MAX"
	AGGTYPEMIN         AggregationAggType = "AGG_TYPE_MIN"
	AGGTYPESAMPLES     AggregationAggType = "AGG_TYPE_SAMPLES"
	AGGTYPESUM         AggregationAggType = "AGG_TYPE_SUM"
	AGGTYPEUNSPECIFIED AggregationAggType = "AGG_TYPE_UNSPECIFIED"
)

// Defines values for CommandInformationLanguage.
const (
	CommandInformationLanguageBASH       CommandInformationLanguage = "BASH"
	CommandInformationLanguageJAVASCRIPT CommandInformationLanguage = "JAVASCRIPT"
	CommandInformationLanguageUNKNOWN    CommandInformationLanguage = "UNKNOWN"
)

// Defines values for DimensionAggregationDimensionAggregationType.
const (
	DIMENSIONAGGREGATIONTYPEERRORCOUNT  DimensionAggregationDimensionAggregationType = "DIMENSION_AGGREGATION_TYPE_ERROR_COUNT"
	DIMENSIONAGGREGATIONTYPEUNIQUECOUNT DimensionAggregationDimensionAggregationType = "DIMENSION_AGGREGATION_TYPE_UNIQUE_COUNT"
	DIMENSIONAGGREGATIONTYPEUNSPECIFIED DimensionAggregationDimensionAggregationType = "DIMENSION_AGGREGATION_TYPE_UNSPECIFIED"
)

// Defines values for DimensionAggregationDimensionField.
const (
	DIMENSIONFIELDTRACEID     DimensionAggregationDimensionField = "DIMENSION_FIELD_TRACE_ID"
	DIMENSIONFIELDUNSPECIFIED DimensionAggregationDimensionField = "DIMENSION_FIELD_UNSPECIFIED"
)

// Defines values for E2MAggSamplesSampleType.
const (
	SAMPLETYPEMAX         E2MAggSamplesSampleType = "SAMPLE_TYPE_MAX"
	SAMPLETYPEMIN         E2MAggSamplesSampleType = "SAMPLE_TYPE_MIN"
	SAMPLETYPEUNSPECIFIED E2MAggSamplesSampleType = "SAMPLE_TYPE_UNSPECIFIED"
)

// Defines values for ExtensionItemPermissionResource.
const (
	ExtensionItemPermissionResourceACTION                          ExtensionItemPermissionResource = "ACTION"
	ExtensionItemPermissionResourceALERT                           ExtensionItemPermissionResource = "ALERT"
	ExtensionItemPermissionResourceCUSTOMENRICHMENT                ExtensionItemPermissionResource = "CUSTOM_ENRICHMENT"
	ExtensionItemPermissionResourceCXCUSTOMDASHBOARD               ExtensionItemPermissionResource = "CX_CUSTOM_DASHBOARD"
	ExtensionItemPermissionResourceGEOENRICHMENT                   ExtensionItemPermissionResource = "GEO_ENRICHMENT"
	ExtensionItemPermissionResourceGRAFANADASHBOARD                ExtensionItemPermissionResource = "GRAFANA_DASHBOARD"
	ExtensionItemPermissionResourceKIBANADASHBOARD                 ExtensionItemPermissionResource = "KIBANA_DASHBOARD"
	ExtensionItemPermissionResourceLOGSEVENTSTOMETRICS             ExtensionItemPermissionResource = "LOGS_EVENTS_TO_METRICS"
	ExtensionItemPermissionResourceMETRICSRULEGROUP                ExtensionItemPermissionResource = "METRICS_RULE_GROUP"
	ExtensionItemPermissionResourcePARSINGRULE                     ExtensionItemPermissionResource = "PARSING_RULE"
	ExtensionItemPermissionResourceRESOURCECLOUDMETADATAENRICHMENT ExtensionItemPermissionResource = "RESOURCE_CLOUD_METADATA_ENRICHMENT"
	ExtensionItemPermissionResourceSAVEDVIEW                       ExtensionItemPermissionResource = "SAVED_VIEW"
	ExtensionItemPermissionResourceSECURITYENRICHMENT              ExtensionItemPermissionResource = "SECURITY_ENRICHMENT"
	ExtensionItemPermissionResourceSPANEVENTSTOMETRICS             ExtensionItemPermissionResource = "SPAN_EVENTS_TO_METRICS"
	ExtensionItemPermissionResourceUNKNOWN                         ExtensionItemPermissionResource = "UNKNOWN"
)

// Defines values for ExtractTimestampParametersFormatStandard.
const (
	FORMATSTANDARDGOLANG                ExtractTimestampParametersFormatStandard = "FORMAT_STANDARD_GOLANG"
	FORMATSTANDARDJAVASDF               ExtractTimestampParametersFormatStandard = "FORMAT_STANDARD_JAVASDF"
	FORMATSTANDARDMICROTS               ExtractTimestampParametersFormatStandard = "FORMAT_STANDARD_MICROTS"
	FORMATSTANDARDMILLITS               ExtractTimestampParametersFormatStandard = "FORMAT_STANDARD_MILLITS"
	FORMATSTANDARDNANOTS                ExtractTimestampParametersFormatStandard = "FORMAT_STANDARD_NANOTS"
	FORMATSTANDARDSECONDSTS             ExtractTimestampParametersFormatStandard = "FORMAT_STANDARD_SECONDSTS"
	FORMATSTANDARDSTRFTIMEORUNSPECIFIED ExtractTimestampParametersFormatStandard = "FORMAT_STANDARD_STRFTIME_OR_UNSPECIFIED"
)

// Defines values for GenericWebhookConfigMethodType.
const (
	GenericWebhookConfigMethodTypeGET     GenericWebhookConfigMethodType = "GET"
	GenericWebhookConfigMethodTypePOST    GenericWebhookConfigMethodType = "POST"
	GenericWebhookConfigMethodTypePUT     GenericWebhookConfigMethodType = "PUT"
	GenericWebhookConfigMethodTypeUNKNOWN GenericWebhookConfigMethodType = "UNKNOWN"
)

// Defines values for IbmEventNotificationsConfigEndpointType.
const (
	ENDPOINTTYPEDEFAULTORPUBLIC IbmEventNotificationsConfigEndpointType = "ENDPOINT_TYPE_DEFAULT_OR_PUBLIC"
	ENDPOINTTYPEPRIVATE         IbmEventNotificationsConfigEndpointType = "ENDPOINT_TYPE_PRIVATE"
)

// Defines values for IntegrationRevisionFieldConditionConditionType.
const (
	IntegrationRevisionFieldConditionConditionTypeAND     IntegrationRevisionFieldConditionConditionType = "AND"
	IntegrationRevisionFieldConditionConditionTypeOR      IntegrationRevisionFieldConditionConditionType = "OR"
	IntegrationRevisionFieldConditionConditionTypeUNKNOWN IntegrationRevisionFieldConditionConditionType = "UNKNOWN"
)

// Defines values for IntegrationRevisionInputType.
const (
	APIKEY            IntegrationRevisionInputType = "API_KEY"
	BOOLEAN           IntegrationRevisionInputType = "BOOLEAN"
	JSON              IntegrationRevisionInputType = "JSON"
	JSONOBJECTARRAY   IntegrationRevisionInputType = "JSON_OBJECT_ARRAY"
	LISTTEXT          IntegrationRevisionInputType = "LIST_TEXT"
	MULTIPLESELECTION IntegrationRevisionInputType = "MULTIPLE_SELECTION"
	NUMBER            IntegrationRevisionInputType = "NUMBER"
	SELECT            IntegrationRevisionInputType = "SELECT"
	SENSITIVEDATA     IntegrationRevisionInputType = "SENSITIVE_DATA"
	TEXT              IntegrationRevisionInputType = "TEXT"
)

// Defines values for JsonExtractParametersDestinationField.
const (
	DESTINATIONFIELDCATEGORYORUNSPECIFIED JsonExtractParametersDestinationField = "DESTINATION_FIELD_CATEGORY_OR_UNSPECIFIED"
	DESTINATIONFIELDCLASSNAME             JsonExtractParametersDestinationField = "DESTINATION_FIELD_CLASSNAME"
	DESTINATIONFIELDMETHODNAME            JsonExtractParametersDestinationField = "DESTINATION_FIELD_METHODNAME"
	DESTINATIONFIELDSEVERITY              JsonExtractParametersDestinationField = "DESTINATION_FIELD_SEVERITY"
	DESTINATIONFIELDTEXT                  JsonExtractParametersDestinationField = "DESTINATION_FIELD_TEXT"
	DESTINATIONFIELDTHREADID              JsonExtractParametersDestinationField = "DESTINATION_FIELD_THREADID"
)

// Defines values for LegendLegendColumn.
const (
	LEGENDCOLUMNAVG         LegendLegendColumn = "LEGEND_COLUMN_AVG"
	LEGENDCOLUMNLAST        LegendLegendColumn = "LEGEND_COLUMN_LAST"
	LEGENDCOLUMNMAX         LegendLegendColumn = "LEGEND_COLUMN_MAX"
	LEGENDCOLUMNMIN         LegendLegendColumn = "LEGEND_COLUMN_MIN"
	LEGENDCOLUMNNAME        LegendLegendColumn = "LEGEND_COLUMN_NAME"
	LEGENDCOLUMNSUM         LegendLegendColumn = "LEGEND_COLUMN_SUM"
	LEGENDCOLUMNUNSPECIFIED LegendLegendColumn = "LEGEND_COLUMN_UNSPECIFIED"
)

// Defines values for LegendLegendPlacement.
const (
	LEGENDPLACEMENTAUTO        LegendLegendPlacement = "LEGEND_PLACEMENT_AUTO"
	LEGENDPLACEMENTBOTTOM      LegendLegendPlacement = "LEGEND_PLACEMENT_BOTTOM"
	LEGENDPLACEMENTHIDDEN      LegendLegendPlacement = "LEGEND_PLACEMENT_HIDDEN"
	LEGENDPLACEMENTSIDE        LegendLegendPlacement = "LEGEND_PLACEMENT_SIDE"
	LEGENDPLACEMENTUNSPECIFIED LegendLegendPlacement = "LEGEND_PLACEMENT_UNSPECIFIED"
)

// Defines values for LineChartStackedLine.
const (
	STACKEDLINEABSOLUTE    LineChartStackedLine = "STACKED_LINE_ABSOLUTE"
	STACKEDLINERELATIVE    LineChartStackedLine = "STACKED_LINE_RELATIVE"
	STACKEDLINEUNSPECIFIED LineChartStackedLine = "STACKED_LINE_UNSPECIFIED"
)

// Defines values for LineChartTooltipType.
const (
	TOOLTIPTYPEALL         LineChartTooltipType = "TOOLTIP_TYPE_ALL"
	TOOLTIPTYPESINGLE      LineChartTooltipType = "TOOLTIP_TYPE_SINGLE"
	TOOLTIPTYPEUNSPECIFIED LineChartTooltipType = "TOOLTIP_TYPE_UNSPECIFIED"
)

// Defines values for ManagedVariant.
const (
	ManagedVariantCUSTOM  ManagedVariant = "CUSTOM"
	ManagedVariantDEFAULT ManagedVariant = "DEFAULT"
	ManagedVariantGCP     ManagedVariant = "GCP"
	ManagedVariantOAUTH   ManagedVariant = "OAUTH"
)

// Defines values for MetricAggregationMetricAggregationType.
const (
	METRICAGGREGATIONTYPEAVERAGE      MetricAggregationMetricAggregationType = "METRIC_AGGREGATION_TYPE_AVERAGE"
	METRICAGGREGATIONTYPEMAX          MetricAggregationMetricAggregationType = "METRIC_AGGREGATION_TYPE_MAX"
	METRICAGGREGATIONTYPEMIN          MetricAggregationMetricAggregationType = "METRIC_AGGREGATION_TYPE_MIN"
	METRICAGGREGATIONTYPEPERCENTILE50 MetricAggregationMetricAggregationType = "METRIC_AGGREGATION_TYPE_PERCENTILE_50"
	METRICAGGREGATIONTYPEPERCENTILE95 MetricAggregationMetricAggregationType = "METRIC_AGGREGATION_TYPE_PERCENTILE_95"
	METRICAGGREGATIONTYPEPERCENTILE99 MetricAggregationMetricAggregationType = "METRIC_AGGREGATION_TYPE_PERCENTILE_99"
	METRICAGGREGATIONTYPESUM          MetricAggregationMetricAggregationType = "METRIC_AGGREGATION_TYPE_SUM"
	METRICAGGREGATIONTYPEUNSPECIFIED  MetricAggregationMetricAggregationType = "METRIC_AGGREGATION_TYPE_UNSPECIFIED"
)

// Defines values for MultiSelectRefreshStrategy.
const (
	REFRESHSTRATEGYONDASHBOARDLOAD   MultiSelectRefreshStrategy = "REFRESH_STRATEGY_ON_DASHBOARD_LOAD"
	REFRESHSTRATEGYONTIMEFRAMECHANGE MultiSelectRefreshStrategy = "REFRESH_STRATEGY_ON_TIME_FRAME_CHANGE"
	REFRESHSTRATEGYUNSPECIFIED       MultiSelectRefreshStrategy = "REFRESH_STRATEGY_UNSPECIFIED"
)

// Defines values for PieChartLabelSource.
const (
	LABELSOURCEINNER       PieChartLabelSource = "LABEL_SOURCE_INNER"
	LABELSOURCESTACK       PieChartLabelSource = "LABEL_SOURCE_STACK"
	LABELSOURCEUNSPECIFIED PieChartLabelSource = "LABEL_SOURCE_UNSPECIFIED"
)

// Defines values for SlackConfigAttachmentType.
const (
	EMPTY          SlackConfigAttachmentType = "EMPTY"
	LOGS           SlackConfigAttachmentType = "LOGS"
	METRICSNAPSHOT SlackConfigAttachmentType = "METRIC_SNAPSHOT"
)

// Defines values for SlackConfigDigestType.
const (
	SlackConfigDigestTypeDATAUSAGE            SlackConfigDigestType = "DATA_USAGE"
	SlackConfigDigestTypeERRORANDCRITICALLOGS SlackConfigDigestType = "ERROR_AND_CRITICAL_LOGS"
	SlackConfigDigestTypeFLOWANOMALIES        SlackConfigDigestType = "FLOW_ANOMALIES"
	SlackConfigDigestTypeSPIKEANOMALIES       SlackConfigDigestType = "SPIKE_ANOMALIES"
	SlackConfigDigestTypeUNKNOWN              SlackConfigDigestType = "UNKNOWN"
)

// Defines values for SpanFieldMetadataField.
const (
	METADATAFIELDAPPLICATIONNAME SpanFieldMetadataField = "METADATA_FIELD_APPLICATION_NAME"
	METADATAFIELDOPERATIONNAME   SpanFieldMetadataField = "METADATA_FIELD_OPERATION_NAME"
	METADATAFIELDSERVICENAME     SpanFieldMetadataField = "METADATA_FIELD_SERVICE_NAME"
	METADATAFIELDSUBSYSTEMNAME   SpanFieldMetadataField = "METADATA_FIELD_SUBSYSTEM_NAME"
	METADATAFIELDUNSPECIFIED     SpanFieldMetadataField = "METADATA_FIELD_UNSPECIFIED"
)

// Defines values for SpansAggregationMetricAggregationMetricField.
const (
	METRICFIELDDURATION    SpansAggregationMetricAggregationMetricField = "METRIC_FIELD_DURATION"
	METRICFIELDUNSPECIFIED SpansAggregationMetricAggregationMetricField = "METRIC_FIELD_UNSPECIFIED"
)

// Defines values for TestTemplateRenderResultFailureReason.
const (
	FAILUREREASONUNSPECIFIED      TestTemplateRenderResultFailureReason = "FAILURE_REASON_UNSPECIFIED"
	FIELDNOTFOUND                 TestTemplateRenderResultFailureReason = "FIELD_NOT_FOUND"
	INVALIDTEMPLATE               TestTemplateRenderResultFailureReason = "INVALID_TEMPLATE"
	RENDEREDVALUEEXCEEDSMAXLENGTH TestTemplateRenderResultFailureReason = "RENDERED_VALUE_EXCEEDS_MAX_LENGTH"
	TEMPLATEEXCEEDSMAXLENGTH      TestTemplateRenderResultFailureReason = "TEMPLATE_EXCEEDS_MAX_LENGTH"
)

// Defines values for VariableSelectionOptionsSelectionType.
const (
	SELECTIONTYPEMULTI       VariableSelectionOptionsSelectionType = "SELECTION_TYPE_MULTI"
	SELECTIONTYPEMULTIALL    VariableSelectionOptionsSelectionType = "SELECTION_TYPE_MULTI_ALL"
	SELECTIONTYPESINGLE      VariableSelectionOptionsSelectionType = "SELECTION_TYPE_SINGLE"
	SELECTIONTYPEUNSPECIFIED VariableSelectionOptionsSelectionType = "SELECTION_TYPE_UNSPECIFIED"
)

// Defines values for Actionsv2SourceType.
const (
	Actionsv2SourceTypeSOURCETYPEDATAMAP     Actionsv2SourceType = "SOURCE_TYPE_DATA_MAP"
	Actionsv2SourceTypeSOURCETYPELOG         Actionsv2SourceType = "SOURCE_TYPE_LOG"
	Actionsv2SourceTypeSOURCETYPEUNSPECIFIED Actionsv2SourceType = "SOURCE_TYPE_UNSPECIFIED"
)

// Defines values for Alertsv3AutoRetireTimeframe.
const (
	AUTORETIRETIMEFRAMEHOUR1              Alertsv3AutoRetireTimeframe = "AUTO_RETIRE_TIMEFRAME_HOUR_1"
	AUTORETIRETIMEFRAMEHOURS12            Alertsv3AutoRetireTimeframe = "AUTO_RETIRE_TIMEFRAME_HOURS_12"
	AUTORETIRETIMEFRAMEHOURS2             Alertsv3AutoRetireTimeframe = "AUTO_RETIRE_TIMEFRAME_HOURS_2"
	AUTORETIRETIMEFRAMEHOURS24            Alertsv3AutoRetireTimeframe = "AUTO_RETIRE_TIMEFRAME_HOURS_24"
	AUTORETIRETIMEFRAMEHOURS6             Alertsv3AutoRetireTimeframe = "AUTO_RETIRE_TIMEFRAME_HOURS_6"
	AUTORETIRETIMEFRAMEMINUTES10          Alertsv3AutoRetireTimeframe = "AUTO_RETIRE_TIMEFRAME_MINUTES_10"
	AUTORETIRETIMEFRAMEMINUTES5           Alertsv3AutoRetireTimeframe = "AUTO_RETIRE_TIMEFRAME_MINUTES_5"
	AUTORETIRETIMEFRAMENEVERORUNSPECIFIED Alertsv3AutoRetireTimeframe = "AUTO_RETIRE_TIMEFRAME_NEVER_OR_UNSPECIFIED"
)

// Defines values for AstSectionPredefinedColor.
const (
	SECTIONPREDEFINEDCOLORBLUE        AstSectionPredefinedColor = "SECTION_PREDEFINED_COLOR_BLUE"
	SECTIONPREDEFINEDCOLORCYAN        AstSectionPredefinedColor = "SECTION_PREDEFINED_COLOR_CYAN"
	SECTIONPREDEFINEDCOLORGREEN       AstSectionPredefinedColor = "SECTION_PREDEFINED_COLOR_GREEN"
	SECTIONPREDEFINEDCOLORMAGENTA     AstSectionPredefinedColor = "SECTION_PREDEFINED_COLOR_MAGENTA"
	SECTIONPREDEFINEDCOLORORANGE      AstSectionPredefinedColor = "SECTION_PREDEFINED_COLOR_ORANGE"
	SECTIONPREDEFINEDCOLORPINK        AstSectionPredefinedColor = "SECTION_PREDEFINED_COLOR_PINK"
	SECTIONPREDEFINEDCOLORPURPLE      AstSectionPredefinedColor = "SECTION_PREDEFINED_COLOR_PURPLE"
	SECTIONPREDEFINEDCOLORUNSPECIFIED AstSectionPredefinedColor = "SECTION_PREDEFINED_COLOR_UNSPECIFIED"
)

// Defines values for AstVariableDisplayType.
const (
	VARIABLEDISPLAYTYPELABELVALUE  AstVariableDisplayType = "VARIABLE_DISPLAY_TYPE_LABEL_VALUE"
	VARIABLEDISPLAYTYPENOTHING     AstVariableDisplayType = "VARIABLE_DISPLAY_TYPE_NOTHING"
	VARIABLEDISPLAYTYPEUNSPECIFIED AstVariableDisplayType = "VARIABLE_DISPLAY_TYPE_UNSPECIFIED"
	VARIABLEDISPLAYTYPEVALUE       AstVariableDisplayType = "VARIABLE_DISPLAY_TYPE_VALUE"
)

// Defines values for CommonDataModeType.
const (
	DATAMODETYPEARCHIVE         CommonDataModeType = "DATA_MODE_TYPE_ARCHIVE"
	DATAMODETYPEHIGHUNSPECIFIED CommonDataModeType = "DATA_MODE_TYPE_HIGH_UNSPECIFIED"
)

// Defines values for CommonLegendBy.
const (
	LEGENDBYGROUPS      CommonLegendBy = "LEGEND_BY_GROUPS"
	LEGENDBYTHRESHOLDS  CommonLegendBy = "LEGEND_BY_THRESHOLDS"
	LEGENDBYUNSPECIFIED CommonLegendBy = "LEGEND_BY_UNSPECIFIED"
)

// Defines values for CommonMetricsQueryEditorMode.
const (
	METRICSQUERYEDITORMODEBUILDER     CommonMetricsQueryEditorMode = "METRICS_QUERY_EDITOR_MODE_BUILDER"
	METRICSQUERYEDITORMODETEXT        CommonMetricsQueryEditorMode = "METRICS_QUERY_EDITOR_MODE_TEXT"
	METRICSQUERYEDITORMODEUNSPECIFIED CommonMetricsQueryEditorMode = "METRICS_QUERY_EDITOR_MODE_UNSPECIFIED"
)

// Defines values for CommonOrderDirection.
const (
	ORDERDIRECTIONASC         CommonOrderDirection = "ORDER_DIRECTION_ASC"
	ORDERDIRECTIONDESC        CommonOrderDirection = "ORDER_DIRECTION_DESC"
	ORDERDIRECTIONUNSPECIFIED CommonOrderDirection = "ORDER_DIRECTION_UNSPECIFIED"
)

// Defines values for CommonPromQLQueryType.
const (
	PROMQLQUERYTYPEINSTANT     CommonPromQLQueryType = "PROM_QL_QUERY_TYPE_INSTANT"
	PROMQLQUERYTYPERANGE       CommonPromQLQueryType = "PROM_QL_QUERY_TYPE_RANGE"
	PROMQLQUERYTYPEUNSPECIFIED CommonPromQLQueryType = "PROM_QL_QUERY_TYPE_UNSPECIFIED"
)

// Defines values for CommonScaleType.
const (
	SCALETYPELINEAR      CommonScaleType = "SCALE_TYPE_LINEAR"
	SCALETYPELOGARITHMIC CommonScaleType = "SCALE_TYPE_LOGARITHMIC"
	SCALETYPEUNSPECIFIED CommonScaleType = "SCALE_TYPE_UNSPECIFIED"
)

// Defines values for CommonSortByType.
const (
	SORTBYTYPENAME        CommonSortByType = "SORT_BY_TYPE_NAME"
	SORTBYTYPEUNSPECIFIED CommonSortByType = "SORT_BY_TYPE_UNSPECIFIED"
	SORTBYTYPEVALUE       CommonSortByType = "SORT_BY_TYPE_VALUE"
)

// Defines values for CommonSpanRelationType.
const (
	SPANRELATIONTYPENONEUNSPECIFIED CommonSpanRelationType = "SPAN_RELATION_TYPE_NONE_UNSPECIFIED"
	SPANRELATIONTYPEOTHER           CommonSpanRelationType = "SPAN_RELATION_TYPE_OTHER"
	SPANRELATIONTYPEPARENT          CommonSpanRelationType = "SPAN_RELATION_TYPE_PARENT"
	SPANRELATIONTYPEROOT            CommonSpanRelationType = "SPAN_RELATION_TYPE_ROOT"
)

// Defines values for CommonThresholdType.
const (
	THRESHOLDTYPEABSOLUTE    CommonThresholdType = "THRESHOLD_TYPE_ABSOLUTE"
	THRESHOLDTYPERELATIVE    CommonThresholdType = "THRESHOLD_TYPE_RELATIVE"
	THRESHOLDTYPEUNSPECIFIED CommonThresholdType = "THRESHOLD_TYPE_UNSPECIFIED"
)

// Defines values for Coralogixapislogs2metricsv2Severity.
const (
	Coralogixapislogs2metricsv2SeveritySEVERITYCRITICAL    Coralogixapislogs2metricsv2Severity = "SEVERITY_CRITICAL"
	Coralogixapislogs2metricsv2SeveritySEVERITYDEBUG       Coralogixapislogs2metricsv2Severity = "SEVERITY_DEBUG"
	Coralogixapislogs2metricsv2SeveritySEVERITYERROR       Coralogixapislogs2metricsv2Severity = "SEVERITY_ERROR"
	Coralogixapislogs2metricsv2SeveritySEVERITYINFO        Coralogixapislogs2metricsv2Severity = "SEVERITY_INFO"
	Coralogixapislogs2metricsv2SeveritySEVERITYUNSPECIFIED Coralogixapislogs2metricsv2Severity = "SEVERITY_UNSPECIFIED"
	Coralogixapislogs2metricsv2SeveritySEVERITYVERBOSE     Coralogixapislogs2metricsv2Severity = "SEVERITY_VERBOSE"
	Coralogixapislogs2metricsv2SeveritySEVERITYWARNING     Coralogixapislogs2metricsv2Severity = "SEVERITY_WARNING"
)

// Defines values for CoralogixapisnotificationCenterEntityType.
const (
	CoralogixapisnotificationCenterEntityTypeALERTS                CoralogixapisnotificationCenterEntityType = "ALERTS"
	CoralogixapisnotificationCenterEntityTypeENTITYTYPEUNSPECIFIED CoralogixapisnotificationCenterEntityType = "ENTITY_TYPE_UNSPECIFIED"
	CoralogixapisnotificationCenterEntityTypeTESTNOTIFICATIONS     CoralogixapisnotificationCenterEntityType = "TEST_NOTIFICATIONS"
)

// Defines values for Coralogixapisscopesv1EntityType.
const (
	Coralogixapisscopesv1EntityTypeENTITYTYPELOGS        Coralogixapisscopesv1EntityType = "ENTITY_TYPE_LOGS"
	Coralogixapisscopesv1EntityTypeENTITYTYPESPANS       Coralogixapisscopesv1EntityType = "ENTITY_TYPE_SPANS"
	Coralogixapisscopesv1EntityTypeENTITYTYPEUNSPECIFIED Coralogixapisscopesv1EntityType = "ENTITY_TYPE_UNSPECIFIED"
)

// Defines values for Coralogixdatausagev2Severity.
const (
	Coralogixdatausagev2SeveritySEVERITYCRITICAL    Coralogixdatausagev2Severity = "SEVERITY_CRITICAL"
	Coralogixdatausagev2SeveritySEVERITYDEBUG       Coralogixdatausagev2Severity = "SEVERITY_DEBUG"
	Coralogixdatausagev2SeveritySEVERITYERROR       Coralogixdatausagev2Severity = "SEVERITY_ERROR"
	Coralogixdatausagev2SeveritySEVERITYINFO        Coralogixdatausagev2Severity = "SEVERITY_INFO"
	Coralogixdatausagev2SeveritySEVERITYUNSPECIFIED Coralogixdatausagev2Severity = "SEVERITY_UNSPECIFIED"
	Coralogixdatausagev2SeveritySEVERITYVERBOSE     Coralogixdatausagev2Severity = "SEVERITY_VERBOSE"
	Coralogixdatausagev2SeveritySEVERITYWARNING     Coralogixdatausagev2Severity = "SEVERITY_WARNING"
)

// Defines values for Coralogixquotav1Priority.
const (
	PRIORITYTYPEBLOCK       Coralogixquotav1Priority = "PRIORITY_TYPE_BLOCK"
	PRIORITYTYPEHIGH        Coralogixquotav1Priority = "PRIORITY_TYPE_HIGH"
	PRIORITYTYPELOW         Coralogixquotav1Priority = "PRIORITY_TYPE_LOW"
	PRIORITYTYPEMEDIUM      Coralogixquotav1Priority = "PRIORITY_TYPE_MEDIUM"
	PRIORITYTYPEUNSPECIFIED Coralogixquotav1Priority = "PRIORITY_TYPE_UNSPECIFIED"
)

// Defines values for Coralogixquotav1Severity.
const (
	Coralogixquotav1SeveritySEVERITYCRITICAL    Coralogixquotav1Severity = "SEVERITY_CRITICAL"
	Coralogixquotav1SeveritySEVERITYDEBUG       Coralogixquotav1Severity = "SEVERITY_DEBUG"
	Coralogixquotav1SeveritySEVERITYERROR       Coralogixquotav1Severity = "SEVERITY_ERROR"
	Coralogixquotav1SeveritySEVERITYINFO        Coralogixquotav1Severity = "SEVERITY_INFO"
	Coralogixquotav1SeveritySEVERITYUNSPECIFIED Coralogixquotav1Severity = "SEVERITY_UNSPECIFIED"
	Coralogixquotav1SeveritySEVERITYVERBOSE     Coralogixquotav1Severity = "SEVERITY_VERBOSE"
	Coralogixquotav1SeveritySEVERITYWARNING     Coralogixquotav1Severity = "SEVERITY_WARNING"
)

// Defines values for Datausagev2Pillar.
const (
	PILLARBINARY      Datausagev2Pillar = "PILLAR_BINARY"
	PILLARLOGS        Datausagev2Pillar = "PILLAR_LOGS"
	PILLARMETRICS     Datausagev2Pillar = "PILLAR_METRICS"
	PILLARPROFILES    Datausagev2Pillar = "PILLAR_PROFILES"
	PILLARSPANS       Datausagev2Pillar = "PILLAR_SPANS"
	PILLARUNSPECIFIED Datausagev2Pillar = "PILLAR_UNSPECIFIED"
)

// Defines values for Datausagev2Priority.
const (
	PRIORITYBLOCKED     Datausagev2Priority = "PRIORITY_BLOCKED"
	PRIORITYHIGH        Datausagev2Priority = "PRIORITY_HIGH"
	PRIORITYLOW         Datausagev2Priority = "PRIORITY_LOW"
	PRIORITYMEDIUM      Datausagev2Priority = "PRIORITY_MEDIUM"
	PRIORITYUNSPECIFIED Datausagev2Priority = "PRIORITY_UNSPECIFIED"
)

// Defines values for Datausagev2Range.
const (
	RANGECURRENTMONTH Datausagev2Range = "RANGE_CURRENT_MONTH"
	RANGELAST30DAYS   Datausagev2Range = "RANGE_LAST_30_DAYS"
	RANGELAST90DAYS   Datausagev2Range = "RANGE_LAST_90_DAYS"
	RANGELASTWEEK     Datausagev2Range = "RANGE_LAST_WEEK"
	RANGEUNSPECIFIED  Datausagev2Range = "RANGE_UNSPECIFIED"
)

// Defines values for Datausagev2TcoTier.
const (
	TCOTIERBLOCKED     Datausagev2TcoTier = "TCO_TIER_BLOCKED"
	TCOTIERHIGH        Datausagev2TcoTier = "TCO_TIER_HIGH"
	TCOTIERLOW         Datausagev2TcoTier = "TCO_TIER_LOW"
	TCOTIERMEDIUM      Datausagev2TcoTier = "TCO_TIER_MEDIUM"
	TCOTIERUNSPECIFIED Datausagev2TcoTier = "TCO_TIER_UNSPECIFIED"
)

// Defines values for Eventsv3FilterOperator.
const (
	Eventsv3FilterOperatorFILTEROPERATORANDORUNSPECIFIED Eventsv3FilterOperator = "FILTER_OPERATOR_AND_OR_UNSPECIFIED"
	Eventsv3FilterOperatorFILTEROPERATOROR               Eventsv3FilterOperator = "FILTER_OPERATOR_OR"
)

// Defines values for Incidentsv1FilterOperator.
const (
	FILTEROPERATORAND             Incidentsv1FilterOperator = "FILTER_OPERATOR_AND"
	FILTEROPERATORORORUNSPECIFIED Incidentsv1FilterOperator = "FILTER_OPERATOR_OR_OR_UNSPECIFIED"
)

// Defines values for Incidentsv1OrderByDirection.
const (
	ORDERBYDIRECTIONASC         Incidentsv1OrderByDirection = "ORDER_BY_DIRECTION_ASC"
	ORDERBYDIRECTIONDESC        Incidentsv1OrderByDirection = "ORDER_BY_DIRECTION_DESC"
	ORDERBYDIRECTIONUNSPECIFIED Incidentsv1OrderByDirection = "ORDER_BY_DIRECTION_UNSPECIFIED"
)

// Defines values for NotificationCenterConnectorType.
const (
	NotificationCenterConnectorTypeAWS                      NotificationCenterConnectorType = "AWS"
	NotificationCenterConnectorTypeCONNECTORTYPEUNSPECIFIED NotificationCenterConnectorType = "CONNECTOR_TYPE_UNSPECIFIED"
	NotificationCenterConnectorTypeGENERICHTTPS             NotificationCenterConnectorType = "GENERIC_HTTPS"
	NotificationCenterConnectorTypeIBMEVENTNOTIFICATIONS    NotificationCenterConnectorType = "IBM_EVENT_NOTIFICATIONS"
	NotificationCenterConnectorTypePAGERDUTY                NotificationCenterConnectorType = "PAGERDUTY"
	NotificationCenterConnectorTypeSLACK                    NotificationCenterConnectorType = "SLACK"
)

// Defines values for Quotav1SourceType.
const (
	Quotav1SourceTypeSOURCETYPELOGS        Quotav1SourceType = "SOURCE_TYPE_LOGS"
	Quotav1SourceTypeSOURCETYPESPANS       Quotav1SourceType = "SOURCE_TYPE_SPANS"
	Quotav1SourceTypeSOURCETYPEUNSPECIFIED Quotav1SourceType = "SOURCE_TYPE_UNSPECIFIED"
)

// Defines values for RpcCode.
const (
	RpcCodeABORTED            RpcCode = "ABORTED"
	RpcCodeALREADYEXISTS      RpcCode = "ALREADY_EXISTS"
	RpcCodeCANCELLED          RpcCode = "CANCELLED"
	RpcCodeDATALOSS           RpcCode = "DATA_LOSS"
	RpcCodeDEADLINEEXCEEDED   RpcCode = "DEADLINE_EXCEEDED"
	RpcCodeFAILEDPRECONDITION RpcCode = "FAILED_PRECONDITION"
	RpcCodeINTERNAL           RpcCode = "INTERNAL"
	RpcCodeINVALIDARGUMENT    RpcCode = "INVALID_ARGUMENT"
	RpcCodeNOTFOUND           RpcCode = "NOT_FOUND"
	RpcCodeOK                 RpcCode = "OK"
	RpcCodeOUTOFRANGE         RpcCode = "OUT_OF_RANGE"
	RpcCodePERMISSIONDENIED   RpcCode = "PERMISSION_DENIED"
	RpcCodeRESOURCEEXHAUSTED  RpcCode = "RESOURCE_EXHAUSTED"
	RpcCodeUNAUTHENTICATED    RpcCode = "UNAUTHENTICATED"
	RpcCodeUNAVAILABLE        RpcCode = "UNAVAILABLE"
	RpcCodeUNIMPLEMENTED      RpcCode = "UNIMPLEMENTED"
	RpcCodeUNKNOWN            RpcCode = "UNKNOWN"
)

// Defines values for ServicesTokenOriginType.
const (
	TOKENORIGINTYPEAPI         ServicesTokenOriginType = "TOKEN_ORIGIN_TYPE_API"
	TOKENORIGINTYPEUNSPECIFIED ServicesTokenOriginType = "TOKEN_ORIGIN_TYPE_UNSPECIFIED"
	TOKENORIGINTYPEUSER        ServicesTokenOriginType = "TOKEN_ORIGIN_TYPE_USER"
)

// Defines values for V1ComparisonOperator.
const (
	COMPARISONOPERATORGREATERTHAN         V1ComparisonOperator = "COMPARISON_OPERATOR_GREATER_THAN"
	COMPARISONOPERATORGREATERTHANOREQUALS V1ComparisonOperator = "COMPARISON_OPERATOR_GREATER_THAN_OR_EQUALS"
	COMPARISONOPERATORLESSTHAN            V1ComparisonOperator = "COMPARISON_OPERATOR_LESS_THAN"
	COMPARISONOPERATORLESSTHANOREQUALS    V1ComparisonOperator = "COMPARISON_OPERATOR_LESS_THAN_OR_EQUALS"
	COMPARISONOPERATORUNSPECIFIED         V1ComparisonOperator = "COMPARISON_OPERATOR_UNSPECIFIED"
)

// Defines values for V1ConnectionStatus.
const (
	ACTIVE        V1ConnectionStatus = "ACTIVE"
	FAILING       V1ConnectionStatus = "FAILING"
	PENDING       V1ConnectionStatus = "PENDING"
	STATUSUNKNOWN V1ConnectionStatus = "STATUS_UNKNOWN"
)

// Defines values for V1ExtensionBinaryBinaryType.
const (
	KIBANAINDEXPATTERN V1ExtensionBinaryBinaryType = "KIBANA_INDEX_PATTERN"
)

// Defines values for V1ExtensionItemBinaryBinaryType.
const (
	CXCUSTOMDASHBOARDDEFINITION V1ExtensionItemBinaryBinaryType = "CX_CUSTOM_DASHBOARD_DEFINITION"
	ENRICHMENTCSV               V1ExtensionItemBinaryBinaryType = "ENRICHMENT_CSV"
	GRAFANADASHBOARDDEFINITION  V1ExtensionItemBinaryBinaryType = "GRAFANA_DASHBOARD_DEFINITION"
	KIBANADASHBOARDDEFINITION   V1ExtensionItemBinaryBinaryType = "KIBANA_DASHBOARD_DEFINITION"
	PREVIEWIMAGE                V1ExtensionItemBinaryBinaryType = "PREVIEW_IMAGE"
)

// Defines values for V1FilterType.
const (
	FILTERTYPECONTAINS    V1FilterType = "FILTER_TYPE_CONTAINS"
	FILTERTYPEENDSWITH    V1FilterType = "FILTER_TYPE_ENDS_WITH"
	FILTERTYPEEXACT       V1FilterType = "FILTER_TYPE_EXACT"
	FILTERTYPESTARTSWITH  V1FilterType = "FILTER_TYPE_STARTS_WITH"
	FILTERTYPEUNSPECIFIED V1FilterType = "FILTER_TYPE_UNSPECIFIED"
)

// Defines values for V1GroupOrigin.
const (
	GROUPORIGINBUILTIN     V1GroupOrigin = "GROUP_ORIGIN_BUILT_IN"
	GROUPORIGINUNSPECIFIED V1GroupOrigin = "GROUP_ORIGIN_UNSPECIFIED"
	GROUPORIGINUSERDEFINED V1GroupOrigin = "GROUP_ORIGIN_USER_DEFINED"
)

// Defines values for V1IncidentEventAlertType.
const (
	INCIDENTEVENTALERTTYPEFLOW                  V1IncidentEventAlertType = "INCIDENT_EVENT_ALERT_TYPE_FLOW"
	INCIDENTEVENTALERTTYPEMETRIC                V1IncidentEventAlertType = "INCIDENT_EVENT_ALERT_TYPE_METRIC"
	INCIDENTEVENTALERTTYPENEWVALUE              V1IncidentEventAlertType = "INCIDENT_EVENT_ALERT_TYPE_NEW_VALUE"
	INCIDENTEVENTALERTTYPERATIO                 V1IncidentEventAlertType = "INCIDENT_EVENT_ALERT_TYPE_RATIO"
	INCIDENTEVENTALERTTYPESLO                   V1IncidentEventAlertType = "INCIDENT_EVENT_ALERT_TYPE_SLO"
	INCIDENTEVENTALERTTYPESTANDARDORUNSPECIFIED V1IncidentEventAlertType = "INCIDENT_EVENT_ALERT_TYPE_STANDARD_OR_UNSPECIFIED"
	INCIDENTEVENTALERTTYPETIMERELATIVE          V1IncidentEventAlertType = "INCIDENT_EVENT_ALERT_TYPE_TIME_RELATIVE"
	INCIDENTEVENTALERTTYPETRACING               V1IncidentEventAlertType = "INCIDENT_EVENT_ALERT_TYPE_TRACING"
	INCIDENTEVENTALERTTYPEUNIQUECOUNT           V1IncidentEventAlertType = "INCIDENT_EVENT_ALERT_TYPE_UNIQUE_COUNT"
)

// Defines values for V1IncidentEventOrderByFieldType.
const (
	INCIDENTEVENTORDERBYFIELDTYPETIMESTAMPORUNSPECIFIED V1IncidentEventOrderByFieldType = "INCIDENT_EVENT_ORDER_BY_FIELD_TYPE_TIMESTAMP_OR_UNSPECIFIED"
)

// Defines values for V1IncidentEventType.
const (
	INCIDENTEVENTTYPEACKNOWLEDGE     V1IncidentEventType = "INCIDENT_EVENT_TYPE_ACKNOWLEDGE"
	INCIDENTEVENTTYPEASSIGN          V1IncidentEventType = "INCIDENT_EVENT_TYPE_ASSIGN"
	INCIDENTEVENTTYPECLOSE           V1IncidentEventType = "INCIDENT_EVENT_TYPE_CLOSE"
	INCIDENTEVENTTYPEOPEN            V1IncidentEventType = "INCIDENT_EVENT_TYPE_OPEN"
	INCIDENTEVENTTYPESNOOZEINDICATOR V1IncidentEventType = "INCIDENT_EVENT_TYPE_SNOOZE_INDICATOR"
	INCIDENTEVENTTYPEUNASSIGN        V1IncidentEventType = "INCIDENT_EVENT_TYPE_UNASSIGN"
	INCIDENTEVENTTYPEUNSPECIFIED     V1IncidentEventType = "INCIDENT_EVENT_TYPE_UNSPECIFIED"
	INCIDENTEVENTTYPEUPSERTSTATE     V1IncidentEventType = "INCIDENT_EVENT_TYPE_UPSERT_STATE"
)

// Defines values for V1IncidentFields.
const (
	INCIDENTSFIELDSAPPLICATIONNAME     V1IncidentFields = "INCIDENTS_FIELDS_APPLICATION_NAME"
	INCIDENTSFIELDSCLOSEDTIME          V1IncidentFields = "INCIDENTS_FIELDS_CLOSED_TIME"
	INCIDENTSFIELDSCREATEDTIME         V1IncidentFields = "INCIDENTS_FIELDS_CREATED_TIME"
	INCIDENTSFIELDSDURATION            V1IncidentFields = "INCIDENTS_FIELDS_DURATION"
	INCIDENTSFIELDSID                  V1IncidentFields = "INCIDENTS_FIELDS_ID"
	INCIDENTSFIELDSLASTSTATEUPDATETIME V1IncidentFields = "INCIDENTS_FIELDS_LAST_STATE_UPDATE_TIME"
	INCIDENTSFIELDSNAME                V1IncidentFields = "INCIDENTS_FIELDS_NAME"
	INCIDENTSFIELDSSEVERITY            V1IncidentFields = "INCIDENTS_FIELDS_SEVERITY"
	INCIDENTSFIELDSSTATE               V1IncidentFields = "INCIDENTS_FIELDS_STATE"
	INCIDENTSFIELDSSTATUS              V1IncidentFields = "INCIDENTS_FIELDS_STATUS"
	INCIDENTSFIELDSSUBSYSTEMNAME       V1IncidentFields = "INCIDENTS_FIELDS_SUBSYSTEM_NAME"
	INCIDENTSFIELDSUNSPECIFIED         V1IncidentFields = "INCIDENTS_FIELDS_UNSPECIFIED"
)

// Defines values for V1IncidentSeverity.
const (
	INCIDENTSEVERITYCRITICAL    V1IncidentSeverity = "INCIDENT_SEVERITY_CRITICAL"
	INCIDENTSEVERITYERROR       V1IncidentSeverity = "INCIDENT_SEVERITY_ERROR"
	INCIDENTSEVERITYINFO        V1IncidentSeverity = "INCIDENT_SEVERITY_INFO"
	INCIDENTSEVERITYLOW         V1IncidentSeverity = "INCIDENT_SEVERITY_LOW"
	INCIDENTSEVERITYUNSPECIFIED V1IncidentSeverity = "INCIDENT_SEVERITY_UNSPECIFIED"
	INCIDENTSEVERITYWARNING     V1IncidentSeverity = "INCIDENT_SEVERITY_WARNING"
)

// Defines values for V1IncidentState.
const (
	INCIDENTSTATERESOLVED    V1IncidentState = "INCIDENT_STATE_RESOLVED"
	INCIDENTSTATETRIGGERED   V1IncidentState = "INCIDENT_STATE_TRIGGERED"
	INCIDENTSTATEUNSPECIFIED V1IncidentState = "INCIDENT_STATE_UNSPECIFIED"
)

// Defines values for V1IncidentStatus.
const (
	INCIDENTSTATUSACKNOWLEDGED V1IncidentStatus = "INCIDENT_STATUS_ACKNOWLEDGED"
	INCIDENTSTATUSRESOLVED     V1IncidentStatus = "INCIDENT_STATUS_RESOLVED"
	INCIDENTSTATUSTRIGGERED    V1IncidentStatus = "INCIDENT_STATUS_TRIGGERED"
	INCIDENTSTATUSUNSPECIFIED  V1IncidentStatus = "INCIDENT_STATUS_UNSPECIFIED"
)

// Defines values for V1OriginatorType.
const (
	ORIGINATORTYPEADMINISTRATIVE V1OriginatorType = "ORIGINATOR_TYPE_ADMINISTRATIVE"
	ORIGINATORTYPEOPERATIONAL    V1OriginatorType = "ORIGINATOR_TYPE_OPERATIONAL"
	ORIGINATORTYPEUNSPECIFIED    V1OriginatorType = "ORIGINATOR_TYPE_UNSPECIFIED"
)

// Defines values for V1PresetType.
const (
	V1PresetTypeCUSTOM                V1PresetType = "CUSTOM"
	V1PresetTypePRESETTYPEUNSPECIFIED V1PresetType = "PRESET_TYPE_UNSPECIFIED"
	V1PresetTypeSYSTEM                V1PresetType = "SYSTEM"
)

// Defines values for V1RuleTypeId.
const (
	RULETYPEIDINCLUDES    V1RuleTypeId = "RULE_TYPE_ID_INCLUDES"
	RULETYPEIDIS          V1RuleTypeId = "RULE_TYPE_ID_IS"
	RULETYPEIDISNOT       V1RuleTypeId = "RULE_TYPE_ID_IS_NOT"
	RULETYPEIDSTARTWITH   V1RuleTypeId = "RULE_TYPE_ID_START_WITH"
	RULETYPEIDUNSPECIFIED V1RuleTypeId = "RULE_TYPE_ID_UNSPECIFIED"
)

// Defines values for V1SeverityConstraintValue.
const (
	VALUECRITICAL           V1SeverityConstraintValue = "VALUE_CRITICAL"
	VALUEDEBUGORUNSPECIFIED V1SeverityConstraintValue = "VALUE_DEBUG_OR_UNSPECIFIED"
	VALUEERROR              V1SeverityConstraintValue = "VALUE_ERROR"
	VALUEINFO               V1SeverityConstraintValue = "VALUE_INFO"
	VALUEVERBOSE            V1SeverityConstraintValue = "VALUE_VERBOSE"
	VALUEWARNING            V1SeverityConstraintValue = "VALUE_WARNING"
)

// Defines values for V1SloTimeFrame.
const (
	SLOTIMEFRAME14DAYS      V1SloTimeFrame = "SLO_TIME_FRAME_14_DAYS"
	SLOTIMEFRAME21DAYS      V1SloTimeFrame = "SLO_TIME_FRAME_21_DAYS"
	SLOTIMEFRAME28DAYS      V1SloTimeFrame = "SLO_TIME_FRAME_28_DAYS"
	SLOTIMEFRAME7DAYS       V1SloTimeFrame = "SLO_TIME_FRAME_7_DAYS"
	SLOTIMEFRAMEUNSPECIFIED V1SloTimeFrame = "SLO_TIME_FRAME_UNSPECIFIED"
)

// Defines values for V1TargetDomain.
const (
	ACTION            V1TargetDomain = "ACTION"
	ALERT             V1TargetDomain = "ALERT"
	ALERTV3           V1TargetDomain = "ALERT_V3"
	CXCUSTOMDASHBOARD V1TargetDomain = "CX_CUSTOM_DASHBOARD"
	ENRICHMENT        V1TargetDomain = "ENRICHMENT"
	EVENTSTOMETRICS   V1TargetDomain = "EVENTS_TO_METRICS"
	GRAFANADASHBOARD  V1TargetDomain = "GRAFANA_DASHBOARD"
	KIBANADASHBOARD   V1TargetDomain = "KIBANA_DASHBOARD"
	METRICSRULEGROUP  V1TargetDomain = "METRICS_RULE_GROUP"
	PARSINGRULE       V1TargetDomain = "PARSING_RULE"
	SAVEDVIEW         V1TargetDomain = "SAVED_VIEW"
)

// Defines values for V1UpsertIncidentStateType.
const (
	UPSERTINCIDENTSTATETYPERESOLVED    V1UpsertIncidentStateType = "UPSERT_INCIDENT_STATE_TYPE_RESOLVED"
	UPSERTINCIDENTSTATETYPETRIGGERED   V1UpsertIncidentStateType = "UPSERT_INCIDENT_STATE_TYPE_TRIGGERED"
	UPSERTINCIDENTSTATETYPEUNSPECIFIED V1UpsertIncidentStateType = "UPSERT_INCIDENT_STATE_TYPE_UNSPECIFIED"
)

// Defines values for V1UserStatus.
const (
	USERSTATUSACTIVE      V1UserStatus = "USER_STATUS_ACTIVE"
	USERSTATUSINACTIVE    V1UserStatus = "USER_STATUS_INACTIVE"
	USERSTATUSUNSPECIFIED V1UserStatus = "USER_STATUS_UNSPECIFIED"
)

// Defines values for V1WebhookType.
const (
	V1WebhookTypeAWSEVENTBRIDGE        V1WebhookType = "AWS_EVENT_BRIDGE"
	V1WebhookTypeDEMISTO               V1WebhookType = "DEMISTO"
	V1WebhookTypeEMAILGROUP            V1WebhookType = "EMAIL_GROUP"
	V1WebhookTypeGENERIC               V1WebhookType = "GENERIC"
	V1WebhookTypeIBMEVENTNOTIFICATIONS V1WebhookType = "IBM_EVENT_NOTIFICATIONS"
	V1WebhookTypeJIRA                  V1WebhookType = "JIRA"
	V1WebhookTypeMICROSOFTTEAMS        V1WebhookType = "MICROSOFT_TEAMS"
	V1WebhookTypeMSTEAMSWORKFLOW       V1WebhookType = "MS_TEAMS_WORKFLOW"
	V1WebhookTypeOPSGENIE              V1WebhookType = "OPSGENIE"
	V1WebhookTypePAGERDUTY             V1WebhookType = "PAGERDUTY"
	V1WebhookTypeSENDLOG               V1WebhookType = "SEND_LOG"
	V1WebhookTypeSLACK                 V1WebhookType = "SLACK"
	V1WebhookTypeUNKNOWN               V1WebhookType = "UNKNOWN"
)

// Defines values for V1WindowSloWindow.
const (
	WINDOWSLOWINDOW1MINUTE     V1WindowSloWindow = "WINDOW_SLO_WINDOW_1_MINUTE"
	WINDOWSLOWINDOW5MINUTES    V1WindowSloWindow = "WINDOW_SLO_WINDOW_5_MINUTES"
	WINDOWSLOWINDOWUNSPECIFIED V1WindowSloWindow = "WINDOW_SLO_WINDOW_UNSPECIFIED"
)

// Defines values for V1commonDatasetScope.
const (
	DATASETSCOPELABEL       V1commonDatasetScope = "DATASET_SCOPE_LABEL"
	DATASETSCOPEMETADATA    V1commonDatasetScope = "DATASET_SCOPE_METADATA"
	DATASETSCOPEUNSPECIFIED V1commonDatasetScope = "DATASET_SCOPE_UNSPECIFIED"
	DATASETSCOPEUSERDATA    V1commonDatasetScope = "DATASET_SCOPE_USER_DATA"
)

// Defines values for V2E2MType.
const (
	E2MTYPELOGS2METRICS  V2E2MType = "E2M_TYPE_LOGS2METRICS"
	E2MTYPESPANS2METRICS V2E2MType = "E2M_TYPE_SPANS2METRICS"
	E2MTYPEUNSPECIFIED   V2E2MType = "E2M_TYPE_UNSPECIFIED"
)

// Defines values for V2IbmBucketType.
const (
	IBMBUCKETTYPEEXTERNAL    V2IbmBucketType = "IBM_BUCKET_TYPE_EXTERNAL"
	IBMBUCKETTYPEINTERNAL    V2IbmBucketType = "IBM_BUCKET_TYPE_INTERNAL"
	IBMBUCKETTYPEUNSPECIFIED V2IbmBucketType = "IBM_BUCKET_TYPE_UNSPECIFIED"
)

// Defines values for V3ActivityAnalysisStatus.
const (
	ACTIVITYANALYSISSTATUSACTIVATEORUNSPECIFIED V3ActivityAnalysisStatus = "ACTIVITY_ANALYSIS_STATUS_ACTIVATE_OR_UNSPECIFIED"
	ACTIVITYANALYSISSTATUSMUTE                  V3ActivityAnalysisStatus = "ACTIVITY_ANALYSIS_STATUS_MUTE"
)

// Defines values for V3AlertDefPriority.
const (
	ALERTDEFPRIORITYP1              V3AlertDefPriority = "ALERT_DEF_PRIORITY_P1"
	ALERTDEFPRIORITYP2              V3AlertDefPriority = "ALERT_DEF_PRIORITY_P2"
	ALERTDEFPRIORITYP3              V3AlertDefPriority = "ALERT_DEF_PRIORITY_P3"
	ALERTDEFPRIORITYP4              V3AlertDefPriority = "ALERT_DEF_PRIORITY_P4"
	ALERTDEFPRIORITYP5ORUNSPECIFIED V3AlertDefPriority = "ALERT_DEF_PRIORITY_P5_OR_UNSPECIFIED"
)

// Defines values for V3AlertDefType.
const (
	ALERTDEFTYPEFLOW                       V3AlertDefType = "ALERT_DEF_TYPE_FLOW"
	ALERTDEFTYPELOGSANOMALY                V3AlertDefType = "ALERT_DEF_TYPE_LOGS_ANOMALY"
	ALERTDEFTYPELOGSIMMEDIATEORUNSPECIFIED V3AlertDefType = "ALERT_DEF_TYPE_LOGS_IMMEDIATE_OR_UNSPECIFIED"
	ALERTDEFTYPELOGSNEWVALUE               V3AlertDefType = "ALERT_DEF_TYPE_LOGS_NEW_VALUE"
	ALERTDEFTYPELOGSRATIOTHRESHOLD         V3AlertDefType = "ALERT_DEF_TYPE_LOGS_RATIO_THRESHOLD"
	ALERTDEFTYPELOGSTHRESHOLD              V3AlertDefType = "ALERT_DEF_TYPE_LOGS_THRESHOLD"
	ALERTDEFTYPELOGSTIMERELATIVETHRESHOLD  V3AlertDefType = "ALERT_DEF_TYPE_LOGS_TIME_RELATIVE_THRESHOLD"
	ALERTDEFTYPELOGSUNIQUECOUNT            V3AlertDefType = "ALERT_DEF_TYPE_LOGS_UNIQUE_COUNT"
	ALERTDEFTYPEMETRICANOMALY              V3AlertDefType = "ALERT_DEF_TYPE_METRIC_ANOMALY"
	ALERTDEFTYPEMETRICTHRESHOLD            V3AlertDefType = "ALERT_DEF_TYPE_METRIC_THRESHOLD"
	ALERTDEFTYPESLOTHRESHOLD               V3AlertDefType = "ALERT_DEF_TYPE_SLO_THRESHOLD"
	ALERTDEFTYPETRACINGIMMEDIATE           V3AlertDefType = "ALERT_DEF_TYPE_TRACING_IMMEDIATE"
	ALERTDEFTYPETRACINGTHRESHOLD           V3AlertDefType = "ALERT_DEF_TYPE_TRACING_THRESHOLD"
)

// Defines values for V3AlertStatus.
const (
	ALERTSTATUSRESOLVEDORUNSPECIFIED V3AlertStatus = "ALERT_STATUS_RESOLVED_OR_UNSPECIFIED"
	ALERTSTATUSTRIGGERED             V3AlertStatus = "ALERT_STATUS_TRIGGERED"
)

// Defines values for V3AlertsOp.
const (
	ALERTSOPANDORUNSPECIFIED V3AlertsOp = "ALERTS_OP_AND_OR_UNSPECIFIED"
	ALERTSOPOR               V3AlertsOp = "ALERTS_OP_OR"
)

// Defines values for V3DayOfWeek.
const (
	DAYOFWEEKFRIDAY              V3DayOfWeek = "DAY_OF_WEEK_FRIDAY"
	DAYOFWEEKMONDAYORUNSPECIFIED V3DayOfWeek = "DAY_OF_WEEK_MONDAY_OR_UNSPECIFIED"
	DAYOFWEEKSATURDAY            V3DayOfWeek = "DAY_OF_WEEK_SATURDAY"
	DAYOFWEEKSUNDAY              V3DayOfWeek = "DAY_OF_WEEK_SUNDAY"
	DAYOFWEEKTHURSDAY            V3DayOfWeek = "DAY_OF_WEEK_THURSDAY"
	DAYOFWEEKTUESDAY             V3DayOfWeek = "DAY_OF_WEEK_TUESDAY"
	DAYOFWEEKWEDNESDAY           V3DayOfWeek = "DAY_OF_WEEK_WEDNESDAY"
)

// Defines values for V3DurationUnit.
const (
	DURATIONUNITHOURS       V3DurationUnit = "DURATION_UNIT_HOURS"
	DURATIONUNITUNSPECIFIED V3DurationUnit = "DURATION_UNIT_UNSPECIFIED"
)

// Defines values for V3FilterMatcher.
const (
	FILTERMATCHERREGEXP            V3FilterMatcher = "FILTER_MATCHER_REGEXP"
	FILTERMATCHERTEXTORUNSPECIFIED V3FilterMatcher = "FILTER_MATCHER_TEXT_OR_UNSPECIFIED"
)

// Defines values for V3LogFilterOperationType.
const (
	LOGFILTEROPERATIONTYPEENDSWITH        V3LogFilterOperationType = "LOG_FILTER_OPERATION_TYPE_ENDS_WITH"
	LOGFILTEROPERATIONTYPEINCLUDES        V3LogFilterOperationType = "LOG_FILTER_OPERATION_TYPE_INCLUDES"
	LOGFILTEROPERATIONTYPEISORUNSPECIFIED V3LogFilterOperationType = "LOG_FILTER_OPERATION_TYPE_IS_OR_UNSPECIFIED"
	LOGFILTEROPERATIONTYPESTARTSWITH      V3LogFilterOperationType = "LOG_FILTER_OPERATION_TYPE_STARTS_WITH"
)

// Defines values for V3LogSeverity.
const (
	LOGSEVERITYCRITICAL           V3LogSeverity = "LOG_SEVERITY_CRITICAL"
	LOGSEVERITYDEBUG              V3LogSeverity = "LOG_SEVERITY_DEBUG"
	LOGSEVERITYERROR              V3LogSeverity = "LOG_SEVERITY_ERROR"
	LOGSEVERITYINFO               V3LogSeverity = "LOG_SEVERITY_INFO"
	LOGSEVERITYVERBOSEUNSPECIFIED V3LogSeverity = "LOG_SEVERITY_VERBOSE_UNSPECIFIED"
	LOGSEVERITYWARNING            V3LogSeverity = "LOG_SEVERITY_WARNING"
)

// Defines values for V3LogsAnomalyConditionType.
const (
	LOGSANOMALYCONDITIONTYPEMORETHANUSUALORUNSPECIFIED V3LogsAnomalyConditionType = "LOGS_ANOMALY_CONDITION_TYPE_MORE_THAN_USUAL_OR_UNSPECIFIED"
)

// Defines values for V3LogsNewValueTimeWindowValue.
const (
	LOGSNEWVALUETIMEWINDOWVALUEHOURS12ORUNSPECIFIED V3LogsNewValueTimeWindowValue = "LOGS_NEW_VALUE_TIME_WINDOW_VALUE_HOURS_12_OR_UNSPECIFIED"
	LOGSNEWVALUETIMEWINDOWVALUEHOURS24              V3LogsNewValueTimeWindowValue = "LOGS_NEW_VALUE_TIME_WINDOW_VALUE_HOURS_24"
	LOGSNEWVALUETIMEWINDOWVALUEHOURS48              V3LogsNewValueTimeWindowValue = "LOGS_NEW_VALUE_TIME_WINDOW_VALUE_HOURS_48"
	LOGSNEWVALUETIMEWINDOWVALUEHOURS72              V3LogsNewValueTimeWindowValue = "LOGS_NEW_VALUE_TIME_WINDOW_VALUE_HOURS_72"
	LOGSNEWVALUETIMEWINDOWVALUEMONTH1               V3LogsNewValueTimeWindowValue = "LOGS_NEW_VALUE_TIME_WINDOW_VALUE_MONTH_1"
	LOGSNEWVALUETIMEWINDOWVALUEMONTHS2              V3LogsNewValueTimeWindowValue = "LOGS_NEW_VALUE_TIME_WINDOW_VALUE_MONTHS_2"
	LOGSNEWVALUETIMEWINDOWVALUEMONTHS3              V3LogsNewValueTimeWindowValue = "LOGS_NEW_VALUE_TIME_WINDOW_VALUE_MONTHS_3"
	LOGSNEWVALUETIMEWINDOWVALUEWEEK1                V3LogsNewValueTimeWindowValue = "LOGS_NEW_VALUE_TIME_WINDOW_VALUE_WEEK_1"
)

// Defines values for V3LogsRatioConditionType.
const (
	LOGSRATIOCONDITIONTYPELESSTHAN              V3LogsRatioConditionType = "LOGS_RATIO_CONDITION_TYPE_LESS_THAN"
	LOGSRATIOCONDITIONTYPEMORETHANORUNSPECIFIED V3LogsRatioConditionType = "LOGS_RATIO_CONDITION_TYPE_MORE_THAN_OR_UNSPECIFIED"
)

// Defines values for V3LogsRatioGroupByFor.
const (
	LOGSRATIOGROUPBYFORBOTHORUNSPECIFIED V3LogsRatioGroupByFor = "LOGS_RATIO_GROUP_BY_FOR_BOTH_OR_UNSPECIFIED"
	LOGSRATIOGROUPBYFORDENUMERATORONLY   V3LogsRatioGroupByFor = "LOGS_RATIO_GROUP_BY_FOR_DENUMERATOR_ONLY"
	LOGSRATIOGROUPBYFORNUMERATORONLY     V3LogsRatioGroupByFor = "LOGS_RATIO_GROUP_BY_FOR_NUMERATOR_ONLY"
)

// Defines values for V3LogsRatioTimeWindowValue.
const (
	LOGSRATIOTIMEWINDOWVALUEHOUR1                 V3LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_HOUR_1"
	LOGSRATIOTIMEWINDOWVALUEHOURS12               V3LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_12"
	LOGSRATIOTIMEWINDOWVALUEHOURS2                V3LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_2"
	LOGSRATIOTIMEWINDOWVALUEHOURS24               V3LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_24"
	LOGSRATIOTIMEWINDOWVALUEHOURS36               V3LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_36"
	LOGSRATIOTIMEWINDOWVALUEHOURS4                V3LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_4"
	LOGSRATIOTIMEWINDOWVALUEHOURS6                V3LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_6"
	LOGSRATIOTIMEWINDOWVALUEMINUTES10             V3LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_MINUTES_10"
	LOGSRATIOTIMEWINDOWVALUEMINUTES15             V3LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_MINUTES_15"
	LOGSRATIOTIMEWINDOWVALUEMINUTES30             V3LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_MINUTES_30"
	LOGSRATIOTIMEWINDOWVALUEMINUTES5ORUNSPECIFIED V3LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_MINUTES_5_OR_UNSPECIFIED"
)

// Defines values for V3LogsThresholdConditionType.
const (
	LOGSTHRESHOLDCONDITIONTYPELESSTHAN              V3LogsThresholdConditionType = "LOGS_THRESHOLD_CONDITION_TYPE_LESS_THAN"
	LOGSTHRESHOLDCONDITIONTYPEMORETHANORUNSPECIFIED V3LogsThresholdConditionType = "LOGS_THRESHOLD_CONDITION_TYPE_MORE_THAN_OR_UNSPECIFIED"
)

// Defines values for V3LogsTimeRelativeComparedTo.
const (
	LOGSTIMERELATIVECOMPAREDTOPREVIOUSHOURORUNSPECIFIED V3LogsTimeRelativeComparedTo = "LOGS_TIME_RELATIVE_COMPARED_TO_PREVIOUS_HOUR_OR_UNSPECIFIED"
	LOGSTIMERELATIVECOMPAREDTOSAMEDAYLASTMONTH          V3LogsTimeRelativeComparedTo = "LOGS_TIME_RELATIVE_COMPARED_TO_SAME_DAY_LAST_MONTH"
	LOGSTIMERELATIVECOMPAREDTOSAMEDAYLASTWEEK           V3LogsTimeRelativeComparedTo = "LOGS_TIME_RELATIVE_COMPARED_TO_SAME_DAY_LAST_WEEK"
	LOGSTIMERELATIVECOMPAREDTOSAMEHOURLASTWEEK          V3LogsTimeRelativeComparedTo = "LOGS_TIME_RELATIVE_COMPARED_TO_SAME_HOUR_LAST_WEEK"
	LOGSTIMERELATIVECOMPAREDTOSAMEHOURYESTERDAY         V3LogsTimeRelativeComparedTo = "LOGS_TIME_RELATIVE_COMPARED_TO_SAME_HOUR_YESTERDAY"
	LOGSTIMERELATIVECOMPAREDTOYESTERDAY                 V3LogsTimeRelativeComparedTo = "LOGS_TIME_RELATIVE_COMPARED_TO_YESTERDAY"
)

// Defines values for V3LogsTimeRelativeConditionType.
const (
	LOGSTIMERELATIVECONDITIONTYPELESSTHAN              V3LogsTimeRelativeConditionType = "LOGS_TIME_RELATIVE_CONDITION_TYPE_LESS_THAN"
	LOGSTIMERELATIVECONDITIONTYPEMORETHANORUNSPECIFIED V3LogsTimeRelativeConditionType = "LOGS_TIME_RELATIVE_CONDITION_TYPE_MORE_THAN_OR_UNSPECIFIED"
)

// Defines values for V3LogsTimeWindowValue.
const (
	LOGSTIMEWINDOWVALUEHOUR1                 V3LogsTimeWindowValue = "LOGS_TIME_WINDOW_VALUE_HOUR_1"
	LOGSTIMEWINDOWVALUEHOURS12               V3LogsTimeWindowValue = "LOGS_TIME_WINDOW_VALUE_HOURS_12"
	LOGSTIMEWINDOWVALUEHOURS2                V3LogsTimeWindowValue = "LOGS_TIME_WINDOW_VALUE_HOURS_2"
	LOGSTIMEWINDOWVALUEHOURS24               V3LogsTimeWindowValue = "LOGS_TIME_WINDOW_VALUE_HOURS_24"
	LOGSTIMEWINDOWVALUEHOURS36               V3LogsTimeWindowValue = "LOGS_TIME_WINDOW_VALUE_HOURS_36"
	LOGSTIMEWINDOWVALUEHOURS4                V3LogsTimeWindowValue = "LOGS_TIME_WINDOW_VALUE_HOURS_4"
	LOGSTIMEWINDOWVALUEHOURS6                V3LogsTimeWindowValue = "LOGS_TIME_WINDOW_VALUE_HOURS_6"
	LOGSTIMEWINDOWVALUEMINUTES10             V3LogsTimeWindowValue = "LOGS_TIME_WINDOW_VALUE_MINUTES_10"
	LOGSTIMEWINDOWVALUEMINUTES15             V3LogsTimeWindowValue = "LOGS_TIME_WINDOW_VALUE_MINUTES_15"
	LOGSTIMEWINDOWVALUEMINUTES20             V3LogsTimeWindowValue = "LOGS_TIME_WINDOW_VALUE_MINUTES_20"
	LOGSTIMEWINDOWVALUEMINUTES30             V3LogsTimeWindowValue = "LOGS_TIME_WINDOW_VALUE_MINUTES_30"
	LOGSTIMEWINDOWVALUEMINUTES5ORUNSPECIFIED V3LogsTimeWindowValue = "LOGS_TIME_WINDOW_VALUE_MINUTES_5_OR_UNSPECIFIED"
)

// Defines values for V3LogsUniqueValueTimeWindowValue.
const (
	LOGSUNIQUEVALUETIMEWINDOWVALUEHOURS1               V3LogsUniqueValueTimeWindowValue = "LOGS_UNIQUE_VALUE_TIME_WINDOW_VALUE_HOURS_1"
	LOGSUNIQUEVALUETIMEWINDOWVALUEHOURS12              V3LogsUniqueValueTimeWindowValue = "LOGS_UNIQUE_VALUE_TIME_WINDOW_VALUE_HOURS_12"
	LOGSUNIQUEVALUETIMEWINDOWVALUEHOURS2               V3LogsUniqueValueTimeWindowValue = "LOGS_UNIQUE_VALUE_TIME_WINDOW_VALUE_HOURS_2"
	LOGSUNIQUEVALUETIMEWINDOWVALUEHOURS24              V3LogsUniqueValueTimeWindowValue = "LOGS_UNIQUE_VALUE_TIME_WINDOW_VALUE_HOURS_24"
	LOGSUNIQUEVALUETIMEWINDOWVALUEHOURS36              V3LogsUniqueValueTimeWindowValue = "LOGS_UNIQUE_VALUE_TIME_WINDOW_VALUE_HOURS_36"
	LOGSUNIQUEVALUETIMEWINDOWVALUEHOURS4               V3LogsUniqueValueTimeWindowValue = "LOGS_UNIQUE_VALUE_TIME_WINDOW_VALUE_HOURS_4"
	LOGSUNIQUEVALUETIMEWINDOWVALUEHOURS6               V3LogsUniqueValueTimeWindowValue = "LOGS_UNIQUE_VALUE_TIME_WINDOW_VALUE_HOURS_6"
	LOGSUNIQUEVALUETIMEWINDOWVALUEMINUTE1ORUNSPECIFIED V3LogsUniqueValueTimeWindowValue = "LOGS_UNIQUE_VALUE_TIME_WINDOW_VALUE_MINUTE_1_OR_UNSPECIFIED"
	LOGSUNIQUEVALUETIMEWINDOWVALUEMINUTES10            V3LogsUniqueValueTimeWindowValue = "LOGS_UNIQUE_VALUE_TIME_WINDOW_VALUE_MINUTES_10"
	LOGSUNIQUEVALUETIMEWINDOWVALUEMINUTES15            V3LogsUniqueValueTimeWindowValue = "LOGS_UNIQUE_VALUE_TIME_WINDOW_VALUE_MINUTES_15"
	LOGSUNIQUEVALUETIMEWINDOWVALUEMINUTES20            V3LogsUniqueValueTimeWindowValue = "LOGS_UNIQUE_VALUE_TIME_WINDOW_VALUE_MINUTES_20"
	LOGSUNIQUEVALUETIMEWINDOWVALUEMINUTES30            V3LogsUniqueValueTimeWindowValue = "LOGS_UNIQUE_VALUE_TIME_WINDOW_VALUE_MINUTES_30"
	LOGSUNIQUEVALUETIMEWINDOWVALUEMINUTES5             V3LogsUniqueValueTimeWindowValue = "LOGS_UNIQUE_VALUE_TIME_WINDOW_VALUE_MINUTES_5"
)

// Defines values for V3MetricAnomalyConditionType.
const (
	METRICANOMALYCONDITIONTYPELESSTHANUSUAL              V3MetricAnomalyConditionType = "METRIC_ANOMALY_CONDITION_TYPE_LESS_THAN_USUAL"
	METRICANOMALYCONDITIONTYPEMORETHANUSUALORUNSPECIFIED V3MetricAnomalyConditionType = "METRIC_ANOMALY_CONDITION_TYPE_MORE_THAN_USUAL_OR_UNSPECIFIED"
)

// Defines values for V3MetricThresholdConditionType.
const (
	METRICTHRESHOLDCONDITIONTYPELESSTHAN              V3MetricThresholdConditionType = "METRIC_THRESHOLD_CONDITION_TYPE_LESS_THAN"
	METRICTHRESHOLDCONDITIONTYPELESSTHANOREQUALS      V3MetricThresholdConditionType = "METRIC_THRESHOLD_CONDITION_TYPE_LESS_THAN_OR_EQUALS"
	METRICTHRESHOLDCONDITIONTYPEMORETHANOREQUALS      V3MetricThresholdConditionType = "METRIC_THRESHOLD_CONDITION_TYPE_MORE_THAN_OR_EQUALS"
	METRICTHRESHOLDCONDITIONTYPEMORETHANORUNSPECIFIED V3MetricThresholdConditionType = "METRIC_THRESHOLD_CONDITION_TYPE_MORE_THAN_OR_UNSPECIFIED"
)

// Defines values for V3MetricTimeWindowValue.
const (
	METRICTIMEWINDOWVALUEHOUR1                 V3MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_HOUR_1"
	METRICTIMEWINDOWVALUEHOURS12               V3MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_HOURS_12"
	METRICTIMEWINDOWVALUEHOURS2                V3MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_HOURS_2"
	METRICTIMEWINDOWVALUEHOURS24               V3MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_HOURS_24"
	METRICTIMEWINDOWVALUEHOURS36               V3MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_HOURS_36"
	METRICTIMEWINDOWVALUEHOURS4                V3MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_HOURS_4"
	METRICTIMEWINDOWVALUEHOURS6                V3MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_HOURS_6"
	METRICTIMEWINDOWVALUEMINUTES10             V3MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_MINUTES_10"
	METRICTIMEWINDOWVALUEMINUTES15             V3MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_MINUTES_15"
	METRICTIMEWINDOWVALUEMINUTES1ORUNSPECIFIED V3MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_MINUTES_1_OR_UNSPECIFIED"
	METRICTIMEWINDOWVALUEMINUTES20             V3MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_MINUTES_20"
	METRICTIMEWINDOWVALUEMINUTES30             V3MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_MINUTES_30"
	METRICTIMEWINDOWVALUEMINUTES5              V3MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_MINUTES_5"
)

// Defines values for V3NextOp.
const (
	NEXTOPANDORUNSPECIFIED V3NextOp = "NEXT_OP_AND_OR_UNSPECIFIED"
	NEXTOPOR               V3NextOp = "NEXT_OP_OR"
)

// Defines values for V3NotifyOn.
const (
	NOTIFYONTRIGGEREDANDRESOLVED     V3NotifyOn = "NOTIFY_ON_TRIGGERED_AND_RESOLVED"
	NOTIFYONTRIGGEREDONLYUNSPECIFIED V3NotifyOn = "NOTIFY_ON_TRIGGERED_ONLY_UNSPECIFIED"
)

// Defines values for V3TimeframeType.
const (
	TIMEFRAMETYPEUNSPECIFIED V3TimeframeType = "TIMEFRAME_TYPE_UNSPECIFIED"
	TIMEFRAMETYPEUPTO        V3TimeframeType = "TIMEFRAME_TYPE_UP_TO"
)

// Defines values for V3TracingFilterOperationType.
const (
	TRACINGFILTEROPERATIONTYPEENDSWITH        V3TracingFilterOperationType = "TRACING_FILTER_OPERATION_TYPE_ENDS_WITH"
	TRACINGFILTEROPERATIONTYPEINCLUDES        V3TracingFilterOperationType = "TRACING_FILTER_OPERATION_TYPE_INCLUDES"
	TRACINGFILTEROPERATIONTYPEISNOT           V3TracingFilterOperationType = "TRACING_FILTER_OPERATION_TYPE_IS_NOT"
	TRACINGFILTEROPERATIONTYPEISORUNSPECIFIED V3TracingFilterOperationType = "TRACING_FILTER_OPERATION_TYPE_IS_OR_UNSPECIFIED"
	TRACINGFILTEROPERATIONTYPESTARTSWITH      V3TracingFilterOperationType = "TRACING_FILTER_OPERATION_TYPE_STARTS_WITH"
)

// Defines values for V3TracingThresholdConditionType.
const (
	TRACINGTHRESHOLDCONDITIONTYPEMORETHANORUNSPECIFIED V3TracingThresholdConditionType = "TRACING_THRESHOLD_CONDITION_TYPE_MORE_THAN_OR_UNSPECIFIED"
)

// Defines values for V3TracingTimeWindowValue.
const (
	TRACINGTIMEWINDOWVALUEHOUR1                 V3TracingTimeWindowValue = "TRACING_TIME_WINDOW_VALUE_HOUR_1"
	TRACINGTIMEWINDOWVALUEHOURS12               V3TracingTimeWindowValue = "TRACING_TIME_WINDOW_VALUE_HOURS_12"
	TRACINGTIMEWINDOWVALUEHOURS2                V3TracingTimeWindowValue = "TRACING_TIME_WINDOW_VALUE_HOURS_2"
	TRACINGTIMEWINDOWVALUEHOURS24               V3TracingTimeWindowValue = "TRACING_TIME_WINDOW_VALUE_HOURS_24"
	TRACINGTIMEWINDOWVALUEHOURS36               V3TracingTimeWindowValue = "TRACING_TIME_WINDOW_VALUE_HOURS_36"
	TRACINGTIMEWINDOWVALUEHOURS4                V3TracingTimeWindowValue = "TRACING_TIME_WINDOW_VALUE_HOURS_4"
	TRACINGTIMEWINDOWVALUEHOURS6                V3TracingTimeWindowValue = "TRACING_TIME_WINDOW_VALUE_HOURS_6"
	TRACINGTIMEWINDOWVALUEMINUTES10             V3TracingTimeWindowValue = "TRACING_TIME_WINDOW_VALUE_MINUTES_10"
	TRACINGTIMEWINDOWVALUEMINUTES15             V3TracingTimeWindowValue = "TRACING_TIME_WINDOW_VALUE_MINUTES_15"
	TRACINGTIMEWINDOWVALUEMINUTES20             V3TracingTimeWindowValue = "TRACING_TIME_WINDOW_VALUE_MINUTES_20"
	TRACINGTIMEWINDOWVALUEMINUTES30             V3TracingTimeWindowValue = "TRACING_TIME_WINDOW_VALUE_MINUTES_30"
	TRACINGTIMEWINDOWVALUEMINUTES5ORUNSPECIFIED V3TracingTimeWindowValue = "TRACING_TIME_WINDOW_VALUE_MINUTES_5_OR_UNSPECIFIED"
)

// Defines values for WidgetsBarValueDisplay.
const (
	BARVALUEDISPLAYBOTH        WidgetsBarValueDisplay = "BAR_VALUE_DISPLAY_BOTH"
	BARVALUEDISPLAYINSIDE      WidgetsBarValueDisplay = "BAR_VALUE_DISPLAY_INSIDE"
	BARVALUEDISPLAYTOP         WidgetsBarValueDisplay = "BAR_VALUE_DISPLAY_TOP"
	BARVALUEDISPLAYUNSPECIFIED WidgetsBarValueDisplay = "BAR_VALUE_DISPLAY_UNSPECIFIED"
)

// Defines values for WidgetsGaugeAggregation.
const (
	WidgetsGaugeAggregationAGGREGATIONAVG         WidgetsGaugeAggregation = "AGGREGATION_AVG"
	WidgetsGaugeAggregationAGGREGATIONLAST        WidgetsGaugeAggregation = "AGGREGATION_LAST"
	WidgetsGaugeAggregationAGGREGATIONMAX         WidgetsGaugeAggregation = "AGGREGATION_MAX"
	WidgetsGaugeAggregationAGGREGATIONMIN         WidgetsGaugeAggregation = "AGGREGATION_MIN"
	WidgetsGaugeAggregationAGGREGATIONSUM         WidgetsGaugeAggregation = "AGGREGATION_SUM"
	WidgetsGaugeAggregationAGGREGATIONUNSPECIFIED WidgetsGaugeAggregation = "AGGREGATION_UNSPECIFIED"
)

// Defines values for WidgetsGaugeThresholdBy.
const (
	THRESHOLDBYBACKGROUND  WidgetsGaugeThresholdBy = "THRESHOLD_BY_BACKGROUND"
	THRESHOLDBYUNSPECIFIED WidgetsGaugeThresholdBy = "THRESHOLD_BY_UNSPECIFIED"
	THRESHOLDBYVALUE       WidgetsGaugeThresholdBy = "THRESHOLD_BY_VALUE"
)

// Defines values for WidgetsGaugeUnit.
const (
	WidgetsGaugeUnitUNITBYTES              WidgetsGaugeUnit = "UNIT_BYTES"
	WidgetsGaugeUnitUNITBYTESIEC           WidgetsGaugeUnit = "UNIT_BYTES_IEC"
	WidgetsGaugeUnitUNITCUSTOM             WidgetsGaugeUnit = "UNIT_CUSTOM"
	WidgetsGaugeUnitUNITEUR                WidgetsGaugeUnit = "UNIT_EUR"
	WidgetsGaugeUnitUNITEURCENTS           WidgetsGaugeUnit = "UNIT_EUR_CENTS"
	WidgetsGaugeUnitUNITGBYTES             WidgetsGaugeUnit = "UNIT_GBYTES"
	WidgetsGaugeUnitUNITGIBYTES            WidgetsGaugeUnit = "UNIT_GIBYTES"
	WidgetsGaugeUnitUNITKBYTES             WidgetsGaugeUnit = "UNIT_KBYTES"
	WidgetsGaugeUnitUNITKIBYTES            WidgetsGaugeUnit = "UNIT_KIBYTES"
	WidgetsGaugeUnitUNITMBYTES             WidgetsGaugeUnit = "UNIT_MBYTES"
	WidgetsGaugeUnitUNITMIBYTES            WidgetsGaugeUnit = "UNIT_MIBYTES"
	WidgetsGaugeUnitUNITMICROSECONDS       WidgetsGaugeUnit = "UNIT_MICROSECONDS"
	WidgetsGaugeUnitUNITMILLISECONDS       WidgetsGaugeUnit = "UNIT_MILLISECONDS"
	WidgetsGaugeUnitUNITNANOSECONDS        WidgetsGaugeUnit = "UNIT_NANOSECONDS"
	WidgetsGaugeUnitUNITNUMBER             WidgetsGaugeUnit = "UNIT_NUMBER"
	WidgetsGaugeUnitUNITPERCENT            WidgetsGaugeUnit = "UNIT_PERCENT"
	WidgetsGaugeUnitUNITPERCENTZEROHUNDRED WidgetsGaugeUnit = "UNIT_PERCENT_ZERO_HUNDRED"
	WidgetsGaugeUnitUNITPERCENTZEROONE     WidgetsGaugeUnit = "UNIT_PERCENT_ZERO_ONE"
	WidgetsGaugeUnitUNITSECONDS            WidgetsGaugeUnit = "UNIT_SECONDS"
	WidgetsGaugeUnitUNITUNSPECIFIED        WidgetsGaugeUnit = "UNIT_UNSPECIFIED"
	WidgetsGaugeUnitUNITUSD                WidgetsGaugeUnit = "UNIT_USD"
	WidgetsGaugeUnitUNITUSDCENTS           WidgetsGaugeUnit = "UNIT_USD_CENTS"
)

// Defines values for WidgetsRowStyle.
const (
	ROWSTYLECONDENSED   WidgetsRowStyle = "ROW_STYLE_CONDENSED"
	ROWSTYLEJSON        WidgetsRowStyle = "ROW_STYLE_JSON"
	ROWSTYLELIST        WidgetsRowStyle = "ROW_STYLE_LIST"
	ROWSTYLEONELINE     WidgetsRowStyle = "ROW_STYLE_ONE_LINE"
	ROWSTYLETWOLINE     WidgetsRowStyle = "ROW_STYLE_TWO_LINE"
	ROWSTYLEUNSPECIFIED WidgetsRowStyle = "ROW_STYLE_UNSPECIFIED"
)

// Defines values for WidgetscommonAggregation.
const (
	WidgetscommonAggregationAGGREGATIONAVG         WidgetscommonAggregation = "AGGREGATION_AVG"
	WidgetscommonAggregationAGGREGATIONLAST        WidgetscommonAggregation = "AGGREGATION_LAST"
	WidgetscommonAggregationAGGREGATIONMAX         WidgetscommonAggregation = "AGGREGATION_MAX"
	WidgetscommonAggregationAGGREGATIONMIN         WidgetscommonAggregation = "AGGREGATION_MIN"
	WidgetscommonAggregationAGGREGATIONSUM         WidgetscommonAggregation = "AGGREGATION_SUM"
	WidgetscommonAggregationAGGREGATIONUNSPECIFIED WidgetscommonAggregation = "AGGREGATION_UNSPECIFIED"
)

// Defines values for WidgetscommonUnit.
const (
	WidgetscommonUnitUNITBYTES              WidgetscommonUnit = "UNIT_BYTES"
	WidgetscommonUnitUNITBYTESIEC           WidgetscommonUnit = "UNIT_BYTES_IEC"
	WidgetscommonUnitUNITCUSTOM             WidgetscommonUnit = "UNIT_CUSTOM"
	WidgetscommonUnitUNITEUR                WidgetscommonUnit = "UNIT_EUR"
	WidgetscommonUnitUNITEURCENTS           WidgetscommonUnit = "UNIT_EUR_CENTS"
	WidgetscommonUnitUNITGBYTES             WidgetscommonUnit = "UNIT_GBYTES"
	WidgetscommonUnitUNITGIBYTES            WidgetscommonUnit = "UNIT_GIBYTES"
	WidgetscommonUnitUNITKBYTES             WidgetscommonUnit = "UNIT_KBYTES"
	WidgetscommonUnitUNITKIBYTES            WidgetscommonUnit = "UNIT_KIBYTES"
	WidgetscommonUnitUNITMBYTES             WidgetscommonUnit = "UNIT_MBYTES"
	WidgetscommonUnitUNITMIBYTES            WidgetscommonUnit = "UNIT_MIBYTES"
	WidgetscommonUnitUNITMICROSECONDS       WidgetscommonUnit = "UNIT_MICROSECONDS"
	WidgetscommonUnitUNITMILLISECONDS       WidgetscommonUnit = "UNIT_MILLISECONDS"
	WidgetscommonUnitUNITNANOSECONDS        WidgetscommonUnit = "UNIT_NANOSECONDS"
	WidgetscommonUnitUNITPERCENT            WidgetscommonUnit = "UNIT_PERCENT"
	WidgetscommonUnitUNITPERCENTZEROHUNDRED WidgetscommonUnit = "UNIT_PERCENT_ZERO_HUNDRED"
	WidgetscommonUnitUNITPERCENTZEROONE     WidgetscommonUnit = "UNIT_PERCENT_ZERO_ONE"
	WidgetscommonUnitUNITSECONDS            WidgetscommonUnit = "UNIT_SECONDS"
	WidgetscommonUnitUNITUNSPECIFIED        WidgetscommonUnit = "UNIT_UNSPECIFIED"
	WidgetscommonUnitUNITUSD                WidgetscommonUnit = "UNIT_USD"
	WidgetscommonUnitUNITUSDCENTS           WidgetscommonUnit = "UNIT_USD_CENTS"
)

// Defines values for Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFilters.
const (
	Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFiltersSEVERITYCRITICAL    Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFilters = "SEVERITY_CRITICAL"
	Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFiltersSEVERITYDEBUG       Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFilters = "SEVERITY_DEBUG"
	Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFiltersSEVERITYERROR       Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFilters = "SEVERITY_ERROR"
	Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFiltersSEVERITYINFO        Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFilters = "SEVERITY_INFO"
	Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFiltersSEVERITYUNSPECIFIED Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFilters = "SEVERITY_UNSPECIFIED"
	Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFiltersSEVERITYVERBOSE     Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFilters = "SEVERITY_VERBOSE"
	Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFiltersSEVERITYWARNING     Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFilters = "SEVERITY_WARNING"
)

// Defines values for ConnectorsServiceListConnectorsParamsConnectorType.
const (
	ConnectorsServiceListConnectorsParamsConnectorTypeAWS                      ConnectorsServiceListConnectorsParamsConnectorType = "AWS"
	ConnectorsServiceListConnectorsParamsConnectorTypeCONNECTORTYPEUNSPECIFIED ConnectorsServiceListConnectorsParamsConnectorType = "CONNECTOR_TYPE_UNSPECIFIED"
	ConnectorsServiceListConnectorsParamsConnectorTypeGENERICHTTPS             ConnectorsServiceListConnectorsParamsConnectorType = "GENERIC_HTTPS"
	ConnectorsServiceListConnectorsParamsConnectorTypeIBMEVENTNOTIFICATIONS    ConnectorsServiceListConnectorsParamsConnectorType = "IBM_EVENT_NOTIFICATIONS"
	ConnectorsServiceListConnectorsParamsConnectorTypePAGERDUTY                ConnectorsServiceListConnectorsParamsConnectorType = "PAGERDUTY"
	ConnectorsServiceListConnectorsParamsConnectorTypeSLACK                    ConnectorsServiceListConnectorsParamsConnectorType = "SLACK"
)

// Defines values for ConnectorsServiceListConnectorSummariesParamsConnectorType.
const (
	ConnectorsServiceListConnectorSummariesParamsConnectorTypeAWS                      ConnectorsServiceListConnectorSummariesParamsConnectorType = "AWS"
	ConnectorsServiceListConnectorSummariesParamsConnectorTypeCONNECTORTYPEUNSPECIFIED ConnectorsServiceListConnectorSummariesParamsConnectorType = "CONNECTOR_TYPE_UNSPECIFIED"
	ConnectorsServiceListConnectorSummariesParamsConnectorTypeGENERICHTTPS             ConnectorsServiceListConnectorSummariesParamsConnectorType = "GENERIC_HTTPS"
	ConnectorsServiceListConnectorSummariesParamsConnectorTypeIBMEVENTNOTIFICATIONS    ConnectorsServiceListConnectorSummariesParamsConnectorType = "IBM_EVENT_NOTIFICATIONS"
	ConnectorsServiceListConnectorSummariesParamsConnectorTypePAGERDUTY                ConnectorsServiceListConnectorSummariesParamsConnectorType = "PAGERDUTY"
	ConnectorsServiceListConnectorSummariesParamsConnectorTypeSLACK                    ConnectorsServiceListConnectorSummariesParamsConnectorType = "SLACK"
)

// Defines values for EntitiesServiceListEntitySubTypesParamsEntityType.
const (
	EntitiesServiceListEntitySubTypesParamsEntityTypeALERTS                EntitiesServiceListEntitySubTypesParamsEntityType = "ALERTS"
	EntitiesServiceListEntitySubTypesParamsEntityTypeENTITYTYPEUNSPECIFIED EntitiesServiceListEntitySubTypesParamsEntityType = "ENTITY_TYPE_UNSPECIFIED"
	EntitiesServiceListEntitySubTypesParamsEntityTypeTESTNOTIFICATIONS     EntitiesServiceListEntitySubTypesParamsEntityType = "TEST_NOTIFICATIONS"
)

// Defines values for PresetsServiceGetDefaultPresetSummaryParamsConnectorType.
const (
	PresetsServiceGetDefaultPresetSummaryParamsConnectorTypeAWS                      PresetsServiceGetDefaultPresetSummaryParamsConnectorType = "AWS"
	PresetsServiceGetDefaultPresetSummaryParamsConnectorTypeCONNECTORTYPEUNSPECIFIED PresetsServiceGetDefaultPresetSummaryParamsConnectorType = "CONNECTOR_TYPE_UNSPECIFIED"
	PresetsServiceGetDefaultPresetSummaryParamsConnectorTypeGENERICHTTPS             PresetsServiceGetDefaultPresetSummaryParamsConnectorType = "GENERIC_HTTPS"
	PresetsServiceGetDefaultPresetSummaryParamsConnectorTypeIBMEVENTNOTIFICATIONS    PresetsServiceGetDefaultPresetSummaryParamsConnectorType = "IBM_EVENT_NOTIFICATIONS"
	PresetsServiceGetDefaultPresetSummaryParamsConnectorTypePAGERDUTY                PresetsServiceGetDefaultPresetSummaryParamsConnectorType = "PAGERDUTY"
	PresetsServiceGetDefaultPresetSummaryParamsConnectorTypeSLACK                    PresetsServiceGetDefaultPresetSummaryParamsConnectorType = "SLACK"
)

// Defines values for PresetsServiceGetDefaultPresetSummaryParamsEntityType.
const (
	PresetsServiceGetDefaultPresetSummaryParamsEntityTypeALERTS                PresetsServiceGetDefaultPresetSummaryParamsEntityType = "ALERTS"
	PresetsServiceGetDefaultPresetSummaryParamsEntityTypeENTITYTYPEUNSPECIFIED PresetsServiceGetDefaultPresetSummaryParamsEntityType = "ENTITY_TYPE_UNSPECIFIED"
	PresetsServiceGetDefaultPresetSummaryParamsEntityTypeTESTNOTIFICATIONS     PresetsServiceGetDefaultPresetSummaryParamsEntityType = "TEST_NOTIFICATIONS"
)

// Defines values for PresetsServiceListPresetSummariesParamsConnectorType.
const (
	PresetsServiceListPresetSummariesParamsConnectorTypeAWS                      PresetsServiceListPresetSummariesParamsConnectorType = "AWS"
	PresetsServiceListPresetSummariesParamsConnectorTypeCONNECTORTYPEUNSPECIFIED PresetsServiceListPresetSummariesParamsConnectorType = "CONNECTOR_TYPE_UNSPECIFIED"
	PresetsServiceListPresetSummariesParamsConnectorTypeGENERICHTTPS             PresetsServiceListPresetSummariesParamsConnectorType = "GENERIC_HTTPS"
	PresetsServiceListPresetSummariesParamsConnectorTypeIBMEVENTNOTIFICATIONS    PresetsServiceListPresetSummariesParamsConnectorType = "IBM_EVENT_NOTIFICATIONS"
	PresetsServiceListPresetSummariesParamsConnectorTypePAGERDUTY                PresetsServiceListPresetSummariesParamsConnectorType = "PAGERDUTY"
	PresetsServiceListPresetSummariesParamsConnectorTypeSLACK                    PresetsServiceListPresetSummariesParamsConnectorType = "SLACK"
)

// Defines values for PresetsServiceListPresetSummariesParamsEntityType.
const (
	PresetsServiceListPresetSummariesParamsEntityTypeALERTS                PresetsServiceListPresetSummariesParamsEntityType = "ALERTS"
	PresetsServiceListPresetSummariesParamsEntityTypeENTITYTYPEUNSPECIFIED PresetsServiceListPresetSummariesParamsEntityType = "ENTITY_TYPE_UNSPECIFIED"
	PresetsServiceListPresetSummariesParamsEntityTypeTESTNOTIFICATIONS     PresetsServiceListPresetSummariesParamsEntityType = "TEST_NOTIFICATIONS"
)

// Defines values for PresetsServiceGetSystemDefaultPresetSummaryParamsConnectorType.
const (
	PresetsServiceGetSystemDefaultPresetSummaryParamsConnectorTypeAWS                      PresetsServiceGetSystemDefaultPresetSummaryParamsConnectorType = "AWS"
	PresetsServiceGetSystemDefaultPresetSummaryParamsConnectorTypeCONNECTORTYPEUNSPECIFIED PresetsServiceGetSystemDefaultPresetSummaryParamsConnectorType = "CONNECTOR_TYPE_UNSPECIFIED"
	PresetsServiceGetSystemDefaultPresetSummaryParamsConnectorTypeGENERICHTTPS             PresetsServiceGetSystemDefaultPresetSummaryParamsConnectorType = "GENERIC_HTTPS"
	PresetsServiceGetSystemDefaultPresetSummaryParamsConnectorTypeIBMEVENTNOTIFICATIONS    PresetsServiceGetSystemDefaultPresetSummaryParamsConnectorType = "IBM_EVENT_NOTIFICATIONS"
	PresetsServiceGetSystemDefaultPresetSummaryParamsConnectorTypePAGERDUTY                PresetsServiceGetSystemDefaultPresetSummaryParamsConnectorType = "PAGERDUTY"
	PresetsServiceGetSystemDefaultPresetSummaryParamsConnectorTypeSLACK                    PresetsServiceGetSystemDefaultPresetSummaryParamsConnectorType = "SLACK"
)

// Defines values for PresetsServiceGetSystemDefaultPresetSummaryParamsEntityType.
const (
	PresetsServiceGetSystemDefaultPresetSummaryParamsEntityTypeALERTS                PresetsServiceGetSystemDefaultPresetSummaryParamsEntityType = "ALERTS"
	PresetsServiceGetSystemDefaultPresetSummaryParamsEntityTypeENTITYTYPEUNSPECIFIED PresetsServiceGetSystemDefaultPresetSummaryParamsEntityType = "ENTITY_TYPE_UNSPECIFIED"
	PresetsServiceGetSystemDefaultPresetSummaryParamsEntityTypeTESTNOTIFICATIONS     PresetsServiceGetSystemDefaultPresetSummaryParamsEntityType = "TEST_NOTIFICATIONS"
)

// Defines values for GlobalRoutersServiceListGlobalRoutersParamsEntityType.
const (
	ALERTS                GlobalRoutersServiceListGlobalRoutersParamsEntityType = "ALERTS"
	ENTITYTYPEUNSPECIFIED GlobalRoutersServiceListGlobalRoutersParamsEntityType = "ENTITY_TYPE_UNSPECIFIED"
	TESTNOTIFICATIONS     GlobalRoutersServiceListGlobalRoutersParamsEntityType = "TEST_NOTIFICATIONS"
)

// Defines values for OutgoingWebhooksServiceListOutgoingWebhooksParamsType.
const (
	OutgoingWebhooksServiceListOutgoingWebhooksParamsTypeAWSEVENTBRIDGE        OutgoingWebhooksServiceListOutgoingWebhooksParamsType = "AWS_EVENT_BRIDGE"
	OutgoingWebhooksServiceListOutgoingWebhooksParamsTypeDEMISTO               OutgoingWebhooksServiceListOutgoingWebhooksParamsType = "DEMISTO"
	OutgoingWebhooksServiceListOutgoingWebhooksParamsTypeEMAILGROUP            OutgoingWebhooksServiceListOutgoingWebhooksParamsType = "EMAIL_GROUP"
	OutgoingWebhooksServiceListOutgoingWebhooksParamsTypeGENERIC               OutgoingWebhooksServiceListOutgoingWebhooksParamsType = "GENERIC"
	OutgoingWebhooksServiceListOutgoingWebhooksParamsTypeIBMEVENTNOTIFICATIONS OutgoingWebhooksServiceListOutgoingWebhooksParamsType = "IBM_EVENT_NOTIFICATIONS"
	OutgoingWebhooksServiceListOutgoingWebhooksParamsTypeJIRA                  OutgoingWebhooksServiceListOutgoingWebhooksParamsType = "JIRA"
	OutgoingWebhooksServiceListOutgoingWebhooksParamsTypeMICROSOFTTEAMS        OutgoingWebhooksServiceListOutgoingWebhooksParamsType = "MICROSOFT_TEAMS"
	OutgoingWebhooksServiceListOutgoingWebhooksParamsTypeMSTEAMSWORKFLOW       OutgoingWebhooksServiceListOutgoingWebhooksParamsType = "MS_TEAMS_WORKFLOW"
	OutgoingWebhooksServiceListOutgoingWebhooksParamsTypeOPSGENIE              OutgoingWebhooksServiceListOutgoingWebhooksParamsType = "OPSGENIE"
	OutgoingWebhooksServiceListOutgoingWebhooksParamsTypePAGERDUTY             OutgoingWebhooksServiceListOutgoingWebhooksParamsType = "PAGERDUTY"
	OutgoingWebhooksServiceListOutgoingWebhooksParamsTypeSENDLOG               OutgoingWebhooksServiceListOutgoingWebhooksParamsType = "SEND_LOG"
	OutgoingWebhooksServiceListOutgoingWebhooksParamsTypeSLACK                 OutgoingWebhooksServiceListOutgoingWebhooksParamsType = "SLACK"
	OutgoingWebhooksServiceListOutgoingWebhooksParamsTypeUNKNOWN               OutgoingWebhooksServiceListOutgoingWebhooksParamsType = "UNKNOWN"
)

// Defines values for OutgoingWebhooksServiceGetOutgoingWebhookTypeDetailsParamsType.
const (
	AWSEVENTBRIDGE        OutgoingWebhooksServiceGetOutgoingWebhookTypeDetailsParamsType = "AWS_EVENT_BRIDGE"
	DEMISTO               OutgoingWebhooksServiceGetOutgoingWebhookTypeDetailsParamsType = "DEMISTO"
	EMAILGROUP            OutgoingWebhooksServiceGetOutgoingWebhookTypeDetailsParamsType = "EMAIL_GROUP"
	GENERIC               OutgoingWebhooksServiceGetOutgoingWebhookTypeDetailsParamsType = "GENERIC"
	IBMEVENTNOTIFICATIONS OutgoingWebhooksServiceGetOutgoingWebhookTypeDetailsParamsType = "IBM_EVENT_NOTIFICATIONS"
	JIRA                  OutgoingWebhooksServiceGetOutgoingWebhookTypeDetailsParamsType = "JIRA"
	MICROSOFTTEAMS        OutgoingWebhooksServiceGetOutgoingWebhookTypeDetailsParamsType = "MICROSOFT_TEAMS"
	MSTEAMSWORKFLOW       OutgoingWebhooksServiceGetOutgoingWebhookTypeDetailsParamsType = "MS_TEAMS_WORKFLOW"
	OPSGENIE              OutgoingWebhooksServiceGetOutgoingWebhookTypeDetailsParamsType = "OPSGENIE"
	PAGERDUTY             OutgoingWebhooksServiceGetOutgoingWebhookTypeDetailsParamsType = "PAGERDUTY"
	SENDLOG               OutgoingWebhooksServiceGetOutgoingWebhookTypeDetailsParamsType = "SEND_LOG"
	SLACK                 OutgoingWebhooksServiceGetOutgoingWebhookTypeDetailsParamsType = "SLACK"
	UNKNOWN               OutgoingWebhooksServiceGetOutgoingWebhookTypeDetailsParamsType = "UNKNOWN"
)

// Defines values for PoliciesServiceGetCompanyPoliciesParamsSourceType.
const (
	SOURCETYPELOGS        PoliciesServiceGetCompanyPoliciesParamsSourceType = "SOURCE_TYPE_LOGS"
	SOURCETYPESPANS       PoliciesServiceGetCompanyPoliciesParamsSourceType = "SOURCE_TYPE_SPANS"
	SOURCETYPEUNSPECIFIED PoliciesServiceGetCompanyPoliciesParamsSourceType = "SOURCE_TYPE_UNSPECIFIED"
)

// Defines values for DataUsageServiceGetDataUsageParamsAggregate.
const (
	AGGREGATEBYAPPLICATION DataUsageServiceGetDataUsageParamsAggregate = "AGGREGATE_BY_APPLICATION"
	AGGREGATEBYPILLAR      DataUsageServiceGetDataUsageParamsAggregate = "AGGREGATE_BY_PILLAR"
	AGGREGATEBYPRIORITY    DataUsageServiceGetDataUsageParamsAggregate = "AGGREGATE_BY_PRIORITY"
	AGGREGATEBYSUBSYSTEM   DataUsageServiceGetDataUsageParamsAggregate = "AGGREGATE_BY_SUBSYSTEM"
	AGGREGATEBYUNSPECIFIED DataUsageServiceGetDataUsageParamsAggregate = "AGGREGATE_BY_UNSPECIFIED"
)

// Defines values for EventsServiceListEventsParamsFilterCxEventMetadataFiltersOperator.
const (
	EventsServiceListEventsParamsFilterCxEventMetadataFiltersOperatorFILTEROPERATORANDORUNSPECIFIED EventsServiceListEventsParamsFilterCxEventMetadataFiltersOperator = "FILTER_OPERATOR_AND_OR_UNSPECIFIED"
	EventsServiceListEventsParamsFilterCxEventMetadataFiltersOperatorFILTEROPERATOROR               EventsServiceListEventsParamsFilterCxEventMetadataFiltersOperator = "FILTER_OPERATOR_OR"
)

// Defines values for EventsServiceListEventsCountParamsFilterCxEventMetadataFiltersOperator.
const (
	EventsServiceListEventsCountParamsFilterCxEventMetadataFiltersOperatorFILTEROPERATORANDORUNSPECIFIED EventsServiceListEventsCountParamsFilterCxEventMetadataFiltersOperator = "FILTER_OPERATOR_AND_OR_UNSPECIFIED"
	EventsServiceListEventsCountParamsFilterCxEventMetadataFiltersOperatorFILTEROPERATOROR               EventsServiceListEventsCountParamsFilterCxEventMetadataFiltersOperator = "FILTER_OPERATOR_OR"
)

// Defines values for EventsServiceGetEventsStatisticsParamsFilterCxEventMetadataFiltersOperator.
const (
	EventsServiceGetEventsStatisticsParamsFilterCxEventMetadataFiltersOperatorFILTEROPERATORANDORUNSPECIFIED EventsServiceGetEventsStatisticsParamsFilterCxEventMetadataFiltersOperator = "FILTER_OPERATOR_AND_OR_UNSPECIFIED"
	EventsServiceGetEventsStatisticsParamsFilterCxEventMetadataFiltersOperatorFILTEROPERATOROR               EventsServiceGetEventsStatisticsParamsFilterCxEventMetadataFiltersOperator = "FILTER_OPERATOR_OR"
)

// AggregationAggType defines model for AggregationAggType.
type AggregationAggType string

// AnnotationLogsSource defines model for AnnotationLogsSource.
type AnnotationLogsSource struct {
	LabelFields     *[]CommonObservationField      `json:"labelFields,omitempty"`
	LuceneQuery     *Dashboardsv1commonLuceneQuery `json:"luceneQuery,omitempty"`
	MessageTemplate *string                        `json:"messageTemplate,omitempty"`
	Strategy        *AnnotationLogsSourceStrategy  `json:"strategy,omitempty"`
}

// AnnotationLogsSourceStrategy defines model for AnnotationLogsSourceStrategy.
type AnnotationLogsSourceStrategy struct {
	Duration *AnnotationLogsSourceStrategyDuration `json:"duration,omitempty"`
	Instant  *AnnotationLogsSourceStrategyInstant  `json:"instant,omitempty"`
	Range    *AnnotationLogsSourceStrategyRange    `json:"range,omitempty"`
}

// AnnotationLogsSourceStrategyDuration defines model for AnnotationLogsSourceStrategyDuration.
type AnnotationLogsSourceStrategyDuration struct {
	DurationField       *CommonObservationField `json:"durationField,omitempty"`
	StartTimestampField *CommonObservationField `json:"startTimestampField,omitempty"`
}

// AnnotationLogsSourceStrategyInstant defines model for AnnotationLogsSourceStrategyInstant.
type AnnotationLogsSourceStrategyInstant struct {
	TimestampField *CommonObservationField `json:"timestampField,omitempty"`
}

// AnnotationLogsSourceStrategyRange defines model for AnnotationLogsSourceStrategyRange.
type AnnotationLogsSourceStrategyRange struct {
	EndTimestampField   *CommonObservationField `json:"endTimestampField,omitempty"`
	StartTimestampField *CommonObservationField `json:"startTimestampField,omitempty"`
}

// AnnotationMetricsSource defines model for AnnotationMetricsSource.
type AnnotationMetricsSource struct {
	Labels          *[]string                        `json:"labels,omitempty"`
	MessageTemplate *string                          `json:"messageTemplate,omitempty"`
	PromqlQuery     *Dashboardsv1commonPromQlQuery   `json:"promqlQuery,omitempty"`
	Strategy        *AnnotationMetricsSourceStrategy `json:"strategy,omitempty"`
}

// AnnotationMetricsSourceStrategy defines model for AnnotationMetricsSourceStrategy.
type AnnotationMetricsSourceStrategy struct {
	StartTimeMetric *MetricsSourceStartTimeMetric `json:"startTimeMetric,omitempty"`
}

// AnnotationSpansSource defines model for AnnotationSpansSource.
type AnnotationSpansSource struct {
	LabelFields     *[]CommonObservationField      `json:"labelFields,omitempty"`
	LuceneQuery     *Dashboardsv1commonLuceneQuery `json:"luceneQuery,omitempty"`
	MessageTemplate *string                        `json:"messageTemplate,omitempty"`
	Strategy        *AnnotationSpansSourceStrategy `json:"strategy,omitempty"`
}

// AnnotationSpansSourceStrategy defines model for AnnotationSpansSourceStrategy.
type AnnotationSpansSourceStrategy struct {
	Duration *AnnotationSpansSourceStrategyDuration `json:"duration,omitempty"`
	Instant  *AnnotationSpansSourceStrategyInstant  `json:"instant,omitempty"`
	Range    *AnnotationSpansSourceStrategyRange    `json:"range,omitempty"`
}

// AnnotationSpansSourceStrategyDuration defines model for AnnotationSpansSourceStrategyDuration.
type AnnotationSpansSourceStrategyDuration struct {
	DurationField       *CommonObservationField `json:"durationField,omitempty"`
	StartTimestampField *CommonObservationField `json:"startTimestampField,omitempty"`
}

// AnnotationSpansSourceStrategyInstant defines model for AnnotationSpansSourceStrategyInstant.
type AnnotationSpansSourceStrategyInstant struct {
	TimestampField *CommonObservationField `json:"timestampField,omitempty"`
}

// AnnotationSpansSourceStrategyRange defines model for AnnotationSpansSourceStrategyRange.
type AnnotationSpansSourceStrategyRange struct {
	EndTimestampField   *CommonObservationField `json:"endTimestampField,omitempty"`
	StartTimestampField *CommonObservationField `json:"startTimestampField,omitempty"`
}

// ApiKeysServiceUpdateApiKeyBody This data structure is used to update an API key.
type ApiKeysServiceUpdateApiKeyBody struct {
	IsActive *bool   `json:"isActive,omitempty"`
	NewName  *string `json:"newName,omitempty"`

	// Permissions This data structure represents a set of permissions on an API key.
	Permissions *V3UpdateApiKeyRequestPermissions `json:"permissions,omitempty"`

	// Presets This data structure represents a set of permissions presets on an API key.
	Presets *UpdateApiKeyRequestPresets `json:"presets,omitempty"`
}

// BarChartXAxis defines model for BarChartXAxis.
type BarChartXAxis struct {
	Time  *XAxisXAxisByTime  `json:"time,omitempty"`
	Value *XAxisXAxisByValue `json:"value,omitempty"`
}

// ColorsByColorsByAggregation defines model for ColorsByColorsByAggregation.
type ColorsByColorsByAggregation = map[string]interface{}

// ColorsByColorsByGroupBy defines model for ColorsByColorsByGroupBy.
type ColorsByColorsByGroupBy = map[string]interface{}

// ColorsByColorsByStack defines model for ColorsByColorsByStack.
type ColorsByColorsByStack = map[string]interface{}

// CommandInformationLanguage defines model for CommandInformationLanguage.
type CommandInformationLanguage string

// CommandInformationLink defines model for CommandInformationLink.
type CommandInformationLink struct {
	Key  *string `json:"key,omitempty"`
	Text *string `json:"text,omitempty"`
	Url  *string `json:"url,omitempty"`
}

// DashboardAutoRefreshFiveMinutes defines model for DashboardAutoRefreshFiveMinutes.
type DashboardAutoRefreshFiveMinutes = map[string]interface{}

// DashboardAutoRefreshOff defines model for DashboardAutoRefreshOff.
type DashboardAutoRefreshOff = map[string]interface{}

// DashboardAutoRefreshTwoMinutes defines model for DashboardAutoRefreshTwoMinutes.
type DashboardAutoRefreshTwoMinutes = map[string]interface{}

// DashboardsServiceAssignDashboardFolderBody This is a request for assigning a folder to a dashboard
type DashboardsServiceAssignDashboardFolderBody struct {
	FolderId  *string `json:"folderId,omitempty"`
	RequestId string  `json:"requestId"`
}

// DashboardsServicePinDashboardBody This is a request used to mark certain dashboard as pinned
type DashboardsServicePinDashboardBody struct {
	RequestId string `json:"requestId"`
}

// DashboardsServiceReplaceDefaultDashboardBody This is a request to replace a default dashboard
type DashboardsServiceReplaceDefaultDashboardBody struct {
	RequestId string `json:"requestId"`
}

// DashboardsServiceUnpinDashboardBody This is a request used to unpin a certain dashboard
type DashboardsServiceUnpinDashboardBody struct {
	RequestId string `json:"requestId"`
}

// DataTableColumn defines model for DataTableColumn.
type DataTableColumn struct {
	// Field Name of the field to display in the column
	Field *string `json:"field,omitempty"`

	// Width Custom width of the column, by default it's automatically adjusted
	Width *int32 `json:"width,omitempty"`
}

// DataTableLogsQueryAggregation defines model for DataTableLogsQueryAggregation.
type DataTableLogsQueryAggregation struct {
	Aggregation *CommonLogsAggregation `json:"aggregation,omitempty"`

	// Id Aggregation unique identifier
	Id *string `json:"id,omitempty"`

	// IsVisible Whether the aggregation is visible in the table
	IsVisible *bool `json:"isVisible,omitempty"`

	// Name Aggregation name
	Name *string `json:"name,omitempty"`
}

// DataTableLogsQueryGrouping defines model for DataTableLogsQueryGrouping.
type DataTableLogsQueryGrouping struct {
	// Aggregations List of aggregations
	Aggregations *[]DataTableLogsQueryAggregation `json:"aggregations,omitempty"`

	// GroupBy List of field names to group the query results
	GroupBy *[]string `json:"groupBy,omitempty"`

	// GroupBys List of observation fields to group the results
	GroupBys *[]CommonObservationField `json:"groupBys,omitempty"`
}

// DataTableSpansQueryAggregation defines model for DataTableSpansQueryAggregation.
type DataTableSpansQueryAggregation struct {
	Aggregation *CommonSpansAggregation `json:"aggregation,omitempty"`

	// Id Aggregation unique identifier
	Id *string `json:"id,omitempty"`

	// IsVisible Whether the aggregation is visible in the table
	IsVisible *bool `json:"isVisible,omitempty"`

	// Name Aggregation name
	Name *string `json:"name,omitempty"`
}

// DataTableSpansQueryGrouping defines model for DataTableSpansQueryGrouping.
type DataTableSpansQueryGrouping struct {
	// Aggregations List of aggregations applied to span records
	Aggregations *[]DataTableSpansQueryAggregation `json:"aggregations,omitempty"`

	// GroupBy List of field names to group the span records
	GroupBy *[]CommonSpanField `json:"groupBy,omitempty"`

	// GroupBys A list of observation fields definitions to group the records by
	GroupBys *[]CommonSpanObservationField `json:"groupBys,omitempty"`
}

// DefaultIntegrationDetailsRegisteredInstance defines model for DefaultIntegrationDetailsRegisteredInstance.
type DefaultIntegrationDetailsRegisteredInstance struct {
	// Arm This data structure represents an Azure Resource Manager stack.
	Arm *V1ARMStack `json:"arm,omitempty"`

	// Cloudformation This data structure represents a CloudFormation stack.
	Cloudformation    *V1CloudFormationStack `json:"cloudformation,omitempty"`
	DefinitionVersion *string                `json:"definitionVersion,omitempty"`

	// Empty This data structure represents an integration that does not require deployment.
	Empty *V1NoDeployment `json:"empty,omitempty"`
	Id    *string         `json:"id,omitempty"`

	// IntegrationStatus This data structure represents an integration status.
	IntegrationStatus *V1IntegrationStatus `json:"integrationStatus,omitempty"`
	IsTesting         *bool                `json:"isTesting,omitempty"`
	LastUpdated       *time.Time           `json:"lastUpdated,omitempty"`
	Parameters        *[]V1Parameter       `json:"parameters,omitempty"`
}

// DimensionAggregationDimensionAggregationType defines model for DimensionAggregationDimensionAggregationType.
type DimensionAggregationDimensionAggregationType string

// DimensionAggregationDimensionField defines model for DimensionAggregationDimensionField.
type DimensionAggregationDimensionField string

// E2MAggSamplesSampleType defines model for E2MAggSamplesSampleType.
type E2MAggSamplesSampleType string

// ExtensionItemPermissionResource defines model for ExtensionItemPermissionResource.
type ExtensionItemPermissionResource string

// ExtractTimestampParametersFormatStandard defines model for ExtractTimestampParametersFormatStandard.
type ExtractTimestampParametersFormatStandard string

// FilterEqualsSelection This data structure defines the values for the equality comparison.
type FilterEqualsSelection struct {
	// All This data structure indicates that all values are selected.
	All *FilterEqualsSelectionAllSelection `json:"all,omitempty"`

	// List This data structure represents a selection from a list of specific values.
	List *FilterEqualsSelectionListSelection `json:"list,omitempty"`
}

// FilterEqualsSelectionAllSelection This data structure indicates that all values are selected.
type FilterEqualsSelectionAllSelection = map[string]interface{}

// FilterEqualsSelectionListSelection This data structure represents a selection from a list of specific values.
type FilterEqualsSelectionListSelection struct {
	// Values A list of selected values.
	Values *[]string `json:"values,omitempty"`
}

// FilterMetricsFilter This data structure represents the filter criteria for metrics.
type FilterMetricsFilter struct {
	// Label The label associated with the metric.
	Label *string `json:"label,omitempty"`

	// Metric The name of the metric to which the filter is applied.
	Metric *string `json:"metric,omitempty"`

	// Operator This data structure defines the comparison operation for the filter.
	Operator *AstFilterOperator `json:"operator,omitempty"`
}

// FilterNotEqualsSelection This data structure defines the values for the non-equality comparison.
type FilterNotEqualsSelection struct {
	// List This data structure represents a selection from a list of specific values.
	List *FilterNotEqualsSelectionListSelection `json:"list,omitempty"`
}

// FilterNotEqualsSelectionListSelection This data structure represents a selection from a list of specific values.
type FilterNotEqualsSelectionListSelection struct {
	// Values A list of values for the selection.
	Values *[]string `json:"values,omitempty"`
}

// FilterSpansFilter This data structure represents the filter criteria for spans.
type FilterSpansFilter struct {
	Field            *CommonSpanField            `json:"field,omitempty"`
	ObservationField *CommonSpanObservationField `json:"observationField,omitempty"`

	// Operator This data structure defines the comparison operation for the filter.
	Operator *AstFilterOperator `json:"operator,omitempty"`
}

// GenericWebhookConfigMethodType defines model for GenericWebhookConfigMethodType.
type GenericWebhookConfigMethodType string

// GetAllExtensionsResponseRevisionSummary defines model for GetAllExtensionsResponseRevisionSummary.
type GetAllExtensionsResponseRevisionSummary struct {
	IsNew      *bool        `json:"isNew,omitempty"`
	ItemCounts V1ItemCounts `json:"itemCounts"`
}

// GetCompanyUsageLimitsResponseCounts defines model for GetCompanyUsageLimitsResponseCounts.
type GetCompanyUsageLimitsResponseCounts struct {
	Groups        *int32 `json:"groups,omitempty"`
	ParsingThemes *int32 `json:"parsingThemes,omitempty"`
	Rules         *int32 `json:"rules,omitempty"`
}

// GetConfigurationResponseIDPDetails defines model for GetConfigurationResponseIDPDetails.
type GetConfigurationResponseIDPDetails struct {
	Icon *string `json:"icon,omitempty"`
	Name *string `json:"name,omitempty"`
}

// GetDeployedExtensionsResponseDeployedExtension defines model for GetDeployedExtensionsResponseDeployedExtension.
type GetDeployedExtensionsResponseDeployedExtension struct {
	Applications *[]string                                             `json:"applications,omitempty"`
	Id           string                                                `json:"id"`
	ItemIds      []string                                              `json:"itemIds"`
	Subsystems   *[]string                                             `json:"subsystems,omitempty"`
	Summary      GetDeployedExtensionsResponseDeployedExtensionSummary `json:"summary"`
	Version      string                                                `json:"version"`
}

// GetDeployedExtensionsResponseDeployedExtensionSummary defines model for GetDeployedExtensionsResponseDeployedExtensionSummary.
type GetDeployedExtensionsResponseDeployedExtensionSummary struct {
	DeployedItemCounts V1ItemCounts `json:"deployedItemCounts"`
}

// GetGroupUsersResponseNextPageToken This data structure represents the information associated with an API key.
type GetGroupUsersResponseNextPageToken struct {
	NextPageToken *string `json:"nextPageToken,omitempty"`
}

// GetGroupUsersResponseNoMorePages This data structure represents the information associated with an API key.
type GetGroupUsersResponseNoMorePages = map[string]interface{}

// GetLimitsResponseLimitUsage defines model for GetLimitsResponseLimitUsage.
type GetLimitsResponseLimitUsage struct {
	Limit *int32 `json:"limit,omitempty"`
	Used  *int32 `json:"used,omitempty"`
}

// HorizontalBarChartYAxisViewBy defines model for HorizontalBarChartYAxisViewBy.
type HorizontalBarChartYAxisViewBy struct {
	Category *YAxisViewByYAxisViewByCategory `json:"category,omitempty"`
	Value    *YAxisViewByYAxisViewByValue    `json:"value,omitempty"`
}

// IbmEventNotificationsConfigEndpointType defines model for IbmEventNotificationsConfigEndpointType.
type IbmEventNotificationsConfigEndpointType string

// IntegrationDetailsDefaultIntegrationDetails defines model for IntegrationDetailsDefaultIntegrationDetails.
type IntegrationDetailsDefaultIntegrationDetails struct {
	Registered *[]DefaultIntegrationDetailsRegisteredInstance `json:"registered,omitempty"`
}

// IntegrationRevisionAzureArmTemplate This data structure represents an azure ARM template.
type IntegrationRevisionAzureArmTemplate struct {
	TemplateUrl *string `json:"templateUrl,omitempty"`
}

// IntegrationRevisionCloudFormationTemplate defines model for IntegrationRevisionCloudFormationTemplate.
type IntegrationRevisionCloudFormationTemplate struct {
	Parameters            *map[string]string `json:"parameters,omitempty"`
	PostInstallationSteps *map[string]string `json:"postInstallationSteps,omitempty"`
	TemplateUrl           *string            `json:"templateUrl,omitempty"`
}

// IntegrationRevisionCommandInformation defines model for IntegrationRevisionCommandInformation.
type IntegrationRevisionCommandInformation struct {
	Command     *string                     `json:"command,omitempty"`
	Description *string                     `json:"description,omitempty"`
	Language    *CommandInformationLanguage `json:"language,omitempty"`
	Links       *[]CommandInformationLink   `json:"links,omitempty"`
	Name        *string                     `json:"name,omitempty"`
	TooltipText *string                     `json:"tooltipText,omitempty"`
}

// IntegrationRevisionConfigurationBlock defines model for IntegrationRevisionConfigurationBlock.
type IntegrationRevisionConfigurationBlock struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
	Value       *string `json:"value,omitempty"`
}

// IntegrationRevisionFieldCondition defines model for IntegrationRevisionFieldCondition.
type IntegrationRevisionFieldCondition struct {
	Type   IntegrationRevisionFieldConditionConditionType `json:"type"`
	Values *[]IntegrationRevisionFieldConditionFieldValue `json:"values,omitempty"`
}

// IntegrationRevisionFieldConditionConditionType defines model for IntegrationRevisionFieldConditionConditionType.
type IntegrationRevisionFieldConditionConditionType string

// IntegrationRevisionFieldConditionFieldValue defines model for IntegrationRevisionFieldConditionFieldValue.
type IntegrationRevisionFieldConditionFieldValue struct {
	FieldName    *string `json:"fieldName,omitempty"`
	ValuePattern *string `json:"valuePattern,omitempty"`
}

// IntegrationRevisionFieldInformation defines model for IntegrationRevisionFieldInformation.
type IntegrationRevisionFieldInformation struct {
	AllowedPattern         *string                                    `json:"allowedPattern,omitempty"`
	ApplicableIf           *IntegrationRevisionFieldCondition         `json:"applicableIf,omitempty"`
	DocumentationReference *string                                    `json:"documentationReference,omitempty"`
	GroupId                *string                                    `json:"groupId,omitempty"`
	MultiText              *IntegrationRevisionListTextValue          `json:"multiText,omitempty"`
	MultipleSelection      *IntegrationRevisionMultipleSelectionValue `json:"multipleSelection,omitempty"`
	Name                   *string                                    `json:"name,omitempty"`
	Placeholder            *string                                    `json:"placeholder,omitempty"`
	Predefined             *bool                                      `json:"predefined,omitempty"`
	Readonly               *bool                                      `json:"readonly,omitempty"`
	Required               *bool                                      `json:"required,omitempty"`
	Selection              *IntegrationRevisionSelectionValue         `json:"selection,omitempty"`
	Single                 *IntegrationRevisionSingleValue            `json:"single,omitempty"`
	SingleBoolean          *IntegrationRevisionSingleBooleanValue     `json:"singleBoolean,omitempty"`
	SingleNumber           *IntegrationRevisionSingleNumericValue     `json:"singleNumber,omitempty"`
	TemplateParamName      *string                                    `json:"templateParamName,omitempty"`
	Tooltip                *string                                    `json:"tooltip,omitempty"`
	Type                   IntegrationRevisionInputType               `json:"type"`
	UpgradeNotice          *string                                    `json:"upgradeNotice,omitempty"`
	Visible                *bool                                      `json:"visible,omitempty"`
}

// IntegrationRevisionHelmChart This data structure represents a Helm chart.
type IntegrationRevisionHelmChart struct {
	Commands *[]IntegrationRevisionCommandInformation `json:"commands,omitempty"`
	Guide    *IntegrationRevisionIntegrationGuide     `json:"guide,omitempty"`
	Template *string                                  `json:"template,omitempty"`
}

// IntegrationRevisionInputType defines model for IntegrationRevisionInputType.
type IntegrationRevisionInputType string

// IntegrationRevisionIntegrationGuide defines model for IntegrationRevisionIntegrationGuide.
type IntegrationRevisionIntegrationGuide struct {
	InstallationRequirements *string `json:"installationRequirements,omitempty"`
	Introduction             *string `json:"introduction,omitempty"`
}

// IntegrationRevisionListTextValue defines model for IntegrationRevisionListTextValue.
type IntegrationRevisionListTextValue struct {
	DefaultValues *[]string `json:"defaultValues,omitempty"`
	Options       *[]string `json:"options,omitempty"`
}

// IntegrationRevisionManagedService This data structure represents a managed service.
type IntegrationRevisionManagedService = map[string]interface{}

// IntegrationRevisionMultipleSelectionValue defines model for IntegrationRevisionMultipleSelectionValue.
type IntegrationRevisionMultipleSelectionValue struct {
	Options *[]string `json:"options,omitempty"`
}

// IntegrationRevisionRum This data structure represents a RUM integration.
type IntegrationRevisionRum struct {
	BrowserSdkCommands *[]IntegrationRevisionCommandInformation `json:"browserSdkCommands,omitempty"`
	SourceMapCommands  *[]IntegrationRevisionCommandInformation `json:"sourceMapCommands,omitempty"`
}

// IntegrationRevisionSelectionValue defines model for IntegrationRevisionSelectionValue.
type IntegrationRevisionSelectionValue struct {
	DefaultValue *string   `json:"defaultValue,omitempty"`
	Options      *[]string `json:"options,omitempty"`
}

// IntegrationRevisionSingleBooleanValue defines model for IntegrationRevisionSingleBooleanValue.
type IntegrationRevisionSingleBooleanValue struct {
	DefaultValue *bool `json:"defaultValue,omitempty"`
}

// IntegrationRevisionSingleNumericValue defines model for IntegrationRevisionSingleNumericValue.
type IntegrationRevisionSingleNumericValue struct {
	DefaultValue *float64 `json:"defaultValue,omitempty"`
}

// IntegrationRevisionSingleValue defines model for IntegrationRevisionSingleValue.
type IntegrationRevisionSingleValue struct {
	DefaultValue *string `json:"defaultValue,omitempty"`
}

// IntegrationRevisionTerraform This data structure represents a Terraform integration.
type IntegrationRevisionTerraform struct {
	ConfigurationBlocks *[]IntegrationRevisionConfigurationBlock `json:"configurationBlocks,omitempty"`
}

// IntegrationTypeAzureArm This data structure represents an Azure ARM integration.
type IntegrationTypeAzureArm = map[string]interface{}

// IntegrationTypeCloudformation This data structure represents a CloudFormation integration.
type IntegrationTypeCloudformation = map[string]interface{}

// IntegrationTypeContextualData This data structure represents a contextual data integration.
type IntegrationTypeContextualData = map[string]interface{}

// IntegrationTypeGenericWebhook This data structure represents a generic webhook integration.
type IntegrationTypeGenericWebhook = map[string]interface{}

// IntegrationTypeManaged This data structure represents a managed integration.
type IntegrationTypeManaged struct {
	Variant ManagedVariant `json:"variant"`
}

// IntegrationTypePushBasedContextualData This data structure represents a push based contextual data integration.
type IntegrationTypePushBasedContextualData = map[string]interface{}

// IntegrationTypeUntracked This data structure represents an untracked integration.
type IntegrationTypeUntracked = map[string]interface{}

// JsonExtractParametersDestinationField defines model for JsonExtractParametersDestinationField.
type JsonExtractParametersDestinationField string

// LegendLegendColumn defines model for LegendLegendColumn.
type LegendLegendColumn string

// LegendLegendPlacement defines model for LegendLegendPlacement.
type LegendLegendPlacement string

// LineChartQueryDefinition LineChart represents the configuration of a line chart widget.
type LineChartQueryDefinition struct {
	// ColorScheme Applied color scheme for this query, one of the predefined values
	ColorScheme *string `json:"colorScheme,omitempty"`

	// CustomUnit Custom unit (requires to have unit field as 'custom' to take effect)
	CustomUnit   *string             `json:"customUnit,omitempty"`
	DataModeType *CommonDataModeType `json:"dataModeType,omitempty"`

	// Decimal Number indicating the decimal precision of the numeric values, within range 0-15
	Decimal *int32 `json:"decimal,omitempty"`

	// HashColors Whether to ignore color scheme and derive colors from algorithm
	HashColors *bool `json:"hashColors,omitempty"`

	// Id Unique id of the query definition
	Id string `json:"id"`

	// IsVisible Is the query visible
	IsVisible *bool `json:"isVisible,omitempty"`

	// Name Custom name of the query
	Name       *string                     `json:"name,omitempty"`
	Query      WidgetsLineChartQuery       `json:"query"`
	Resolution *WidgetsLineChartResolution `json:"resolution,omitempty"`
	ScaleType  *CommonScaleType            `json:"scaleType,omitempty"`

	// SeriesCountLimit Max count of the series per query
	SeriesCountLimit *string `json:"seriesCountLimit,omitempty"`

	// SeriesNameTemplate Custom template for the series name
	SeriesNameTemplate *string            `json:"seriesNameTemplate,omitempty"`
	Unit               *WidgetscommonUnit `json:"unit,omitempty"`

	// YAxisMax Number indicating the upper band for y axis
	YAxisMax *float32 `json:"yAxisMax,omitempty"`

	// YAxisMin Number indicating the lower band for y axis
	YAxisMin *float32 `json:"yAxisMin,omitempty"`
}

// LineChartStackedLine defines model for LineChartStackedLine.
type LineChartStackedLine string

// LineChartTooltip defines model for LineChartTooltip.
type LineChartTooltip struct {
	ShowLabels *bool                 `json:"showLabels,omitempty"`
	Type       *LineChartTooltipType `json:"type,omitempty"`
}

// LineChartTooltipType defines model for LineChartTooltipType.
type LineChartTooltipType string

// ListIbmEventNotificationsInstancesResponseEventNotificationsInstance defines model for ListIbmEventNotificationsInstancesResponseEventNotificationsInstance.
type ListIbmEventNotificationsInstancesResponseEventNotificationsInstance struct {
	Crn        string `json:"crn"`
	InstanceId string `json:"instanceId"`
	IsUsed     *bool  `json:"isUsed,omitempty"`
	Name       string `json:"name"`
	RegionId   string `json:"regionId"`
}

// ListOutgoingWebhookTypesResponseOutgoingWebhookType defines model for ListOutgoingWebhookTypesResponseOutgoingWebhookType.
type ListOutgoingWebhookTypesResponseOutgoingWebhookType struct {
	Count int64         `json:"count"`
	Label string        `json:"label"`
	Type  V1WebhookType `json:"type"`
}

// LogsAggregationAverage defines model for LogsAggregationAverage.
type LogsAggregationAverage struct {
	Field            *string                 `json:"field,omitempty"`
	ObservationField *CommonObservationField `json:"observationField,omitempty"`
}

// LogsAggregationCount defines model for LogsAggregationCount.
type LogsAggregationCount = map[string]interface{}

// LogsAggregationCountDistinct defines model for LogsAggregationCountDistinct.
type LogsAggregationCountDistinct struct {
	Field            *string                 `json:"field,omitempty"`
	ObservationField *CommonObservationField `json:"observationField,omitempty"`
}

// LogsAggregationMax defines model for LogsAggregationMax.
type LogsAggregationMax struct {
	Field            *string                 `json:"field,omitempty"`
	ObservationField *CommonObservationField `json:"observationField,omitempty"`
}

// LogsAggregationMin defines model for LogsAggregationMin.
type LogsAggregationMin struct {
	Field            *string                 `json:"field,omitempty"`
	ObservationField *CommonObservationField `json:"observationField,omitempty"`
}

// LogsAggregationPercentile defines model for LogsAggregationPercentile.
type LogsAggregationPercentile struct {
	Field            *string                 `json:"field,omitempty"`
	ObservationField *CommonObservationField `json:"observationField,omitempty"`
	Percent          *float64                `json:"percent,omitempty"`
}

// LogsAggregationSum defines model for LogsAggregationSum.
type LogsAggregationSum struct {
	Field            *string                 `json:"field,omitempty"`
	ObservationField *CommonObservationField `json:"observationField,omitempty"`
}

// ManagedVariant defines model for ManagedVariant.
type ManagedVariant string

// MetricAggregationMetricAggregationType defines model for MetricAggregationMetricAggregationType.
type MetricAggregationMetricAggregationType string

// MetricsQueryMetricsLabelFilter defines model for MetricsQueryMetricsLabelFilter.
type MetricsQueryMetricsLabelFilter struct {
	Label    *MetricsQueryStringOrVariable `json:"label,omitempty"`
	Metric   *MetricsQueryStringOrVariable `json:"metric,omitempty"`
	Operator *QueryMetricsQueryOperator    `json:"operator,omitempty"`
}

// MetricsQueryStringOrVariable defines model for MetricsQueryStringOrVariable.
type MetricsQueryStringOrVariable struct {
	StringValue  *string `json:"stringValue,omitempty"`
	VariableName *string `json:"variableName,omitempty"`
}

// MetricsQueryTypeLabelValue defines model for MetricsQueryTypeLabelValue.
type MetricsQueryTypeLabelValue struct {
	LabelFilters *[]MetricsQueryMetricsLabelFilter `json:"labelFilters,omitempty"`
	LabelName    *MetricsQueryStringOrVariable     `json:"labelName,omitempty"`
	MetricName   *MetricsQueryStringOrVariable     `json:"metricName,omitempty"`
}

// MetricsSourceStartTimeMetric defines model for MetricsSourceStartTimeMetric.
type MetricsSourceStartTimeMetric = map[string]interface{}

// MultiSelectConstantListSource defines model for MultiSelectConstantListSource.
type MultiSelectConstantListSource struct {
	Values *[]string `json:"values,omitempty"`
}

// MultiSelectLogsPathSource defines model for MultiSelectLogsPathSource.
type MultiSelectLogsPathSource struct {
	ObservationField *CommonObservationField `json:"observationField,omitempty"`
	Value            *string                 `json:"value,omitempty"`
}

// MultiSelectMetricLabelSource defines model for MultiSelectMetricLabelSource.
type MultiSelectMetricLabelSource struct {
	Label      *string `json:"label,omitempty"`
	MetricName *string `json:"metricName,omitempty"`
}

// MultiSelectQueryLogsQuery defines model for MultiSelectQueryLogsQuery.
type MultiSelectQueryLogsQuery struct {
	Type *QueryLogsQueryType `json:"type,omitempty"`
}

// MultiSelectQueryMetricsQuery defines model for MultiSelectQueryMetricsQuery.
type MultiSelectQueryMetricsQuery struct {
	Type *QueryMetricsQueryType `json:"type,omitempty"`
}

// MultiSelectQuerySource defines model for MultiSelectQuerySource.
type MultiSelectQuerySource struct {
	Query               *AstMultiSelectQuery            `json:"query,omitempty"`
	RefreshStrategy     *MultiSelectRefreshStrategy     `json:"refreshStrategy,omitempty"`
	ValueDisplayOptions *MultiSelectValueDisplayOptions `json:"valueDisplayOptions,omitempty"`
}

// MultiSelectQuerySpansQuery defines model for MultiSelectQuerySpansQuery.
type MultiSelectQuerySpansQuery struct {
	Type *QuerySpansQueryType `json:"type,omitempty"`
}

// MultiSelectRefreshStrategy defines model for MultiSelectRefreshStrategy.
type MultiSelectRefreshStrategy string

// MultiSelectSpanFieldSource defines model for MultiSelectSpanFieldSource.
type MultiSelectSpanFieldSource struct {
	Value *CommonSpanField `json:"value,omitempty"`
}

// MultiSelectValueDisplayOptions defines model for MultiSelectValueDisplayOptions.
type MultiSelectValueDisplayOptions struct {
	LabelRegex *string `json:"labelRegex,omitempty"`
	ValueRegex *string `json:"valueRegex,omitempty"`
}

// MultiSelectVariableSelectionOptions defines model for MultiSelectVariableSelectionOptions.
type MultiSelectVariableSelectionOptions struct {
	SelectionType *VariableSelectionOptionsSelectionType `json:"selectionType,omitempty"`
}

// ParameterApiKeyData defines model for ParameterApiKeyData.
type ParameterApiKeyData struct {
	Id    *string `json:"id,omitempty"`
	Value *string `json:"value,omitempty"`
}

// ParameterSensitiveDataPlaceholder defines model for ParameterSensitiveDataPlaceholder.
type ParameterSensitiveDataPlaceholder = map[string]interface{}

// ParameterStringList defines model for ParameterStringList.
type ParameterStringList struct {
	Values *[]string `json:"values,omitempty"`
}

// PieChartLabelDefinition defines model for PieChartLabelDefinition.
type PieChartLabelDefinition struct {
	// IsVisible Are labels visible
	IsVisible   *bool                `json:"isVisible,omitempty"`
	LabelSource *PieChartLabelSource `json:"labelSource,omitempty"`

	// ShowName Whether to show the name of slice in the label
	ShowName *bool `json:"showName,omitempty"`

	// ShowPercentage Whether to show percentage value of slice in the label
	ShowPercentage *bool `json:"showPercentage,omitempty"`

	// ShowValue Whether to show value of slice in the label
	ShowValue *bool `json:"showValue,omitempty"`
}

// PieChartLabelSource defines model for PieChartLabelSource.
type PieChartLabelSource string

// QueryLogsQueryType defines model for QueryLogsQueryType.
type QueryLogsQueryType struct {
	FieldName  *QueryLogsQueryTypeFieldName  `json:"fieldName,omitempty"`
	FieldValue *QueryLogsQueryTypeFieldValue `json:"fieldValue,omitempty"`
}

// QueryLogsQueryTypeFieldName defines model for QueryLogsQueryTypeFieldName.
type QueryLogsQueryTypeFieldName struct {
	LogRegex *string `json:"logRegex,omitempty"`
}

// QueryLogsQueryTypeFieldValue defines model for QueryLogsQueryTypeFieldValue.
type QueryLogsQueryTypeFieldValue struct {
	ObservationField *CommonObservationField `json:"observationField,omitempty"`
}

// QueryMetricsQueryEquals defines model for QueryMetricsQueryEquals.
type QueryMetricsQueryEquals struct {
	Selection *QueryMetricsQuerySelection `json:"selection,omitempty"`
}

// QueryMetricsQueryNotEquals defines model for QueryMetricsQueryNotEquals.
type QueryMetricsQueryNotEquals struct {
	Selection *QueryMetricsQuerySelection `json:"selection,omitempty"`
}

// QueryMetricsQueryOperator defines model for QueryMetricsQueryOperator.
type QueryMetricsQueryOperator struct {
	Equals    *QueryMetricsQueryEquals    `json:"equals,omitempty"`
	NotEquals *QueryMetricsQueryNotEquals `json:"notEquals,omitempty"`
}

// QueryMetricsQuerySelection defines model for QueryMetricsQuerySelection.
type QueryMetricsQuerySelection struct {
	List *QueryMetricsQuerySelectionListSelection `json:"list,omitempty"`
}

// QueryMetricsQuerySelectionListSelection defines model for QueryMetricsQuerySelectionListSelection.
type QueryMetricsQuerySelectionListSelection struct {
	Values *[]MetricsQueryStringOrVariable `json:"values,omitempty"`
}

// QueryMetricsQueryType defines model for QueryMetricsQueryType.
type QueryMetricsQueryType struct {
	LabelName  *TypeLabelName              `json:"labelName,omitempty"`
	LabelValue *MetricsQueryTypeLabelValue `json:"labelValue,omitempty"`
	MetricName *TypeMetricName             `json:"metricName,omitempty"`
}

// QuerySpansQueryType defines model for QuerySpansQueryType.
type QuerySpansQueryType struct {
	FieldName  *QuerySpansQueryTypeFieldName  `json:"fieldName,omitempty"`
	FieldValue *QuerySpansQueryTypeFieldValue `json:"fieldValue,omitempty"`
}

// QuerySpansQueryTypeFieldName defines model for QuerySpansQueryTypeFieldName.
type QuerySpansQueryTypeFieldName struct {
	SpanRegex *string `json:"spanRegex,omitempty"`
}

// QuerySpansQueryTypeFieldValue defines model for QuerySpansQueryTypeFieldValue.
type QuerySpansQueryTypeFieldValue struct {
	ObservationField *CommonObservationField `json:"observationField,omitempty"`
	Value            *CommonSpanField        `json:"value,omitempty"`
}

// RumVersionDataLogMetadata defines model for RumVersionDataLogMetadata.
type RumVersionDataLogMetadata struct {
	FirstOccurrence *time.Time `json:"firstOccurrence,omitempty"`
	LastOccurrence  *time.Time `json:"lastOccurrence,omitempty"`
}

// RumVersionDataSourceMapMetadata defines model for RumVersionDataSourceMapMetadata.
type RumVersionDataSourceMapMetadata struct {
	CreatedAt            *time.Time `json:"createdAt,omitempty"`
	IsUploadedSuccessful *bool      `json:"isUploadedSuccessful,omitempty"`
}

// SlackConfigAttachment defines model for SlackConfigAttachment.
type SlackConfigAttachment struct {
	IsActive *bool                     `json:"isActive,omitempty"`
	Type     SlackConfigAttachmentType `json:"type"`
}

// SlackConfigAttachmentType defines model for SlackConfigAttachmentType.
type SlackConfigAttachmentType string

// SlackConfigDigest defines model for SlackConfigDigest.
type SlackConfigDigest struct {
	IsActive *bool                 `json:"isActive,omitempty"`
	Type     SlackConfigDigestType `json:"type"`
}

// SlackConfigDigestType defines model for SlackConfigDigestType.
type SlackConfigDigestType string

// SpanFieldMetadataField defines model for SpanFieldMetadataField.
type SpanFieldMetadataField string

// SpansAggregationDimensionAggregation defines model for SpansAggregationDimensionAggregation.
type SpansAggregationDimensionAggregation struct {
	AggregationType *DimensionAggregationDimensionAggregationType `json:"aggregationType,omitempty"`
	DimensionField  *DimensionAggregationDimensionField           `json:"dimensionField,omitempty"`
}

// SpansAggregationMetricAggregation defines model for SpansAggregationMetricAggregation.
type SpansAggregationMetricAggregation struct {
	AggregationType *MetricAggregationMetricAggregationType       `json:"aggregationType,omitempty"`
	MetricField     *SpansAggregationMetricAggregationMetricField `json:"metricField,omitempty"`
}

// SpansAggregationMetricAggregationMetricField defines model for SpansAggregationMetricAggregationMetricField.
type SpansAggregationMetricAggregationMetricField string

// TeamPermissionsMgmtServiceSetTeamGroupScopeBody Request message for setting scope filters (subsystems and applications) for a team group to control access permissions
type TeamPermissionsMgmtServiceSetTeamGroupScopeBody struct {
	GroupId      *map[string]interface{} `json:"groupId,omitempty"`
	ScopeFilters *V1ScopeFilters         `json:"scopeFilters,omitempty"`
}

// TestTemplateRenderResultFailureReason defines model for TestTemplateRenderResultFailureReason.
type TestTemplateRenderResultFailureReason string

// TypeLabelName defines model for TypeLabelName.
type TypeLabelName struct {
	MetricRegex *string `json:"metricRegex,omitempty"`
}

// TypeMetricName defines model for TypeMetricName.
type TypeMetricName struct {
	MetricRegex *string `json:"metricRegex,omitempty"`
}

// UndeployExtensionResponseFailedItem defines model for UndeployExtensionResponseFailedItem.
type UndeployExtensionResponseFailedItem struct {
	ItemId   string `json:"itemId"`
	Reason   string `json:"reason"`
	RemoteId string `json:"remoteId"`
}

// UpdateApiKeyRequestPresets This data structure represents a set of permissions presets on an API key.
type UpdateApiKeyRequestPresets struct {
	Presets []string `json:"presets"`
}

// UpdateTeamGroupRequestRoleUpdates This data structure represents the information associated with an API key.
type UpdateTeamGroupRequestRoleUpdates struct {
	RoleIds *[]V1RoleId `json:"roleIds,omitempty"`
}

// UpdateTeamGroupRequestUserUpdates This data structure represents the information associated with an API key.
type UpdateTeamGroupRequestUserUpdates struct {
	UserIds *[]Permissionsv1UserId `json:"userIds,omitempty"`
}

// VariableSelectionOptionsSelectionType defines model for VariableSelectionOptionsSelectionType.
type VariableSelectionOptionsSelectionType string

// XAxisXAxisByTime defines model for XAxisXAxisByTime.
type XAxisXAxisByTime struct {
	// BucketsPresented How many buckets to present in the selected timeframe
	BucketsPresented *int32 `json:"bucketsPresented,omitempty"`

	// Interval Interval of value sampling, i.e. every 5 minutes, every 1 second and so on
	Interval *string `json:"interval,omitempty"`
}

// XAxisXAxisByValue defines model for XAxisXAxisByValue.
type XAxisXAxisByValue = map[string]interface{}

// YAxisViewByYAxisViewByCategory defines model for YAxisViewByYAxisViewByCategory.
type YAxisViewByYAxisViewByCategory = map[string]interface{}

// YAxisViewByYAxisViewByValue defines model for YAxisViewByYAxisViewByValue.
type YAxisViewByYAxisViewByValue = map[string]interface{}

// Actionsv2Action defines model for actionsv2Action.
type Actionsv2Action struct {
	ApplicationNames *[]string            `json:"applicationNames,omitempty"`
	CreatedBy        *string              `json:"createdBy,omitempty"`
	Id               *string              `json:"id,omitempty"`
	IsHidden         *bool                `json:"isHidden,omitempty"`
	IsPrivate        *bool                `json:"isPrivate,omitempty"`
	Name             *string              `json:"name,omitempty"`
	SourceType       *Actionsv2SourceType `json:"sourceType,omitempty"`
	SubsystemNames   *[]string            `json:"subsystemNames,omitempty"`
	Url              *string              `json:"url,omitempty"`
}

// Actionsv2SourceType defines model for actionsv2SourceType.
type Actionsv2SourceType string

// Alertsv3AutoRetireTimeframe defines model for alertsv3AutoRetireTimeframe.
type Alertsv3AutoRetireTimeframe string

// Alertsv3ConnectorConfigField defines model for alertsv3ConnectorConfigField.
type Alertsv3ConnectorConfigField struct {
	// FieldName The name of the configuration field
	FieldName string `json:"fieldName"`

	// Template The template for the configuration field
	Template string `json:"template"`
}

// Alertsv3IntegrationType Defines the type of integration to use for notifications
type Alertsv3IntegrationType struct {
	// IntegrationId The integration ID for the notification
	IntegrationId *int64 `json:"integrationId,omitempty"`

	// Recipients List of email recipients for alert notifications
	Recipients *V3Recipients `json:"recipients,omitempty"`
}

// Alertsv3LogsFilter Filter configuration for log-based alerts
type Alertsv3LogsFilter struct {
	// SimpleFilter Basic filter configuration using a Lucene query and label filters
	SimpleFilter *V3LogsSimpleFilter `json:"simpleFilter,omitempty"`
}

// Alertsv3MessageConfigField Configuration field for a notification message
type Alertsv3MessageConfigField struct {
	// FieldName The name of the configuration field
	FieldName string `json:"fieldName"`

	// Template The template for the configuration field
	Template string `json:"template"`
}

// Alertsv3SetActiveResponse Response after enabling or disabling an alert definition
type Alertsv3SetActiveResponse = map[string]interface{}

// Alertsv3SloDefinition Configuration for SLO definition
type Alertsv3SloDefinition struct {
	// SloId The SLO ID
	SloId string `json:"sloId"`
}

// Alertsv3SourceOverrides defines model for alertsv3SourceOverrides.
type Alertsv3SourceOverrides struct {
	// ConnectorConfigFields Connector configuration fields
	ConnectorConfigFields []Alertsv3ConnectorConfigField `json:"connectorConfigFields"`

	// MessageConfigFields Notification message configuration fields
	MessageConfigFields []Alertsv3MessageConfigField `json:"messageConfigFields"`

	// OutputSchemaId The ID of the output schema to use for routing notifications
	OutputSchemaId string `json:"outputSchemaId"`
}

// Alertsv3UndetectedValuesManagement Configuration for handling undetected values in alerts
type Alertsv3UndetectedValuesManagement struct {
	AutoRetireTimeframe *Alertsv3AutoRetireTimeframe `json:"autoRetireTimeframe,omitempty"`

	// TriggerUndetectedValues Should trigger the alert when undetected values are detected
	TriggerUndetectedValues *bool `json:"triggerUndetectedValues,omitempty"`
}

// AstAnnotationSource defines model for astAnnotationSource.
type AstAnnotationSource struct {
	Logs    *AnnotationLogsSource    `json:"logs,omitempty"`
	Metrics *AnnotationMetricsSource `json:"metrics,omitempty"`
	Spans   *AnnotationSpansSource   `json:"spans,omitempty"`
}

// AstConstant defines model for astConstant.
type AstConstant struct {
	Value *string `json:"value,omitempty"`
}

// AstCustomSectionOptions defines model for astCustomSectionOptions.
type AstCustomSectionOptions struct {
	// Collapsed Indicator if the section is collapsed
	Collapsed *bool            `json:"collapsed,omitempty"`
	Color     *AstSectionColor `json:"color,omitempty"`

	// Description Short description of a section
	Description *string `json:"description,omitempty"`

	// Name Section custom name
	Name *string `json:"name,omitempty"`
}

// AstDashboard Dashboard represents the structure and configuration of a Coralogix Custom Dashboard.
type AstDashboard struct {
	AbsoluteTimeFrame *CommonTimeFrame `json:"absoluteTimeFrame,omitempty"`

	// Annotations A list of annotations that can be used within the dashboard's visualizations
	Annotations *[]V1astAnnotation `json:"annotations,omitempty"`

	// Description A brief description or summary of the dashboard's purpose or content
	Description *string `json:"description,omitempty"`

	// Filters A list of filters that can be applied to the dashboard's data
	Filters     *[]V1astFilter                   `json:"filters,omitempty"`
	FiveMinutes *DashboardAutoRefreshFiveMinutes `json:"fiveMinutes,omitempty"`
	FolderId    *V1UUID                          `json:"folderId,omitempty"`
	FolderPath  *AstFolderPath                   `json:"folderPath,omitempty"`

	// Id A unique identifier of the dashboard
	Id     *string   `json:"id,omitempty"`
	Layout AstLayout `json:"layout"`

	// Name The display name of the dashboard
	Name string                   `json:"name"`
	Off  *DashboardAutoRefreshOff `json:"off,omitempty"`

	// RelativeTimeFrame Relative time frame specifying a duration from the current time
	RelativeTimeFrame *string                         `json:"relativeTimeFrame,omitempty"`
	TwoMinutes        *DashboardAutoRefreshTwoMinutes `json:"twoMinutes,omitempty"`

	// Variables A list of variables that can be used within the dashboard for dynamic content
	Variables *[]AstVariable `json:"variables,omitempty"`
}

// AstFilterEquals This data structure represents an equality comparison operation.
type AstFilterEquals struct {
	// Selection This data structure defines the values for the equality comparison.
	Selection *FilterEqualsSelection `json:"selection,omitempty"`
}

// AstFilterLogsFilter This data structure represents the filter criteria for logs.
type AstFilterLogsFilter struct {
	// Field The log field to which the filter is applied.
	Field            *string                 `json:"field,omitempty"`
	ObservationField *CommonObservationField `json:"observationField,omitempty"`

	// Operator This data structure defines the comparison operation for the filter.
	Operator *AstFilterOperator `json:"operator,omitempty"`
}

// AstFilterNotEquals This data structure represents a non-equality comparison operation.
type AstFilterNotEquals struct {
	// Selection This data structure defines the values for the non-equality comparison.
	Selection *FilterNotEqualsSelection `json:"selection,omitempty"`
}

// AstFilterOperator This data structure defines the comparison operation for the filter.
type AstFilterOperator struct {
	// Equals This data structure represents an equality comparison operation.
	Equals *AstFilterEquals `json:"equals,omitempty"`

	// NotEquals This data structure represents a non-equality comparison operation.
	NotEquals *AstFilterNotEquals `json:"notEquals,omitempty"`
}

// AstFilterSource Defines the type of data the filter applies to.
type AstFilterSource struct {
	// Logs This data structure represents the filter criteria for logs.
	Logs *AstFilterLogsFilter `json:"logs,omitempty"`

	// Metrics This data structure represents the filter criteria for metrics.
	Metrics *FilterMetricsFilter `json:"metrics,omitempty"`

	// Spans This data structure represents the filter criteria for spans.
	Spans *FilterSpansFilter `json:"spans,omitempty"`
}

// AstFolderPath defines model for astFolderPath.
type AstFolderPath struct {
	Segments *[]string `json:"segments,omitempty"`
}

// AstInternalSectionOptions defines model for astInternalSectionOptions.
type AstInternalSectionOptions = map[string]interface{}

// AstLayout defines model for astLayout.
type AstLayout struct {
	// Sections The list of sections in the dashboard
	Sections *[]AstSection `json:"sections,omitempty"`
}

// AstMultiSelect defines model for astMultiSelect.
type AstMultiSelect struct {
	Selected             *[]string                            `json:"selected,omitempty"`
	Selection            *AstMultiSelectSelection             `json:"selection,omitempty"`
	SelectionOptions     *MultiSelectVariableSelectionOptions `json:"selectionOptions,omitempty"`
	Source               *AstMultiSelectSource                `json:"source,omitempty"`
	ValuesOrderDirection *CommonOrderDirection                `json:"valuesOrderDirection,omitempty"`
}

// AstMultiSelectQuery defines model for astMultiSelectQuery.
type AstMultiSelectQuery struct {
	LogsQuery    *MultiSelectQueryLogsQuery    `json:"logsQuery,omitempty"`
	MetricsQuery *MultiSelectQueryMetricsQuery `json:"metricsQuery,omitempty"`
	SpansQuery   *MultiSelectQuerySpansQuery   `json:"spansQuery,omitempty"`
}

// AstMultiSelectSelection defines model for astMultiSelectSelection.
type AstMultiSelectSelection struct {
	All  *AstMultiSelectSelectionAllSelection  `json:"all,omitempty"`
	List *AstMultiSelectSelectionListSelection `json:"list,omitempty"`
}

// AstMultiSelectSelectionAllSelection defines model for astMultiSelectSelectionAllSelection.
type AstMultiSelectSelectionAllSelection = map[string]interface{}

// AstMultiSelectSelectionListSelection defines model for astMultiSelectSelectionListSelection.
type AstMultiSelectSelectionListSelection struct {
	Labels *[]string `json:"labels,omitempty"`
	Values *[]string `json:"values,omitempty"`
}

// AstMultiSelectSource defines model for astMultiSelectSource.
type AstMultiSelectSource struct {
	ConstantList *MultiSelectConstantListSource `json:"constantList,omitempty"`
	LogsPath     *MultiSelectLogsPathSource     `json:"logsPath,omitempty"`
	MetricLabel  *MultiSelectMetricLabelSource  `json:"metricLabel,omitempty"`
	Query        *MultiSelectQuerySource        `json:"query,omitempty"`
	SpanField    *MultiSelectSpanFieldSource    `json:"spanField,omitempty"`
}

// AstRow defines model for astRow.
type AstRow struct {
	Appearance *AstRowAppearance `json:"appearance,omitempty"`
	Id         *V1UUID           `json:"id,omitempty"`

	// Widgets The list of widgets in the row
	Widgets *[]AstWidget `json:"widgets,omitempty"`
}

// AstRowAppearance defines model for astRowAppearance.
type AstRowAppearance struct {
	// Height Height of a row, defined as a multiplier number of the base height, where 1 = 1 * base height, 2 = 2 * base height etc
	Height *int32 `json:"height,omitempty"`
}

// AstSection defines model for astSection.
type AstSection struct {
	Id      *V1UUID            `json:"id,omitempty"`
	Options *AstSectionOptions `json:"options,omitempty"`

	// Rows Definition of a section's rows (one row represents a single row of visualizations)
	Rows *[]AstRow `json:"rows,omitempty"`
}

// AstSectionColor defines model for astSectionColor.
type AstSectionColor struct {
	Predefined *AstSectionPredefinedColor `json:"predefined,omitempty"`
}

// AstSectionOptions defines model for astSectionOptions.
type AstSectionOptions struct {
	Custom   *AstCustomSectionOptions   `json:"custom,omitempty"`
	Internal *AstInternalSectionOptions `json:"internal,omitempty"`
}

// AstSectionPredefinedColor defines model for astSectionPredefinedColor.
type AstSectionPredefinedColor string

// AstVariable defines model for astVariable.
type AstVariable struct {
	Definition  *AstVariableDefinition  `json:"definition,omitempty"`
	Description *string                 `json:"description,omitempty"`
	DisplayName *string                 `json:"displayName,omitempty"`
	DisplayType *AstVariableDisplayType `json:"displayType,omitempty"`
	Name        *string                 `json:"name,omitempty"`
}

// AstVariableDefinition defines model for astVariableDefinition.
type AstVariableDefinition struct {
	Constant    *AstConstant    `json:"constant,omitempty"`
	MultiSelect *AstMultiSelect `json:"multiSelect,omitempty"`
}

// AstVariableDisplayType defines model for astVariableDisplayType.
type AstVariableDisplayType string

// AstWidget This data structure represents a dashboard widget.
type AstWidget struct {
	Appearance *AstWidgetAppearance `json:"appearance,omitempty"`
	CreatedAt  *time.Time           `json:"createdAt,omitempty"`
	Definition *AstWidgetDefinition `json:"definition,omitempty"`

	// Description Short description of the widget
	Description *string `json:"description,omitempty"`
	Id          *V1UUID `json:"id,omitempty"`

	// Title Name of the widget
	Title     *string    `json:"title,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// AstWidgetAppearance defines model for astWidgetAppearance.
type AstWidgetAppearance struct {
	Width *int32 `json:"width,omitempty"`
}

// AstWidgetDefinition defines model for astWidgetDefinition.
type AstWidgetDefinition struct {
	// BarChart BarChart represents the configuration of a vertical bar chart widget.
	BarChart           *WidgetsBarChart           `json:"barChart,omitempty"`
	DataTable          *WidgetsDataTable          `json:"dataTable,omitempty"`
	Gauge              *WidgetsGauge              `json:"gauge,omitempty"`
	Hexagon            *WidgetsHexagon            `json:"hexagon,omitempty"`
	HorizontalBarChart *WidgetsHorizontalBarChart `json:"horizontalBarChart,omitempty"`

	// LineChart LineChart represents the configuration of a line chart widget.
	LineChart *WidgetsLineChart `json:"lineChart,omitempty"`
	Markdown  *WidgetsMarkdown  `json:"markdown,omitempty"`
	PieChart  *WidgetsPieChart  `json:"pieChart,omitempty"`
}

// AstwidgetscommonLuceneQuery defines model for astwidgetscommonLuceneQuery.
type AstwidgetscommonLuceneQuery struct {
	Value *string `json:"value,omitempty"`
}

// AstwidgetscommonPromQlQuery defines model for astwidgetscommonPromQlQuery.
type AstwidgetscommonPromQlQuery struct {
	Value *string `json:"value,omitempty"`
}

// CommonColorsBy defines model for commonColorsBy.
type CommonColorsBy struct {
	Aggregation *ColorsByColorsByAggregation `json:"aggregation,omitempty"`
	GroupBy     *ColorsByColorsByGroupBy     `json:"groupBy,omitempty"`
	Stack       *ColorsByColorsByStack       `json:"stack,omitempty"`
}

// CommonDashboardFolder defines model for commonDashboardFolder.
type CommonDashboardFolder struct {
	Id       *string `json:"id,omitempty"`
	Name     *string `json:"name,omitempty"`
	ParentId *string `json:"parentId,omitempty"`
}

// CommonDataModeType defines model for commonDataModeType.
type CommonDataModeType string

// CommonLegend defines model for commonLegend.
type CommonLegend struct {
	// Columns List of columns to display in legend
	Columns *[]LegendLegendColumn `json:"columns,omitempty"`

	// GroupByQuery In case of multiple queries, whether legend items should be grouped by their respective queries
	GroupByQuery *bool `json:"groupByQuery,omitempty"`

	// IsVisible Is the legend visible in the widget
	IsVisible *bool                  `json:"isVisible,omitempty"`
	Placement *LegendLegendPlacement `json:"placement,omitempty"`
}

// CommonLegendBy defines model for commonLegendBy.
type CommonLegendBy string

// CommonLogsAggregation defines model for commonLogsAggregation.
type CommonLogsAggregation struct {
	Average       *LogsAggregationAverage       `json:"average,omitempty"`
	Count         *LogsAggregationCount         `json:"count,omitempty"`
	CountDistinct *LogsAggregationCountDistinct `json:"countDistinct,omitempty"`
	Max           *LogsAggregationMax           `json:"max,omitempty"`
	Min           *LogsAggregationMin           `json:"min,omitempty"`
	Percentile    *LogsAggregationPercentile    `json:"percentile,omitempty"`
	Sum           *LogsAggregationSum           `json:"sum,omitempty"`
}

// CommonMetricsQueryEditorMode defines model for commonMetricsQueryEditorMode.
type CommonMetricsQueryEditorMode string

// CommonObservationField defines model for commonObservationField.
type CommonObservationField struct {
	Keypath *[]string             `json:"keypath,omitempty"`
	Scope   *V1commonDatasetScope `json:"scope,omitempty"`
}

// CommonOrderDirection defines model for commonOrderDirection.
type CommonOrderDirection string

// CommonOrderingField defines model for commonOrderingField.
type CommonOrderingField struct {
	// Field Field name to order by
	Field          *string               `json:"field,omitempty"`
	OrderDirection *CommonOrderDirection `json:"orderDirection,omitempty"`
}

// CommonPromQLQueryType defines model for commonPromQLQueryType.
type CommonPromQLQueryType string

// CommonScaleType defines model for commonScaleType.
type CommonScaleType string

// CommonSortByType defines model for commonSortByType.
type CommonSortByType string

// CommonSpanField defines model for commonSpanField.
type CommonSpanField struct {
	MetadataField   *SpanFieldMetadataField `json:"metadataField,omitempty"`
	ProcessTagField *string                 `json:"processTagField,omitempty"`
	TagField        *string                 `json:"tagField,omitempty"`
}

// CommonSpanObservationField defines model for commonSpanObservationField.
type CommonSpanObservationField struct {
	Keypath *[]string `json:"keypath,omitempty"`

	// RelationType Spans are organized in traces, traces can be seen as a tree where each node is a span.
	//
	//  - SPAN_RELATION_TYPE_NONE_UNSPECIFIED: No relation, it references fields on a span.
	//  - SPAN_RELATION_TYPE_OTHER: Other relation, it references fields of "any other" span in the trace.
	//  - SPAN_RELATION_TYPE_PARENT: Parent relation, it references fields of the parent span.
	//  - SPAN_RELATION_TYPE_ROOT: Root relation, it references fields of the root span.
	RelationType *CommonSpanRelationType `json:"relationType,omitempty"`
	Scope        *V1commonDatasetScope   `json:"scope,omitempty"`
}

// CommonSpanRelationType Spans are organized in traces, traces can be seen as a tree where each node is a span.
//
//   - SPAN_RELATION_TYPE_NONE_UNSPECIFIED: No relation, it references fields on a span.
//   - SPAN_RELATION_TYPE_OTHER: Other relation, it references fields of "any other" span in the trace.
//   - SPAN_RELATION_TYPE_PARENT: Parent relation, it references fields of the parent span.
//   - SPAN_RELATION_TYPE_ROOT: Root relation, it references fields of the root span.
type CommonSpanRelationType string

// CommonSpansAggregation defines model for commonSpansAggregation.
type CommonSpansAggregation struct {
	DimensionAggregation *SpansAggregationDimensionAggregation `json:"dimensionAggregation,omitempty"`
	MetricAggregation    *SpansAggregationMetricAggregation    `json:"metricAggregation,omitempty"`
}

// CommonThresholdType defines model for commonThresholdType.
type CommonThresholdType string

// CommonTimeFrame defines model for commonTimeFrame.
type CommonTimeFrame struct {
	From *time.Time `json:"from,omitempty"`
	To   *time.Time `json:"to,omitempty"`
}

// CommonTimeFrameSelect defines model for commonTimeFrameSelect.
type CommonTimeFrameSelect struct {
	AbsoluteTimeFrame *CommonTimeFrame `json:"absoluteTimeFrame,omitempty"`
	RelativeTimeFrame *string          `json:"relativeTimeFrame,omitempty"`
}

// Coralogixapisalertsv3PaginationResponse defines model for coralogixapisalertsv3PaginationResponse.
type Coralogixapisalertsv3PaginationResponse struct {
	NextPageToken *string `json:"nextPageToken,omitempty"`
	TotalSize     *int64  `json:"totalSize,omitempty"`
}

// Coralogixapiseventsv3PaginationResponse defines model for coralogixapiseventsv3PaginationResponse.
type Coralogixapiseventsv3PaginationResponse struct {
	NextPageToken *string `json:"nextPageToken,omitempty"`
	TotalSize     *int64  `json:"totalSize,omitempty"`
}

// Coralogixapisincidentsv1MetaLabel defines model for coralogixapisincidentsv1MetaLabel.
type Coralogixapisincidentsv1MetaLabel struct {
	Key   *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}

// Coralogixapisincidentsv1TimeRange Represents a time range with start and end timestamps
type Coralogixapisincidentsv1TimeRange struct {
	// EndTime End time of the range
	EndTime time.Time `json:"endTime"`

	// StartTime Start time of the range
	StartTime time.Time `json:"startTime"`
}

// Coralogixapislogs2metricsv2Severity defines model for coralogixapislogs2metricsv2Severity.
type Coralogixapislogs2metricsv2Severity string

// CoralogixapisnotificationCenterConditionType defines model for coralogixapisnotification_centerConditionType.
type CoralogixapisnotificationCenterConditionType struct {
	MatchEntityType           *NotificationCenterMatchEntityTypeCondition           `json:"matchEntityType,omitempty"`
	MatchEntityTypeAndSubType *NotificationCenterMatchEntityTypeAndSubTypeCondition `json:"matchEntityTypeAndSubType,omitempty"`
}

// CoralogixapisnotificationCenterConnectorConfigField defines model for coralogixapisnotification_centerConnectorConfigField.
type CoralogixapisnotificationCenterConnectorConfigField struct {
	FieldName *string `json:"fieldName,omitempty"`
	Value     *string `json:"value,omitempty"`
}

// CoralogixapisnotificationCenterEntityType defines model for coralogixapisnotification_centerEntityType.
type CoralogixapisnotificationCenterEntityType string

// CoralogixapisnotificationCenterMessageConfigField Message config field provides a way to define a template that can be used to render the notification content
type CoralogixapisnotificationCenterMessageConfigField struct {
	FieldName string `json:"fieldName"`
	Template  string `json:"template"`
}

// CoralogixapisnotificationCenterPresetIdentifier defines model for coralogixapisnotification_centerPresetIdentifier.
type CoralogixapisnotificationCenterPresetIdentifier struct {
	Id            *string `json:"id,omitempty"`
	UserDefinedId *string `json:"userDefinedId,omitempty"`
}

// Coralogixapisscopesv1EntityType defines model for coralogixapisscopesv1EntityType.
type Coralogixapisscopesv1EntityType string

// Coralogixapisscopesv1Filter This data structure represents a filter
type Coralogixapisscopesv1Filter struct {
	EntityType *Coralogixapisscopesv1EntityType `json:"entityType,omitempty"`
	Expression *string                          `json:"expression,omitempty"`
}

// Coralogixapisscopesv1Scope This data structure represents a scope
type Coralogixapisscopesv1Scope struct {
	DefaultExpression *string                        `json:"defaultExpression,omitempty"`
	Description       *string                        `json:"description,omitempty"`
	DisplayName       *string                        `json:"displayName,omitempty"`
	Filters           *[]Coralogixapisscopesv1Filter `json:"filters,omitempty"`
	Id                *string                        `json:"id,omitempty"`
	TeamId            *int32                         `json:"teamId,omitempty"`
}

// Coralogixapisviewsv1Filter View folder.
type Coralogixapisviewsv1Filter struct {
	// Name Filter name
	Name string `json:"name"`

	// SelectedValues Filter selected values
	SelectedValues map[string]bool `json:"selectedValues"`
}

// Coralogixarchivev1Retention This data structure represents a retention
type Coralogixarchivev1Retention struct {
	Editable *bool   `json:"editable,omitempty"`
	Id       *string `json:"id,omitempty"`
	Name     *string `json:"name,omitempty"`
	Order    *int32  `json:"order,omitempty"`
}

// Coralogixdatausagev2Severity defines model for coralogixdatausagev2Severity.
type Coralogixdatausagev2Severity string

// Coralogixenrichmentv1Enrichment This data structure represents an enrichment
type Coralogixenrichmentv1Enrichment struct {
	EnrichedFieldName *string                             `json:"enrichedFieldName,omitempty"`
	EnrichmentType    Coralogixenrichmentv1EnrichmentType `json:"enrichmentType"`
	FieldName         string                              `json:"fieldName"`
	Id                int64                               `json:"id"`
	SelectedColumns   *[]string                           `json:"selectedColumns,omitempty"`
}

// Coralogixenrichmentv1EnrichmentType defines model for coralogixenrichmentv1EnrichmentType.
type Coralogixenrichmentv1EnrichmentType struct {
	Aws              *V1AwsType              `json:"aws,omitempty"`
	CustomEnrichment *V1CustomEnrichmentType `json:"customEnrichment,omitempty"`
	GeoIp            *V1GeoIpType            `json:"geoIp,omitempty"`
	SuspiciousIp     *V1SuspiciousIpType     `json:"suspiciousIp,omitempty"`
}

// Coralogixpermissionsv1Scope / A group scope has a list of filters for subsystems and applications. Used to filter traffic based on user defined rules.
type Coralogixpermissionsv1Scope struct {
	Filters *V1ScopeFilters `json:"filters,omitempty"`
	Id      *V1ScopeId      `json:"id,omitempty"`
}

// Coralogixpermissionsv1TeamId defines model for coralogixpermissionsv1TeamId.
type Coralogixpermissionsv1TeamId struct {
	Id *int64 `json:"id,omitempty"`
}

// Coralogixquotav1Priority defines model for coralogixquotav1Priority.
type Coralogixquotav1Priority string

// Coralogixquotav1Rule defines model for coralogixquotav1Rule.
type Coralogixquotav1Rule struct {
	Name       *string       `json:"name,omitempty"`
	RuleTypeId *V1RuleTypeId `json:"ruleTypeId,omitempty"`
}

// Coralogixquotav1Severity defines model for coralogixquotav1Severity.
type Coralogixquotav1Severity string

// Coralogixrulesv1Rule defines model for coralogixrulesv1Rule.
type Coralogixrulesv1Rule struct {
	Description *string           `json:"description,omitempty"`
	Enabled     *bool             `json:"enabled,omitempty"`
	Id          *string           `json:"id,omitempty"`
	Name        *string           `json:"name,omitempty"`
	Order       *int64            `json:"order,omitempty"`
	Parameters  *V1RuleParameters `json:"parameters,omitempty"`
	SourceField *string           `json:"sourceField,omitempty"`
}

// Coralogixrulesv1TeamId defines model for coralogixrulesv1TeamId.
type Coralogixrulesv1TeamId struct {
	Id *int64 `json:"id,omitempty"`
}

// Dashboardsv1commonLuceneQuery defines model for dashboardsv1commonLuceneQuery.
type Dashboardsv1commonLuceneQuery struct {
	Value *string `json:"value,omitempty"`
}

// Dashboardsv1commonPromQlQuery defines model for dashboardsv1commonPromQlQuery.
type Dashboardsv1commonPromQlQuery struct {
	Value *string `json:"value,omitempty"`
}

// Datausagev2DateRange This data structure represents a date range.
type Datausagev2DateRange struct {
	FromDate *time.Time `json:"fromDate,omitempty"`
	ToDate   *time.Time `json:"toDate,omitempty"`
}

// Datausagev2GB defines model for datausagev2GB.
type Datausagev2GB struct {
	Value *float32 `json:"value,omitempty"`
}

// Datausagev2Pillar defines model for datausagev2Pillar.
type Datausagev2Pillar string

// Datausagev2Priority defines model for datausagev2Priority.
type Datausagev2Priority string

// Datausagev2Range defines model for datausagev2Range.
type Datausagev2Range string

// Datausagev2TcoTier defines model for datausagev2TcoTier.
type Datausagev2TcoTier string

// Datausagev2Unit defines model for datausagev2Unit.
type Datausagev2Unit struct {
	Value *float32 `json:"value,omitempty"`
}

// Events2metricsv2Aggregation This data structure represents an aggregation
type Events2metricsv2Aggregation struct {
	AggType *AggregationAggType `json:"aggType,omitempty"`
	Enabled *bool               `json:"enabled,omitempty"`

	// Histogram This data structure represents the e2m aggregate histogram
	Histogram *V2E2MAggHistogram `json:"histogram,omitempty"`

	// Samples This data structure represents the e2m aggregate samples
	Samples          *V2E2MAggSamples `json:"samples,omitempty"`
	TargetMetricName *string          `json:"targetMetricName,omitempty"`
}

// Events2metricsv2MetricField This data structure represents a metric field
type Events2metricsv2MetricField struct {
	Aggregations         []Events2metricsv2Aggregation `json:"aggregations"`
	SourceField          string                        `json:"sourceField"`
	TargetBaseMetricName string                        `json:"targetBaseMetricName"`
}

// Eventsv3FilterOperator defines model for eventsv3FilterOperator.
type Eventsv3FilterOperator string

// Extensionsv1Extension defines model for extensionsv1Extension.
type Extensionsv1Extension struct {
	Changelog                 *[]V1ChangelogEntry    `json:"changelog,omitempty"`
	DarkModeImage             *string                `json:"darkModeImage,omitempty"`
	Deprecation               *V1Deprecation         `json:"deprecation,omitempty"`
	Id                        string                 `json:"id"`
	Image                     string                 `json:"image"`
	Integrations              *[]string              `json:"integrations,omitempty"`
	IsHidden                  *bool                  `json:"isHidden,omitempty"`
	Keywords                  *[]string              `json:"keywords,omitempty"`
	Name                      string                 `json:"name"`
	PermissionDeniedRevisions *[]V1ExtensionRevision `json:"permissionDeniedRevisions,omitempty"`
	Revisions                 *[]V1ExtensionRevision `json:"revisions,omitempty"`
}

// Incidentsv1FilterOperator defines model for incidentsv1FilterOperator.
type Incidentsv1FilterOperator string

// Incidentsv1OrderBy defines model for incidentsv1OrderBy.
type Incidentsv1OrderBy struct {
	ContextualLabel *string                     `json:"contextualLabel,omitempty"`
	Direction       Incidentsv1OrderByDirection `json:"direction"`
	IncidentField   *V1IncidentFields           `json:"incidentField,omitempty"`
}

// Incidentsv1OrderByDirection defines model for incidentsv1OrderByDirection.
type Incidentsv1OrderByDirection string

// Incidentsv1PaginationRequest Pagination parameters for list requests
type Incidentsv1PaginationRequest struct {
	// PageSize Number of items to return per page
	PageSize int64 `json:"pageSize"`

	// PageToken Token for the next page of results
	PageToken *string `json:"pageToken,omitempty"`
}

// Incidentsv1PaginationResponse Pagination information for list responses
type Incidentsv1PaginationResponse struct {
	// NextPageToken Token for the next page of results
	NextPageToken *string `json:"nextPageToken,omitempty"`

	// TotalSize Total number of items available
	TotalSize int64 `json:"totalSize"`
}

// Integrationsv1IntegrationType This data structure represents an integration type.
type Integrationsv1IntegrationType struct {
	// Arm This data structure represents an Azure ARM integration.
	Arm *IntegrationTypeAzureArm `json:"arm,omitempty"`

	// Cloudformation This data structure represents a CloudFormation integration.
	Cloudformation *IntegrationTypeCloudformation `json:"cloudformation,omitempty"`

	// ContextualData This data structure represents a contextual data integration.
	ContextualData *IntegrationTypeContextualData `json:"contextualData,omitempty"`

	// GenericWebhook This data structure represents a generic webhook integration.
	GenericWebhook *IntegrationTypeGenericWebhook `json:"genericWebhook,omitempty"`

	// Managed This data structure represents a managed integration.
	Managed *IntegrationTypeManaged `json:"managed,omitempty"`

	// PushBasedContextualData This data structure represents a push based contextual data integration.
	PushBasedContextualData *IntegrationTypePushBasedContextualData `json:"pushBasedContextualData,omitempty"`

	// Untracked This data structure represents an untracked integration.
	Untracked *IntegrationTypeUntracked `json:"untracked,omitempty"`
}

// Logs2metricsv2LogsQuery This data structure represents a query for logs.
type Logs2metricsv2LogsQuery struct {
	Alias                  *string                                `json:"alias,omitempty"`
	ApplicationnameFilters *[]string                              `json:"applicationnameFilters,omitempty"`
	Lucene                 *string                                `json:"lucene,omitempty"`
	SeverityFilters        *[]Coralogixapislogs2metricsv2Severity `json:"severityFilters,omitempty"`
	SubsystemnameFilters   *[]string                              `json:"subsystemnameFilters,omitempty"`
}

// MetricsConfiguratorConfigureTenantRequest This data structure is used to configure a tenant.
type MetricsConfiguratorConfigureTenantRequest struct {
	// Ibm This data structure is used to configure an IBM bucket.
	Ibm *MetricsConfiguratorIbmConfigV2 `json:"ibm,omitempty"`

	// RetentionPolicy This data structure is used to set the retention policy for a tenant.
	RetentionPolicy MetricsConfiguratorRetentionPolicyRequest `json:"retentionPolicy"`

	// S3 This data structure represents the S3 configuration for a tenant.
	S3 *MetricsConfiguratorS3Config `json:"s3,omitempty"`
}

// MetricsConfiguratorGetTenantConfigResponseV2 defines model for metrics_configuratorGetTenantConfigResponseV2.
type MetricsConfiguratorGetTenantConfigResponseV2 struct {
	TenantConfig *MetricsConfiguratorTenantConfigV2 `json:"tenantConfig,omitempty"`
}

// MetricsConfiguratorIbmConfigV2 This data structure is used to configure an IBM bucket.
type MetricsConfiguratorIbmConfigV2 struct {
	Crn        string `json:"crn"`
	Endpoint   string `json:"endpoint"`
	ServiceCrn string `json:"serviceCrn"`
}

// MetricsConfiguratorRetentionPolicyRequest This data structure is used to set the retention policy for a tenant.
type MetricsConfiguratorRetentionPolicyRequest struct {
	FiveMinutesResolution int64 `json:"fiveMinutesResolution"`
	OneHourResolution     int64 `json:"oneHourResolution"`
	RawResolution         int64 `json:"rawResolution"`
}

// MetricsConfiguratorS3Config This data structure represents the S3 configuration for a tenant.
type MetricsConfiguratorS3Config struct {
	Bucket string `json:"bucket"`
	Region string `json:"region"`
}

// MetricsConfiguratorTenantConfigV2 defines model for metrics_configuratorTenantConfigV2.
type MetricsConfiguratorTenantConfigV2 struct {
	Disabled *bool `json:"disabled,omitempty"`

	// Ibm This data structure is used to configure an IBM bucket.
	Ibm    *MetricsConfiguratorIbmConfigV2 `json:"ibm,omitempty"`
	Prefix *string                         `json:"prefix,omitempty"`

	// RetentionPolicy This data structure is used to set the retention policy for a tenant.
	RetentionPolicy *MetricsConfiguratorRetentionPolicyRequest `json:"retentionPolicy,omitempty"`

	// S3 This data structure represents the S3 configuration for a tenant.
	S3       *MetricsConfiguratorS3Config `json:"s3,omitempty"`
	TenantId *int64                       `json:"tenantId,omitempty"`
}

// MetricsConfiguratorUpdateRequest This data structure is used to update the configuration of a tenant.
type MetricsConfiguratorUpdateRequest struct {
	// Ibm This data structure is used to configure an IBM bucket.
	Ibm           *MetricsConfiguratorIbmConfigV2 `json:"ibm,omitempty"`
	RetentionDays int64                           `json:"retentionDays"`

	// S3 This data structure represents the S3 configuration for a tenant.
	S3 *MetricsConfiguratorS3Config `json:"s3,omitempty"`
}

// MetricsConfiguratorValidateBucketRequest This data structure is used to validate a bucket.
type MetricsConfiguratorValidateBucketRequest struct {
	// Ibm This data structure is used to configure an IBM bucket.
	Ibm *MetricsConfiguratorIbmConfigV2 `json:"ibm,omitempty"`

	// S3 This data structure represents the S3 configuration for a tenant.
	S3 *MetricsConfiguratorS3Config `json:"s3,omitempty"`
}

// MetricsTcoAddRequest This data structure is used to add a metrics tco rule.
type MetricsTcoAddRequest struct {
	Label string `json:"label"`
	Regex string `json:"regex"`
}

// MetricsTcoDeleteRequest defines model for metrics_tcoDeleteRequest.
type MetricsTcoDeleteRequest struct {
	RuleId *string `json:"ruleId,omitempty"`
}

// MetricsTcoGetResponse defines model for metrics_tcoGetResponse.
type MetricsTcoGetResponse struct {
	Rules *[]MetricsmetricsTcoRule `json:"rules,omitempty"`
}

// MetricsmetricsTcoRule This data structure represents a metrics tco rule.
type MetricsmetricsTcoRule struct {
	Id    string `json:"id"`
	Label string `json:"label"`
	Regex string `json:"regex"`
}

// NotificationCenterConfigOverrides defines model for notification_centerConfigOverrides.
type NotificationCenterConfigOverrides struct {
	ConditionType *CoralogixapisnotificationCenterConditionType `json:"conditionType,omitempty"`
	MessageConfig *NotificationCenterMessageConfig              `json:"messageConfig,omitempty"`
	PayloadType   *string                                       `json:"payloadType,omitempty"`
}

// NotificationCenterConnectorIdentifier defines model for notification_centerConnectorIdentifier.
type NotificationCenterConnectorIdentifier struct {
	Id            *string `json:"id,omitempty"`
	UserDefinedId *string `json:"userDefinedId,omitempty"`
}

// NotificationCenterConnectorType defines model for notification_centerConnectorType.
type NotificationCenterConnectorType string

// NotificationCenterMatchEntityTypeAndSubTypeCondition defines model for notification_centerMatchEntityTypeAndSubTypeCondition.
type NotificationCenterMatchEntityTypeAndSubTypeCondition struct {
	DeprecatedEntityType *string                                    `json:"deprecatedEntityType,omitempty"`
	EntitySubType        *string                                    `json:"entitySubType,omitempty"`
	EntityType           *CoralogixapisnotificationCenterEntityType `json:"entityType,omitempty"`
}

// NotificationCenterMatchEntityTypeCondition defines model for notification_centerMatchEntityTypeCondition.
type NotificationCenterMatchEntityTypeCondition struct {
	DeprecatedEntityType *string                                    `json:"deprecatedEntityType,omitempty"`
	EntityType           *CoralogixapisnotificationCenterEntityType `json:"entityType,omitempty"`
}

// NotificationCenterMessageConfig defines model for notification_centerMessageConfig.
type NotificationCenterMessageConfig struct {
	Fields *[]CoralogixapisnotificationCenterMessageConfigField `json:"fields,omitempty"`
}

// NotificationCenterTemplatedConnectorConfigField defines model for notification_centerTemplatedConnectorConfigField.
type NotificationCenterTemplatedConnectorConfigField struct {
	FieldName *string `json:"fieldName,omitempty"`
	Template  *string `json:"template,omitempty"`
}

// Permissionsv1User defines model for permissionsv1User.
type Permissionsv1User struct {
	FirstName *string `json:"firstName,omitempty"`
	LastName  *string `json:"lastName,omitempty"`

	// Status - USER_STATUS_ACTIVE: / User is active
	//  - USER_STATUS_INACTIVE: / User is inactive
	Status        *V1UserStatus               `json:"status,omitempty"`
	UserAccountId *Permissionsv1UserAccountId `json:"userAccountId,omitempty"`
	UserId        *Permissionsv1UserId        `json:"userId,omitempty"`
	Username      *string                     `json:"username,omitempty"`
}

// Permissionsv1UserAccountId defines model for permissionsv1UserAccountId.
type Permissionsv1UserAccountId struct {
	Id *int64 `json:"id,omitempty"`
}

// Permissionsv1UserId defines model for permissionsv1UserId.
type Permissionsv1UserId struct {
	Id *string `json:"id,omitempty"`
}

// Presetsv1Preset Set of preconfigured templates for notification content rendering
type Presetsv1Preset struct {
	ConfigOverrides      []NotificationCenterConfigOverrides       `json:"configOverrides"`
	ConnectorType        *NotificationCenterConnectorType          `json:"connectorType,omitempty"`
	CreateTime           *time.Time                                `json:"createTime,omitempty"`
	DeprecatedEntityType *string                                   `json:"deprecatedEntityType,omitempty"`
	Description          *string                                   `json:"description,omitempty"`
	EntityType           CoralogixapisnotificationCenterEntityType `json:"entityType"`
	Id                   *string                                   `json:"id,omitempty"`
	Name                 string                                    `json:"name"`
	ParentId             *string                                   `json:"parentId,omitempty"`
	PresetType           *V1PresetType                             `json:"presetType,omitempty"`
	UpdateTime           *time.Time                                `json:"updateTime,omitempty"`
	UserDefinedId        *string                                   `json:"userDefinedId,omitempty"`
}

// ProtobufAny defines model for protobufAny.
type ProtobufAny struct {
	Type                 *string                `json:"@type,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Quotav1SourceType defines model for quotav1SourceType.
type Quotav1SourceType string

// RoutingRoutingRule Defines routing rule for notifications
type RoutingRoutingRule struct {
	Condition     string                 `json:"condition"`
	CustomDetails *map[string]string     `json:"customDetails,omitempty"`
	Name          *string                `json:"name,omitempty"`
	Targets       []RoutingRoutingTarget `json:"targets"`
}

// RoutingRoutingTarget Defines routing target for notifications
type RoutingRoutingTarget struct {
	ConnectorId           string                                           `json:"connectorId"`
	ConnectorIdentifier   *NotificationCenterConnectorIdentifier           `json:"connectorIdentifier,omitempty"`
	CustomDetails         *map[string]string                               `json:"customDetails,omitempty"`
	DeprecatedConnectorId *string                                          `json:"deprecatedConnectorId,omitempty"`
	DeprecatedPresetId    *string                                          `json:"deprecatedPresetId,omitempty"`
	PresetId              *string                                          `json:"presetId,omitempty"`
	PresetIdentifier      *CoralogixapisnotificationCenterPresetIdentifier `json:"presetIdentifier,omitempty"`
}

// RpcCode The canonical error codes for gRPC APIs.
//
// Sometimes multiple error codes may apply.  Services should return
// the most specific error code that applies.  For example, prefer
// `OUT_OF_RANGE` over `FAILED_PRECONDITION` if both codes apply.
// Similarly prefer `NOT_FOUND` or `ALREADY_EXISTS` over `FAILED_PRECONDITION`.
//
//   - OK: Not an error; returned on success.
//
// HTTP Mapping: 200 OK
//   - CANCELLED: The operation was cancelled, typically by the caller.
//
// HTTP Mapping: 499 Client Closed Request
//   - UNKNOWN: Unknown error.  For example, this error may be returned when
//
// a `Status` value received from another address space belongs to
// an error space that is not known in this address space.  Also
// errors raised by APIs that do not return enough error information
// may be converted to this error.
//
// HTTP Mapping: 500 Internal Server Error
//   - INVALID_ARGUMENT: The client specified an invalid argument.  Note that this differs
//
// from `FAILED_PRECONDITION`.  `INVALID_ARGUMENT` indicates arguments
// that are problematic regardless of the state of the system
// (e.g., a malformed file name).
//
// HTTP Mapping: 400 Bad Request
//   - DEADLINE_EXCEEDED: The deadline expired before the operation could complete. For operations
//
// that change the state of the system, this error may be returned
// even if the operation has completed successfully.  For example, a
// successful response from a server could have been delayed long
// enough for the deadline to expire.
//
// HTTP Mapping: 504 Gateway Timeout
//   - NOT_FOUND: Some requested entity (e.g., file or directory) was not found.
//
// Note to server developers: if a request is denied for an entire class
// of users, such as gradual feature rollout or undocumented allowlist,
// `NOT_FOUND` may be used. If a request is denied for some users within
// a class of users, such as user-based access control, `PERMISSION_DENIED`
// must be used.
//
// HTTP Mapping: 404 Not Found
//   - ALREADY_EXISTS: The entity that a client attempted to create (e.g., file or directory)
//
// already exists.
//
// HTTP Mapping: 409 Conflict
//   - PERMISSION_DENIED: The caller does not have permission to execute the specified
//
// operation. `PERMISSION_DENIED` must not be used for rejections
// caused by exhausting some resource (use `RESOURCE_EXHAUSTED`
// instead for those errors). `PERMISSION_DENIED` must not be
// used if the caller can not be identified (use `UNAUTHENTICATED`
// instead for those errors). This error code does not imply the
// request is valid or the requested entity exists or satisfies
// other pre-conditions.
//
// HTTP Mapping: 403 Forbidden
//   - UNAUTHENTICATED: The request does not have valid authentication credentials for the
//
// operation.
//
// HTTP Mapping: 401 Unauthorized
//   - RESOURCE_EXHAUSTED: Some resource has been exhausted, perhaps a per-user quota, or
//
// perhaps the entire file system is out of space.
//
// HTTP Mapping: 429 Too Many Requests
//   - FAILED_PRECONDITION: The operation was rejected because the system is not in a state
//
// required for the operation's execution.  For example, the directory
// to be deleted is non-empty, an rmdir operation is applied to
// a non-directory, etc.
//
// Service implementors can use the following guidelines to decide
// between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`:
//
//	(a) Use `UNAVAILABLE` if the client can retry just the failing call.
//	(b) Use `ABORTED` if the client should retry at a higher level. For
//	    example, when a client-specified test-and-set fails, indicating the
//	    client should restart a read-modify-write sequence.
//	(c) Use `FAILED_PRECONDITION` if the client should not retry until
//	    the system state has been explicitly fixed. For example, if an "rmdir"
//	    fails because the directory is non-empty, `FAILED_PRECONDITION`
//	    should be returned since the client should not retry unless
//	    the files are deleted from the directory.
//
// HTTP Mapping: 400 Bad Request
//   - ABORTED: The operation was aborted, typically due to a concurrency issue such as
//
// a sequencer check failure or transaction abort.
//
// See the guidelines above for deciding between `FAILED_PRECONDITION`,
// `ABORTED`, and `UNAVAILABLE`.
//
// HTTP Mapping: 409 Conflict
//   - OUT_OF_RANGE: The operation was attempted past the valid range.  E.g., seeking or
//
// reading past end-of-file.
//
// Unlike `INVALID_ARGUMENT`, this error indicates a problem that may
// be fixed if the system state changes. For example, a 32-bit file
// system will generate `INVALID_ARGUMENT` if asked to read at an
// offset that is not in the range [0,2^32-1], but it will generate
// `OUT_OF_RANGE` if asked to read from an offset past the current
// file size.
//
// There is a fair bit of overlap between `FAILED_PRECONDITION` and
// `OUT_OF_RANGE`.  We recommend using `OUT_OF_RANGE` (the more specific
// error) when it applies so that callers who are iterating through
// a space can easily look for an `OUT_OF_RANGE` error to detect when
// they are done.
//
// HTTP Mapping: 400 Bad Request
//   - UNIMPLEMENTED: The operation is not implemented or is not supported/enabled in this
//
// service.
//
// HTTP Mapping: 501 Not Implemented
//   - INTERNAL: Internal errors.  This means that some invariants expected by the
//
// underlying system have been broken.  This error code is reserved
// for serious errors.
//
// HTTP Mapping: 500 Internal Server Error
//   - UNAVAILABLE: The service is currently unavailable.  This is most likely a
//
// transient condition, which can be corrected by retrying with
// a backoff. Note that it is not always safe to retry
// non-idempotent operations.
//
// See the guidelines above for deciding between `FAILED_PRECONDITION`,
// `ABORTED`, and `UNAVAILABLE`.
//
// HTTP Mapping: 503 Service Unavailable
//   - DATA_LOSS: Unrecoverable data loss or corruption.
//
// HTTP Mapping: 500 Internal Server Error
type RpcCode string

// RpcStatus defines model for rpcStatus.
type RpcStatus struct {
	Code    *int32         `json:"code,omitempty"`
	Details *[]ProtobufAny `json:"details,omitempty"`
	Message *string        `json:"message,omitempty"`
}

// ServicesAssignDashboardFolderResponse This is a response confirming that folder has been successfully assigned to a dashboard
type ServicesAssignDashboardFolderResponse = map[string]interface{}

// ServicesCreateDashboardFolderRequest defines model for servicesCreateDashboardFolderRequest.
type ServicesCreateDashboardFolderRequest struct {
	Folder    *CommonDashboardFolder `json:"folder,omitempty"`
	RequestId *string                `json:"requestId,omitempty"`
}

// ServicesCreateDashboardFolderResponse defines model for servicesCreateDashboardFolderResponse.
type ServicesCreateDashboardFolderResponse = map[string]interface{}

// ServicesCreateDashboardRequest This is a request used to create a new custom dashboard
type ServicesCreateDashboardRequest struct {
	// Dashboard Dashboard represents the structure and configuration of a Coralogix Custom Dashboard.
	Dashboard AstDashboard `json:"dashboard"`
	IsLocked  *bool        `json:"isLocked,omitempty"`
	RequestId string       `json:"requestId"`
}

// ServicesCreateDashboardResponse This is a response received when a custom dashboard is successfully created
type ServicesCreateDashboardResponse struct {
	DashboardId *string `json:"dashboardId,omitempty"`
}

// ServicesCreateViewFolderRequest Create view folder.
type ServicesCreateViewFolderRequest struct {
	// Name Folder name
	Name *string `json:"name,omitempty"`
}

// ServicesCreateViewRequest View folder.
type ServicesCreateViewRequest struct {
	Filters *V1SelectedFilters `json:"filters,omitempty"`

	// FolderId Unique identifier for folders
	FolderId *string `json:"folderId,omitempty"`

	// Name View name
	Name          string          `json:"name"`
	SearchQuery   *V1SearchQuery  `json:"searchQuery,omitempty"`
	TimeSelection V1TimeSelection `json:"timeSelection"`
}

// ServicesDashboardCatalogItem defines model for servicesDashboardCatalogItem.
type ServicesDashboardCatalogItem struct {
	AuthorId       *string                `json:"authorId,omitempty"`
	CreateTime     *time.Time             `json:"createTime,omitempty"`
	Description    *string                `json:"description,omitempty"`
	Folder         *CommonDashboardFolder `json:"folder,omitempty"`
	Id             *string                `json:"id,omitempty"`
	IsDefault      *bool                  `json:"isDefault,omitempty"`
	IsLocked       *bool                  `json:"isLocked,omitempty"`
	IsPinned       *bool                  `json:"isPinned,omitempty"`
	LockerAuthorId *string                `json:"lockerAuthorId,omitempty"`
	Name           *string                `json:"name,omitempty"`
	UpdateTime     *time.Time             `json:"updateTime,omitempty"`
}

// ServicesDeleteDashboardFolderResponse defines model for servicesDeleteDashboardFolderResponse.
type ServicesDeleteDashboardFolderResponse = map[string]interface{}

// ServicesDeleteDashboardResponse This is a response received when the dashboard is successfully deleted
type ServicesDeleteDashboardResponse = map[string]interface{}

// ServicesDeleteViewFolderResponse defines model for servicesDeleteViewFolderResponse.
type ServicesDeleteViewFolderResponse = map[string]interface{}

// ServicesDeleteViewResponse defines model for servicesDeleteViewResponse.
type ServicesDeleteViewResponse = map[string]interface{}

// ServicesGetDashboardCatalogResponse defines model for servicesGetDashboardCatalogResponse.
type ServicesGetDashboardCatalogResponse struct {
	Items *[]ServicesDashboardCatalogItem `json:"items,omitempty"`
}

// ServicesGetDashboardFolderResponse defines model for servicesGetDashboardFolderResponse.
type ServicesGetDashboardFolderResponse struct {
	Folder *CommonDashboardFolder `json:"folder,omitempty"`
}

// ServicesGetDashboardResponse This is a response containing the requested dashboard
type ServicesGetDashboardResponse struct {
	AuthorId          *string                  `json:"authorId,omitempty"`
	AuthorName        *string                  `json:"authorName,omitempty"`
	CreatedAt         *time.Time               `json:"createdAt,omitempty"`
	CreatedOriginType *ServicesTokenOriginType `json:"createdOriginType,omitempty"`

	// Dashboard Dashboard represents the structure and configuration of a Coralogix Custom Dashboard.
	Dashboard         *AstDashboard            `json:"dashboard,omitempty"`
	IsLocked          *bool                    `json:"isLocked,omitempty"`
	LockerAuthorId    *string                  `json:"lockerAuthorId,omitempty"`
	LockerName        *string                  `json:"lockerName,omitempty"`
	UpdatedAt         *time.Time               `json:"updatedAt,omitempty"`
	UpdatedOriginType *ServicesTokenOriginType `json:"updatedOriginType,omitempty"`
	UpdaterAuthorId   *string                  `json:"updaterAuthorId,omitempty"`
	UpdaterName       *string                  `json:"updaterName,omitempty"`
}

// ServicesListDashboardFoldersResponse defines model for servicesListDashboardFoldersResponse.
type ServicesListDashboardFoldersResponse struct {
	Folder *[]CommonDashboardFolder `json:"folder,omitempty"`
}

// ServicesListViewFoldersResponse defines model for servicesListViewFoldersResponse.
type ServicesListViewFoldersResponse struct {
	Folders *[]V1ViewFolder `json:"folders,omitempty"`
}

// ServicesListViewsResponse defines model for servicesListViewsResponse.
type ServicesListViewsResponse struct {
	Views *[]ServicesView `json:"views,omitempty"`
}

// ServicesPinDashboardResponse This is a response received on successful pinning of the dashboard
type ServicesPinDashboardResponse = map[string]interface{}

// ServicesReplaceDashboardFolderRequest defines model for servicesReplaceDashboardFolderRequest.
type ServicesReplaceDashboardFolderRequest struct {
	Folder    *CommonDashboardFolder `json:"folder,omitempty"`
	RequestId *string                `json:"requestId,omitempty"`
}

// ServicesReplaceDashboardFolderResponse defines model for servicesReplaceDashboardFolderResponse.
type ServicesReplaceDashboardFolderResponse = map[string]interface{}

// ServicesReplaceDashboardRequest This is a request sent to update an existing dashboard with new information
type ServicesReplaceDashboardRequest struct {
	// Dashboard Dashboard represents the structure and configuration of a Coralogix Custom Dashboard.
	Dashboard AstDashboard `json:"dashboard"`
	IsLocked  *bool        `json:"isLocked,omitempty"`
	RequestId string       `json:"requestId"`
}

// ServicesReplaceDashboardResponse This is a response received when the dashboard is successfully updated
type ServicesReplaceDashboardResponse = map[string]interface{}

// ServicesReplaceDefaultDashboardResponse This is a response received when default dashboard has been replaced
type ServicesReplaceDefaultDashboardResponse = map[string]interface{}

// ServicesTokenOriginType defines model for servicesTokenOriginType.
type ServicesTokenOriginType string

// ServicesUnpinDashboardResponse This is a response received when dashboard has been unpinned
type ServicesUnpinDashboardResponse = map[string]interface{}

// ServicesView Response for views.
type ServicesView struct {
	Filters *V1SelectedFilters `json:"filters,omitempty"`

	// FolderId Unique identifier for folders
	FolderId *string `json:"folderId,omitempty"`

	// Id id
	Id            int32 `json:"id"`
	IsCompactMode *bool `json:"isCompactMode,omitempty"`

	// Name View name
	Name          string          `json:"name"`
	SearchQuery   *V1SearchQuery  `json:"searchQuery,omitempty"`
	TimeSelection V1TimeSelection `json:"timeSelection"`
}

// Slov1Grouping Definition of the SLO grouping fields
type Slov1Grouping struct {
	Labels *[]string `json:"labels,omitempty"`
}

// Slov1Revision The revision of the slo, used to differentiate between different versions of the same SLO
type Slov1Revision struct {
	Revision   *int32     `json:"revision,omitempty"`
	UpdateTime *time.Time `json:"updateTime,omitempty"`
}

// Spans2metricsv2SpansQuery This data structure represents a query for spans.
type Spans2metricsv2SpansQuery struct {
	ActionFilters          *[]string `json:"actionFilters,omitempty"`
	ApplicationnameFilters *[]string `json:"applicationnameFilters,omitempty"`
	Lucene                 *string   `json:"lucene,omitempty"`
	ServiceFilters         *[]string `json:"serviceFilters,omitempty"`
	SubsystemnameFilters   *[]string `json:"subsystemnameFilters,omitempty"`
}

// Ssov2SetActiveRequest This data structure is used to activate or deactivate a SAML identity provider
type Ssov2SetActiveRequest struct {
	IsActive bool  `json:"isActive"`
	TeamId   int64 `json:"teamId"`
}

// Ssov2SetActiveResponse defines model for ssov2SetActiveResponse.
type Ssov2SetActiveResponse = map[string]interface{}

// V1ARMStack This data structure represents an Azure Resource Manager stack.
type V1ARMStack struct {
	ResourceGroupName *string `json:"resourceGroupName,omitempty"`
	SubscriptionId    *string `json:"subscriptionId,omitempty"`
}

// V1AcknowledgeIncidentsRequest Request to acknowledge one or more incidents
type V1AcknowledgeIncidentsRequest struct {
	// IncidentIds List of incident IDs to acknowledge
	IncidentIds []string `json:"incidentIds"`
}

// V1AcknowledgeIncidentsResponse Response containing the updated incidents after acknowledgment
type V1AcknowledgeIncidentsResponse struct {
	// Incidents List of incidents after acknowledgment
	Incidents []V1Incident `json:"incidents"`
}

// V1ActivateRetentionsRequest defines model for v1ActivateRetentionsRequest.
type V1ActivateRetentionsRequest = map[string]interface{}

// V1ActivateRetentionsResponse This data structure is obtained after setting the active status of retentions
type V1ActivateRetentionsResponse struct {
	ActivateRetentions *bool `json:"activateRetentions,omitempty"`
}

// V1AddEnrichmentsRequest This response data structure represents a collection of enrichments
type V1AddEnrichmentsRequest struct {
	RequestEnrichments []V1EnrichmentRequestModel `json:"requestEnrichments"`
}

// V1AddEnrichmentsResponse Response data structure for enrichments creation
type V1AddEnrichmentsResponse struct {
	Enrichments []Coralogixenrichmentv1Enrichment `json:"enrichments"`
}

// V1AddUsersToTeamGroupResponse Response confirming the successful addition of users to the specified team group.
type V1AddUsersToTeamGroupResponse struct {
	TeamId *Coralogixpermissionsv1TeamId `json:"teamId,omitempty"`
}

// V1AddUsersToTeamGroupsRequest Bulk request to assign users to multiple team groups simultaneously, efficiently managing group memberships at scale.
type V1AddUsersToTeamGroupsRequest struct {
	AddUsersToGroup *[]V1AddUsersToTeamGroupsRequestAddUsersToTeamGroup `json:"addUsersToGroup,omitempty"`
	TeamId          *Coralogixpermissionsv1TeamId                       `json:"teamId,omitempty"`
}

// V1AddUsersToTeamGroupsRequestAddUsersToTeamGroup This data structure represents the information associated with an API key.
type V1AddUsersToTeamGroupsRequestAddUsersToTeamGroup struct {
	// GroupId This data structure represents the information associated with a team group.
	GroupId *V1TeamGroupId         `json:"groupId,omitempty"`
	UserIds *[]Permissionsv1UserId `json:"userIds,omitempty"`
}

// V1AddUsersToTeamGroupsResponse Response confirming the successful bulk addition of users to multiple team groups.
type V1AddUsersToTeamGroupsResponse = map[string]interface{}

// V1AllowParameters defines model for v1AllowParameters.
type V1AllowParameters struct {
	KeepBlockedLogs *bool   `json:"keepBlockedLogs,omitempty"`
	Rule            *string `json:"rule,omitempty"`
}

// V1ApplicationNameConstraint defines model for v1ApplicationNameConstraint.
type V1ApplicationNameConstraint struct {
	Value *string `json:"value,omitempty"`
}

// V1ArchiveRetention defines model for v1ArchiveRetention.
type V1ArchiveRetention struct {
	Id *string `json:"id,omitempty"`
}

// V1AssignIncidentsRequest Request to assign one or more incidents to a user
type V1AssignIncidentsRequest struct {
	AssignedTo V1UserDetails `json:"assignedTo"`

	// IncidentIds List of incident IDs to assign
	IncidentIds []string `json:"incidentIds"`
}

// V1AssignIncidentsResponse Response containing the updated incidents after assignment
type V1AssignIncidentsResponse struct {
	// Incidents List of incidents after assignment
	Incidents []V1Incident `json:"incidents"`
}

// V1AssigneeWithCount defines model for v1AssigneeWithCount.
type V1AssigneeWithCount struct {
	Assignee string `json:"assignee"`
	Count    int32  `json:"count"`
}

// V1Assignment Details of the user who assigned the incident and the user to whom it was assigned
type V1Assignment struct {
	AssignedBy V1UserDetails `json:"assignedBy"`
	AssignedTo V1UserDetails `json:"assignedTo"`
}

// V1AtomicBatchCreatePolicyRequest This data structure is used to create multiple policies atomically.
type V1AtomicBatchCreatePolicyRequest struct {
	PolicyRequests []V1CreatePolicyRequest `json:"policyRequests"`
}

// V1AtomicBatchCreatePolicyResponse This data structure is obtained when creating multiple policies atomically.
type V1AtomicBatchCreatePolicyResponse struct {
	CreateResponses []V1CreatePolicyResponse `json:"createResponses"`
}

// V1AtomicOverwriteEnrichmentsRequest defines model for v1AtomicOverwriteEnrichmentsRequest.
type V1AtomicOverwriteEnrichmentsRequest struct {
	EnrichmentFields *[]V1EnrichmentFieldDefinition       `json:"enrichmentFields,omitempty"`
	EnrichmentType   *Coralogixenrichmentv1EnrichmentType `json:"enrichmentType,omitempty"`
}

// V1AtomicOverwriteEnrichmentsResponse defines model for v1AtomicOverwriteEnrichmentsResponse.
type V1AtomicOverwriteEnrichmentsResponse struct {
	Enrichments *[]Coralogixenrichmentv1Enrichment `json:"enrichments,omitempty"`
}

// V1AtomicOverwriteLogPoliciesRequest In an atomic operation delete all existing log policies and create the provided list by order.
type V1AtomicOverwriteLogPoliciesRequest struct {
	Policies []V1CreateLogPolicyRequest `json:"policies"`
}

// V1AtomicOverwriteLogPoliciesResponse This data structue is obtained when overwriting log policies atomically.
type V1AtomicOverwriteLogPoliciesResponse struct {
	CreateResponses []V1CreatePolicyResponse `json:"createResponses"`
}

// V1AtomicOverwriteSpanPoliciesRequest In an atomic operation delete all existing span policies and create the provided list by order.
type V1AtomicOverwriteSpanPoliciesRequest struct {
	Policies []V1CreateSpanPolicyRequest `json:"policies"`
}

// V1AtomicOverwriteSpanPoliciesResponse This data structue is obtained when overwriting span policies atomically.
type V1AtomicOverwriteSpanPoliciesResponse struct {
	CreateResponses []V1CreatePolicyResponse `json:"createResponses"`
}

// V1AwsEventBridgeConfig defines model for v1AwsEventBridgeConfig.
type V1AwsEventBridgeConfig struct {
	Detail      string `json:"detail"`
	DetailType  string `json:"detailType"`
	EventBusArn string `json:"eventBusArn"`
	RoleName    string `json:"roleName"`
	Source      string `json:"source"`
}

// V1AwsType defines model for v1AwsType.
type V1AwsType struct {
	ResourceType *string `json:"resourceType,omitempty"`
}

// V1BatchExecuteSloResponse Response containing the results of batch executed SLO operations.
type V1BatchExecuteSloResponse struct {
	MatchingResponses []V1SloExecutionResponse `json:"matchingResponses"`

	// Status Status of the response, including error code and message.
	Status *V1ResponseStatus `json:"status,omitempty"`
}

// V1BatchGetConnectorSummariesResponse Response containing the requested connector summaries and any IDs not found
type V1BatchGetConnectorSummariesResponse struct {
	ConnectorSummaries *map[string]V1ConnectorSummary `json:"connectorSummaries,omitempty"`
	NotFoundIds        *[]string                      `json:"notFoundIds,omitempty"`
}

// V1BatchGetConnectorsResponse Response containing the requested connectors and any IDs not found
type V1BatchGetConnectorsResponse struct {
	Connectors  *map[string]V1Connector `json:"connectors,omitempty"`
	NotFoundIds *[]string               `json:"notFoundIds,omitempty"`
}

// V1BatchGetGlobalRoutersResponse Response containing requested global routers and missing global routers ids
type V1BatchGetGlobalRoutersResponse struct {
	NotFoundIds *[]string                  `json:"notFoundIds,omitempty"`
	Routers     *map[string]V1GlobalRouter `json:"routers,omitempty"`
}

// V1BatchGetIncidentResponse Response containing the requested incidents and any IDs that weren't found
type V1BatchGetIncidentResponse struct {
	// Incidents Map of incident IDs to their corresponding incidents
	Incidents map[string]V1Incident `json:"incidents"`

	// NotFoundIds List of IDs that were not found
	NotFoundIds []string `json:"notFoundIds"`
}

// V1BatchGetPresetsResponse Response containing the requested presets and any IDs not found
type V1BatchGetPresetsResponse struct {
	NotFoundIds *[]string                   `json:"notFoundIds,omitempty"`
	Presets     *map[string]Presetsv1Preset `json:"presets,omitempty"`
}

// V1BatchGetSlosResponse Response containing a batch of SLOs and any IDs not found.
type V1BatchGetSlosResponse struct {
	NotFoundIds *[]string `json:"notFoundIds,omitempty"`
	Slos        []V1Slo   `json:"slos"`
}

// V1BlockParameters defines model for v1BlockParameters.
type V1BlockParameters struct {
	KeepBlockedLogs *bool   `json:"keepBlockedLogs,omitempty"`
	Rule            *string `json:"rule,omitempty"`
}

// V1BulkDeleteRuleGroupResponse defines model for v1BulkDeleteRuleGroupResponse.
type V1BulkDeleteRuleGroupResponse = map[string]interface{}

// V1BulkTestLogPoliciesRequest Request to test multiple log policies.
type V1BulkTestLogPoliciesRequest struct {
	MetaFieldsValuesList []V1LogMetaFieldsValues `json:"metaFieldsValuesList"`
}

// V1BulkTestLogPoliciesResponse Response to test multiple log policies.
type V1BulkTestLogPoliciesResponse struct {
	TestPoliciesBulkResult []V1TestPoliciesResult `json:"testPoliciesBulkResult"`
}

// V1ChangelogEntry defines model for v1ChangelogEntry.
type V1ChangelogEntry struct {
	DescriptionMd string `json:"descriptionMd"`
	Version       string `json:"version"`
}

// V1CleanupTestingRevisionRequest defines model for v1CleanupTestingRevisionRequest.
type V1CleanupTestingRevisionRequest struct {
	Id string `json:"id"`
}

// V1CleanupTestingRevisionResponse defines model for v1CleanupTestingRevisionResponse.
type V1CleanupTestingRevisionResponse = map[string]interface{}

// V1CloseIncidentsRequest Request to close one or more incidents
type V1CloseIncidentsRequest struct {
	// IncidentIds List of incident IDs to close
	IncidentIds []string `json:"incidentIds"`
}

// V1CloseIncidentsResponse Response containing the updated incidents after closing
type V1CloseIncidentsResponse struct {
	// Incidents List of incidents after closing
	Incidents []V1Incident `json:"incidents"`
}

// V1CloudFormationStack This data structure represents a CloudFormation stack.
type V1CloudFormationStack struct {
	Arn    *string `json:"arn,omitempty"`
	Region *string `json:"region,omitempty"`
}

// V1CompanyEnrichmentSettings defines model for v1CompanyEnrichmentSettings.
type V1CompanyEnrichmentSettings struct {
	EnrichmentAmountLimit   *int64  `json:"enrichmentAmountLimit,omitempty"`
	EnrichmentsInUse        *int64  `json:"enrichmentsInUse,omitempty"`
	QueryOnlyRowLimit       *int64  `json:"queryOnlyRowLimit,omitempty"`
	QueryOnlySizeLimitBytes *string `json:"queryOnlySizeLimitBytes,omitempty"`
	RowLimit                *int64  `json:"rowLimit,omitempty"`
	SizeLimitBytes          *string `json:"sizeLimitBytes,omitempty"`
}

// V1ComparisonOperator defines model for v1ComparisonOperator.
type V1ComparisonOperator string

// V1ConnectionStatus defines model for v1ConnectionStatus.
type V1ConnectionStatus string

// V1Connector A connector configuration for sending notifications
type V1Connector struct {
	ConfigOverrides *[]V1EntityTypeConfigOverrides `json:"configOverrides,omitempty"`

	// ConnectorConfig Configuration for a specific output schema of a connector
	ConnectorConfig *V1ConnectorConfig              `json:"connectorConfig,omitempty"`
	CreateTime      *time.Time                      `json:"createTime,omitempty"`
	Description     *string                         `json:"description,omitempty"`
	Id              *string                         `json:"id,omitempty"`
	Name            string                          `json:"name"`
	TeamId          *int64                          `json:"teamId,omitempty"`
	Type            NotificationCenterConnectorType `json:"type"`
	UpdateTime      *time.Time                      `json:"updateTime,omitempty"`
	UserDefinedId   *string                         `json:"userDefinedId,omitempty"`
}

// V1ConnectorConfig Configuration for a specific output schema of a connector
type V1ConnectorConfig struct {
	Fields *[]CoralogixapisnotificationCenterConnectorConfigField `json:"fields,omitempty"`
}

// V1ConnectorSummary defines model for v1ConnectorSummary.
type V1ConnectorSummary struct {
	CreateTime    *time.Time                       `json:"createTime,omitempty"`
	Description   *string                          `json:"description,omitempty"`
	Id            *string                          `json:"id,omitempty"`
	Name          *string                          `json:"name,omitempty"`
	TeamId        *int64                           `json:"teamId,omitempty"`
	Type          *NotificationCenterConnectorType `json:"type,omitempty"`
	UpdateTime    *time.Time                       `json:"updateTime,omitempty"`
	UserDefinedId *string                          `json:"userDefinedId,omitempty"`
}

// V1ConnectorTypeSummary Summary information about a connector type
type V1ConnectorTypeSummary struct {
	Count *int64                           `json:"count,omitempty"`
	Type  *NotificationCenterConnectorType `json:"type,omitempty"`
}

// V1ContextualLabelValueWithCount defines model for v1ContextualLabelValueWithCount.
type V1ContextualLabelValueWithCount struct {
	ContextualLabelValue string `json:"contextualLabelValue"`
	Count                int32  `json:"count"`
}

// V1ContextualLabelValues Represents contextual label values for filtering incidents
type V1ContextualLabelValues struct {
	ContextualLabelValues []string `json:"contextualLabelValues"`
}

// V1ContextualLabelValuesWithCount defines model for v1ContextualLabelValuesWithCount.
type V1ContextualLabelValuesWithCount struct {
	ValuesWithCount []V1ContextualLabelValueWithCount `json:"valuesWithCount"`
}

// V1ContextualLabels defines model for v1ContextualLabels.
type V1ContextualLabels struct {
	FieldName  string `json:"fieldName"`
	FieldValue string `json:"fieldValue"`
}

// V1CreateConnectorResponse Response containing the created connector
type V1CreateConnectorResponse struct {
	// Connector A connector configuration for sending notifications
	Connector *V1Connector `json:"connector,omitempty"`
}

// V1CreateCustomEnrichmentRequest This request data structure is used to create a custom enrichment
type V1CreateCustomEnrichmentRequest struct {
	Description string `json:"description"`

	// File This data structure represents a file
	File V1File `json:"file"`
	Name string `json:"name"`
}

// V1CreateCustomEnrichmentResponse This response data structure is obtained when a custom enrichment is created
type V1CreateCustomEnrichmentResponse struct {
	CustomEnrichment V1CustomEnrichment `json:"customEnrichment"`
	Message          *string            `json:"message,omitempty"`
}

// V1CreateCustomPresetResponse Response containing the created custom preset
type V1CreateCustomPresetResponse struct {
	// Preset Set of preconfigured templates for notification content rendering
	Preset *Presetsv1Preset `json:"preset,omitempty"`
}

// V1CreateGenericPolicyRequest This data structue is used to create a new policy.
type V1CreateGenericPolicyRequest struct {
	ApplicationRule  *Coralogixquotav1Rule    `json:"applicationRule,omitempty"`
	ArchiveRetention *V1ArchiveRetention      `json:"archiveRetention,omitempty"`
	Description      string                   `json:"description"`
	Name             string                   `json:"name"`
	Priority         Coralogixquotav1Priority `json:"priority"`
	SubsystemRule    *Coralogixquotav1Rule    `json:"subsystemRule,omitempty"`
}

// V1CreateGlobalRouterResponse Response which contains a created global router
type V1CreateGlobalRouterResponse struct {
	// Router Defines a set of pre-configured routing rules for directing notifications
	Router *V1GlobalRouter `json:"router,omitempty"`
}

// V1CreateLogPolicyRequest This data structue is used to create a new log policy.
type V1CreateLogPolicyRequest struct {
	// LogRules Log rules for a policy.
	LogRules V1LogRules `json:"logRules"`

	// Policy This data structue is used to create a new policy.
	Policy V1CreateGenericPolicyRequest `json:"policy"`
}

// V1CreateOutgoingWebhookRequest defines model for v1CreateOutgoingWebhookRequest.
type V1CreateOutgoingWebhookRequest struct {
	Data V1OutgoingWebhookInputData `json:"data"`
}

// V1CreateOutgoingWebhookResponse defines model for v1CreateOutgoingWebhookResponse.
type V1CreateOutgoingWebhookResponse struct {
	Id string `json:"id"`
}

// V1CreatePolicyRequest This data structue is used to create a new policy.
type V1CreatePolicyRequest struct {
	ApplicationRule  *Coralogixquotav1Rule `json:"applicationRule,omitempty"`
	ArchiveRetention *V1ArchiveRetention   `json:"archiveRetention,omitempty"`
	Description      *string               `json:"description,omitempty"`

	// LogRules Log rules for a policy.
	LogRules      *V1LogRules              `json:"logRules,omitempty"`
	Name          string                   `json:"name"`
	Priority      Coralogixquotav1Priority `json:"priority"`
	SpanRules     *V1SpanRules             `json:"spanRules,omitempty"`
	SubsystemRule *Coralogixquotav1Rule    `json:"subsystemRule,omitempty"`
}

// V1CreatePolicyResponse This data structue is obtained when creating a policy.
type V1CreatePolicyResponse struct {
	// Policy A policy is a set of rules that define the behavior of the Coralogix system for a specific company.
	Policy V1Policy `json:"policy"`
}

// V1CreateRuleGroupRequest defines model for v1CreateRuleGroupRequest.
type V1CreateRuleGroupRequest struct {
	Creator       *string                                       `json:"creator,omitempty"`
	Description   *string                                       `json:"description,omitempty"`
	Enabled       *bool                                         `json:"enabled,omitempty"`
	Hidden        *bool                                         `json:"hidden,omitempty"`
	Name          *string                                       `json:"name,omitempty"`
	Order         *int64                                        `json:"order,omitempty"`
	RuleMatchers  *[]V1RuleMatcher                              `json:"ruleMatchers,omitempty"`
	RuleSubgroups *[]V1CreateRuleGroupRequestCreateRuleSubgroup `json:"ruleSubgroups,omitempty"`
	TeamId        *Coralogixrulesv1TeamId                       `json:"teamId,omitempty"`
}

// V1CreateRuleGroupRequestCreateRuleSubgroup defines model for v1CreateRuleGroupRequestCreateRuleSubgroup.
type V1CreateRuleGroupRequestCreateRuleSubgroup struct {
	Enabled *bool                                                   `json:"enabled,omitempty"`
	Order   *int64                                                  `json:"order,omitempty"`
	Rules   *[]V1CreateRuleGroupRequestCreateRuleSubgroupCreateRule `json:"rules,omitempty"`
}

// V1CreateRuleGroupRequestCreateRuleSubgroupCreateRule defines model for v1CreateRuleGroupRequestCreateRuleSubgroupCreateRule.
type V1CreateRuleGroupRequestCreateRuleSubgroupCreateRule struct {
	Description *string           `json:"description,omitempty"`
	Enabled     *bool             `json:"enabled,omitempty"`
	Name        *string           `json:"name,omitempty"`
	Order       *int64            `json:"order,omitempty"`
	Parameters  *V1RuleParameters `json:"parameters,omitempty"`
	SourceField *string           `json:"sourceField,omitempty"`
}

// V1CreateRuleGroupResponse defines model for v1CreateRuleGroupResponse.
type V1CreateRuleGroupResponse struct {
	RuleGroup *V1RuleGroup `json:"ruleGroup,omitempty"`
}

// V1CreateRuleGroupSet A set of rule groups to create.
type V1CreateRuleGroupSet struct {
	Groups *[]V1InRuleGroup `json:"groups,omitempty"`
	Name   *string          `json:"name,omitempty"`
}

// V1CreateRuleGroupSetResult Result of creating a rule group set.
type V1CreateRuleGroupSetResult struct {
	Id *string `json:"id,omitempty"`
}

// V1CreateScopeRequest This data structure represents a request to create a scope
type V1CreateScopeRequest struct {
	DefaultExpression *string                       `json:"defaultExpression,omitempty"`
	Description       *string                       `json:"description,omitempty"`
	DisplayName       string                        `json:"displayName"`
	Filters           []Coralogixapisscopesv1Filter `json:"filters"`
}

// V1CreateScopeResponse This data structure represents a response to create a scope
type V1CreateScopeResponse struct {
	// Scope This data structure represents a scope
	Scope Coralogixapisscopesv1Scope `json:"scope"`
}

// V1CreateSloResponse Response after creating a new SLO.
type V1CreateSloResponse struct {
	// Slo Definition of an SLO
	Slo V1Slo `json:"slo"`
}

// V1CreateSpanPolicyRequest This data structue is used to create a new span policy.
type V1CreateSpanPolicyRequest struct {
	// Policy This data structue is used to create a new policy.
	Policy    V1CreateGenericPolicyRequest `json:"policy"`
	SpanRules V1SpanRules                  `json:"spanRules"`
}

// V1CreateTeamGroupRequest Request to create a new team group with specified name, description, roles, users, and optional scope filters. Can be associated with a specific team or the authenticated team.
type V1CreateTeamGroupRequest struct {
	Description *string `json:"description,omitempty"`

	// ExternalId / Team group external_id. Applies if team is externally defined.
	ExternalId     *string                       `json:"externalId,omitempty"`
	Name           *string                       `json:"name,omitempty"`
	NextGenScopeId *string                       `json:"nextGenScopeId,omitempty"`
	RoleIds        *[]V1RoleId                   `json:"roleIds,omitempty"`
	ScopeFilters   *V1ScopeFilters               `json:"scopeFilters,omitempty"`
	TeamId         *Coralogixpermissionsv1TeamId `json:"teamId,omitempty"`
	UserIds        *[]Permissionsv1UserId        `json:"userIds,omitempty"`
}

// V1CreateTeamGroupResponse Response containing the unique identifier of the newly created team group.
type V1CreateTeamGroupResponse struct {
	// GroupId This data structure represents the information associated with a team group.
	GroupId *V1TeamGroupId `json:"groupId,omitempty"`
}

// V1CustomEnrichment defines model for v1CustomEnrichment.
type V1CustomEnrichment struct {
	Description *string `json:"description,omitempty"`
	FileName    *string `json:"fileName,omitempty"`
	FileSize    *int64  `json:"fileSize,omitempty"`
	Id          *int64  `json:"id,omitempty"`
	IsQueryOnly *bool   `json:"isQueryOnly,omitempty"`
	Name        *string `json:"name,omitempty"`
	Version     *int64  `json:"version,omitempty"`
}

// V1CustomEnrichmentData defines model for v1CustomEnrichmentData.
type V1CustomEnrichmentData struct {
	Binary     *[]byte             `json:"binary,omitempty"`
	Definition *V1CustomEnrichment `json:"definition,omitempty"`
	Textual    *string             `json:"textual,omitempty"`
}

// V1CustomEnrichmentType defines model for v1CustomEnrichmentType.
type V1CustomEnrichmentType struct {
	Id *int64 `json:"id,omitempty"`
}

// V1CustomTimeSelection defines model for v1CustomTimeSelection.
type V1CustomTimeSelection struct {
	FromTime time.Time `json:"fromTime"`
	ToTime   time.Time `json:"toTime"`
}

// V1DeleteConnectorResponse defines model for v1DeleteConnectorResponse.
type V1DeleteConnectorResponse = map[string]interface{}

// V1DeleteContextualDataIntegrationResponse defines model for v1DeleteContextualDataIntegrationResponse.
type V1DeleteContextualDataIntegrationResponse = map[string]interface{}

// V1DeleteCustomEnrichmentResponse defines model for v1DeleteCustomEnrichmentResponse.
type V1DeleteCustomEnrichmentResponse struct {
	CustomEnrichmentId *int64  `json:"customEnrichmentId,omitempty"`
	Message            *string `json:"message,omitempty"`
}

// V1DeleteCustomPresetResponse defines model for v1DeleteCustomPresetResponse.
type V1DeleteCustomPresetResponse = map[string]interface{}

// V1DeleteGlobalRouterResponse defines model for v1DeleteGlobalRouterResponse.
type V1DeleteGlobalRouterResponse = map[string]interface{}

// V1DeleteIntegrationResponse defines model for v1DeleteIntegrationResponse.
type V1DeleteIntegrationResponse = map[string]interface{}

// V1DeleteOutgoingWebhookResponse defines model for v1DeleteOutgoingWebhookResponse.
type V1DeleteOutgoingWebhookResponse = map[string]interface{}

// V1DeletePolicyResponse This data structue is obtained when deleting a policy by its ID.
type V1DeletePolicyResponse struct {
	Id string `json:"id"`
}

// V1DeleteRuleGroupResponse defines model for v1DeleteRuleGroupResponse.
type V1DeleteRuleGroupResponse = map[string]interface{}

// V1DeleteScopeResponse defines model for v1DeleteScopeResponse.
type V1DeleteScopeResponse = map[string]interface{}

// V1DeleteSloResponse Response after deleting an existing SLO.
type V1DeleteSloResponse struct {
	EffectedSloAlertIds *[]string `json:"effectedSloAlertIds,omitempty"`
}

// V1DeleteTeamGroupResponse Response confirming the successful deletion of a team group and its associated configurations.
type V1DeleteTeamGroupResponse = map[string]interface{}

// V1DemistoConfig defines model for v1DemistoConfig.
type V1DemistoConfig struct {
	Payload string `json:"payload"`
	Uuid    string `json:"uuid"`
}

// V1DeployExtensionRequest defines model for v1DeployExtensionRequest.
type V1DeployExtensionRequest struct {
	Applications        *[]string              `json:"applications,omitempty"`
	ExtensionDeployment *V1ExtensionDeployment `json:"extensionDeployment,omitempty"`
	Id                  string                 `json:"id"`
	ItemIds             []string               `json:"itemIds"`
	Subsystems          *[]string              `json:"subsystems,omitempty"`
	Version             string                 `json:"version"`
}

// V1DeployExtensionResponse defines model for v1DeployExtensionResponse.
type V1DeployExtensionResponse struct {
	ExtensionDeployment V1ExtensionDeployment `json:"extensionDeployment"`
}

// V1DeployedIntegrationInformation defines model for v1DeployedIntegrationInformation.
type V1DeployedIntegrationInformation struct {
	DefinitionKey     *string `json:"definitionKey,omitempty"`
	DefinitionVersion *string `json:"definitionVersion,omitempty"`
	Id                *string `json:"id,omitempty"`

	// IntegrationStatus This data structure represents an integration status.
	IntegrationStatus *V1IntegrationStatus `json:"integrationStatus,omitempty"`
	Parameters        *[]V1Parameter       `json:"parameters,omitempty"`
}

// V1Deprecation defines model for v1Deprecation.
type V1Deprecation struct {
	Reason                string    `json:"reason"`
	ReplacementExtensions *[]string `json:"replacementExtensions,omitempty"`
}

// V1EmailGroupConfig defines model for v1EmailGroupConfig.
type V1EmailGroupConfig struct {
	EmailAddresses *[]string `json:"emailAddresses,omitempty"`
}

// V1EnrichmentFieldDefinition defines model for v1EnrichmentFieldDefinition.
type V1EnrichmentFieldDefinition struct {
	EnrichedFieldName *string   `json:"enrichedFieldName,omitempty"`
	FieldName         *string   `json:"fieldName,omitempty"`
	SelectedColumns   *[]string `json:"selectedColumns,omitempty"`
}

// V1EnrichmentRequestModel The enrichment request model
type V1EnrichmentRequestModel struct {
	EnrichedFieldName *string                             `json:"enrichedFieldName,omitempty"`
	EnrichmentType    Coralogixenrichmentv1EnrichmentType `json:"enrichmentType"`
	FieldName         string                              `json:"fieldName"`
	SelectedColumns   *[]string                           `json:"selectedColumns,omitempty"`
}

// V1EntityTypeConfigOverrides defines model for v1EntityTypeConfigOverrides.
type V1EntityTypeConfigOverrides struct {
	DeprecatedEntityType *string                                            `json:"deprecatedEntityType,omitempty"`
	EntityType           *CoralogixapisnotificationCenterEntityType         `json:"entityType,omitempty"`
	Fields               *[]NotificationCenterTemplatedConnectorConfigField `json:"fields,omitempty"`
}

// V1ExtensionBinary defines model for v1ExtensionBinary.
type V1ExtensionBinary struct {
	Data string                      `json:"data"`
	Type V1ExtensionBinaryBinaryType `json:"type"`
}

// V1ExtensionBinaryBinaryType defines model for v1ExtensionBinaryBinaryType.
type V1ExtensionBinaryBinaryType string

// V1ExtensionData Extension details for ingestion
type V1ExtensionData struct {
	Binaries           *[]V1ExtensionBinary   `json:"binaries,omitempty"`
	Changelog          *[]V1ChangelogEntry    `json:"changelog,omitempty"`
	DarkModeImage      *string                `json:"darkModeImage,omitempty"`
	Deprecation        *V1Deprecation         `json:"deprecation,omitempty"`
	Description        *string                `json:"description,omitempty"`
	Excerpt            *string                `json:"excerpt,omitempty"`
	Id                 string                 `json:"id"`
	Image              string                 `json:"image"`
	IntegrationDetails *[]V1IntegrationDetail `json:"integrationDetails,omitempty"`
	Integrations       *[]string              `json:"integrations,omitempty"`
	IsHidden           *bool                  `json:"isHidden,omitempty"`
	Items              *[]V1ExtensionItemData `json:"items,omitempty"`
	Keywords           *[]string              `json:"keywords,omitempty"`
	Labels             *[]string              `json:"labels,omitempty"`
	Name               string                 `json:"name"`
	Version            string                 `json:"version"`
}

// V1ExtensionDeployment defines model for v1ExtensionDeployment.
type V1ExtensionDeployment struct {
	Applications *[]string `json:"applications,omitempty"`
	Id           string    `json:"id"`
	ItemIds      []string  `json:"itemIds"`
	Subsystems   *[]string `json:"subsystems,omitempty"`
	Version      string    `json:"version"`
}

// V1ExtensionItem defines model for v1ExtensionItem.
type V1ExtensionItem struct {
	Binaries           *[]V1ExtensionItemBinary        `json:"binaries,omitempty"`
	Data               map[string]interface{}          `json:"data"`
	Description        *string                         `json:"description,omitempty"`
	ExtendedInternalId *string                         `json:"extendedInternalId,omitempty"`
	Id                 string                          `json:"id"`
	IsMandatory        *bool                           `json:"isMandatory,omitempty"`
	Name               string                          `json:"name"`
	PermissionResource ExtensionItemPermissionResource `json:"permissionResource"`
	StableId           *string                         `json:"stableId,omitempty"`
	TargetDomain       V1TargetDomain                  `json:"targetDomain"`
	UniqueId           *string                         `json:"uniqueId,omitempty"`
}

// V1ExtensionItemBinary defines model for v1ExtensionItemBinary.
type V1ExtensionItemBinary struct {
	Data     string                          `json:"data"`
	FileName string                          `json:"fileName"`
	Type     V1ExtensionItemBinaryBinaryType `json:"type"`
}

// V1ExtensionItemBinaryBinaryType defines model for v1ExtensionItemBinaryBinaryType.
type V1ExtensionItemBinaryBinaryType string

// V1ExtensionItemData defines model for v1ExtensionItemData.
type V1ExtensionItemData struct {
	Binaries           *[]V1ExtensionItemBinary         `json:"binaries,omitempty"`
	Data               map[string]interface{}           `json:"data"`
	Description        *string                          `json:"description,omitempty"`
	InternalId         *int32                           `json:"internalId,omitempty"`
	IsMandatory        *bool                            `json:"isMandatory,omitempty"`
	Name               string                           `json:"name"`
	PermissionResource *ExtensionItemPermissionResource `json:"permissionResource,omitempty"`
	StableId           *string                          `json:"stableId,omitempty"`
	TargetDomain       V1TargetDomain                   `json:"targetDomain"`
	UniqueId           *string                          `json:"uniqueId,omitempty"`
}

// V1ExtensionRevision defines model for v1ExtensionRevision.
type V1ExtensionRevision struct {
	Binaries              *[]V1ExtensionBinary   `json:"binaries,omitempty"`
	Description           *string                `json:"description,omitempty"`
	Excerpt               *string                `json:"excerpt,omitempty"`
	IntegrationDetails    *[]V1IntegrationDetail `json:"integrationDetails,omitempty"`
	IsTesting             *bool                  `json:"isTesting,omitempty"`
	Items                 *[]V1ExtensionItem     `json:"items,omitempty"`
	Labels                *[]string              `json:"labels,omitempty"`
	PermissionDeniedItems *[]V1ExtensionItem     `json:"permissionDeniedItems,omitempty"`
	Version               string                 `json:"version"`
}

// V1ExternalUrl defines model for v1ExternalUrl.
type V1ExternalUrl struct {
	Url *string `json:"url,omitempty"`
}

// V1ExtractParameters defines model for v1ExtractParameters.
type V1ExtractParameters struct {
	Rule *string `json:"rule,omitempty"`
}

// V1ExtractTimestampParameters defines model for v1ExtractTimestampParameters.
type V1ExtractTimestampParameters struct {
	Format   *string                                   `json:"format,omitempty"`
	Standard *ExtractTimestampParametersFormatStandard `json:"standard,omitempty"`
}

// V1File This data structure represents a file
type V1File struct {
	Binary    *[]byte `json:"binary,omitempty"`
	Extension *string `json:"extension,omitempty"`
	Name      *string `json:"name,omitempty"`
	Size      *int64  `json:"size,omitempty"`
	Textual   *string `json:"textual,omitempty"`
}

// V1FilterType - FILTER_TYPE_STARTS_WITH: / Matches if string starts with filter
//   - FILTER_TYPE_ENDS_WITH: / Matches if string ends with filter
//   - FILTER_TYPE_CONTAINS: / Matches if string contains filter
//   - FILTER_TYPE_EXACT: / Matches if string exactly matches filter
type V1FilterType string

// V1GenericIntegrationParameters defines model for v1GenericIntegrationParameters.
type V1GenericIntegrationParameters struct {
	Parameters *[]V1Parameter `json:"parameters,omitempty"`
}

// V1GenericWebhookConfig defines model for v1GenericWebhookConfig.
type V1GenericWebhookConfig struct {
	Headers *map[string]string             `json:"headers,omitempty"`
	Method  GenericWebhookConfigMethodType `json:"method"`
	Payload *string                        `json:"payload,omitempty"`
	Uuid    string                         `json:"uuid"`
}

// V1GeoIpType defines model for v1GeoIpType.
type V1GeoIpType struct {
	WithAsn *bool `json:"withAsn,omitempty"`
}

// V1GetAllExtensionsRequest Request to list all extensions
type V1GetAllExtensionsRequest struct {
	// Filter Filter by integration ids
	Filter                  *V1GetAllExtensionsRequestFilter `json:"filter,omitempty"`
	IncludeHiddenExtensions *bool                            `json:"includeHiddenExtensions,omitempty"`
}

// V1GetAllExtensionsRequestFilter Filter by integration ids
type V1GetAllExtensionsRequestFilter struct {
	Integrations *[]string `json:"integrations,omitempty"`
}

// V1GetAllExtensionsResponse Response to list all extensions
type V1GetAllExtensionsResponse struct {
	Extensions *[]V1GetAllExtensionsResponseExtension `json:"extensions,omitempty"`
}

// V1GetAllExtensionsResponseExtension defines model for v1GetAllExtensionsResponseExtension.
type V1GetAllExtensionsResponseExtension struct {
	DarkModeImage *string                               `json:"darkModeImage,omitempty"`
	Deprecation   *V1Deprecation                        `json:"deprecation,omitempty"`
	Id            string                                `json:"id"`
	Image         string                                `json:"image"`
	Integrations  *[]string                             `json:"integrations,omitempty"`
	IsHidden      *bool                                 `json:"isHidden,omitempty"`
	Keywords      *[]string                             `json:"keywords,omitempty"`
	Name          string                                `json:"name"`
	Revisions     *[]V1GetAllExtensionsResponseRevision `json:"revisions,omitempty"`
}

// V1GetAllExtensionsResponseRevision defines model for v1GetAllExtensionsResponseRevision.
type V1GetAllExtensionsResponseRevision struct {
	Description        *string                                 `json:"description,omitempty"`
	Excerpt            *string                                 `json:"excerpt,omitempty"`
	IntegrationDetails *[]V1IntegrationDetail                  `json:"integrationDetails,omitempty"`
	Labels             *[]string                               `json:"labels,omitempty"`
	Summary            GetAllExtensionsResponseRevisionSummary `json:"summary"`
	Version            string                                  `json:"version"`
}

// V1GetCompanyEnrichmentSettingsResponse defines model for v1GetCompanyEnrichmentSettingsResponse.
type V1GetCompanyEnrichmentSettingsResponse struct {
	EnrichmentSettings *V1CompanyEnrichmentSettings `json:"enrichmentSettings,omitempty"`
}

// V1GetCompanyPoliciesResponse This data structue is obtained when retrieving all policies of a company.
type V1GetCompanyPoliciesResponse struct {
	Policies []V1Policy `json:"policies"`
}

// V1GetCompanyUsageLimitsRequest defines model for v1GetCompanyUsageLimitsRequest.
type V1GetCompanyUsageLimitsRequest = map[string]interface{}

// V1GetCompanyUsageLimitsResponse defines model for v1GetCompanyUsageLimitsResponse.
type V1GetCompanyUsageLimitsResponse struct {
	CompanyId *string                              `json:"companyId,omitempty"`
	Limits    *GetCompanyUsageLimitsResponseCounts `json:"limits,omitempty"`
	Usage     *GetCompanyUsageLimitsResponseCounts `json:"usage,omitempty"`
}

// V1GetConnectorResponse Response containing the requested connector
type V1GetConnectorResponse struct {
	// Connector A connector configuration for sending notifications
	Connector *V1Connector `json:"connector,omitempty"`
}

// V1GetConnectorTypeSummariesResponse Response containing summaries of connector types
type V1GetConnectorTypeSummariesResponse struct {
	ConnectorTypeSummaries *[]V1ConnectorTypeSummary `json:"connectorTypeSummaries,omitempty"`
}

// V1GetContextualDataIntegrationDefinitionResponse defines model for v1GetContextualDataIntegrationDefinitionResponse.
type V1GetContextualDataIntegrationDefinitionResponse struct {
	// IntegrationDefinition This data structure represents a definition of an integration.
	IntegrationDefinition V1IntegrationDefinition `json:"integrationDefinition"`
}

// V1GetContextualDataIntegrationDetailsResponse defines model for v1GetContextualDataIntegrationDetailsResponse.
type V1GetContextualDataIntegrationDetailsResponse struct {
	// IntegrationDetail This data structure represents a set of integration details.
	IntegrationDetail V1IntegrationDetails `json:"integrationDetail"`
}

// V1GetContextualDataIntegrationsResponse defines model for v1GetContextualDataIntegrationsResponse.
type V1GetContextualDataIntegrationsResponse struct {
	Integrations *[]V1GetContextualDataIntegrationsResponseIntegrationWithCounts `json:"integrations,omitempty"`
}

// V1GetContextualDataIntegrationsResponseIntegrationWithCounts defines model for v1GetContextualDataIntegrationsResponseIntegrationWithCounts.
type V1GetContextualDataIntegrationsResponseIntegrationWithCounts struct {
	AmountIntegrations int64     `json:"amountIntegrations"`
	Errors             *[]string `json:"errors,omitempty"`

	// Integration This data structure represents an integration
	Integration      V1Integration `json:"integration"`
	IsNew            *bool         `json:"isNew,omitempty"`
	UpgradeAvailable *bool         `json:"upgradeAvailable,omitempty"`
}

// V1GetCustomEnrichmentResponse This response data structure is obtained when a custom enrichment is retrieved
type V1GetCustomEnrichmentResponse struct {
	CustomEnrichment V1CustomEnrichment `json:"customEnrichment"`
}

// V1GetCustomEnrichmentsResponse This response data structure is obtained when all custom enrichments are retrieved
type V1GetCustomEnrichmentsResponse struct {
	CustomEnrichments []V1CustomEnrichment `json:"customEnrichments"`
}

// V1GetDefaultPresetSummaryResponse defines model for v1GetDefaultPresetSummaryResponse.
type V1GetDefaultPresetSummaryResponse struct {
	// PresetSummary Provides a concise overview of a preset
	PresetSummary *V1PresetSummary `json:"presetSummary,omitempty"`
}

// V1GetDeployedExtensionsResponse defines model for v1GetDeployedExtensionsResponse.
type V1GetDeployedExtensionsResponse struct {
	DeployedExtensions *[]GetDeployedExtensionsResponseDeployedExtension `json:"deployedExtensions,omitempty"`
}

// V1GetDeployedIntegrationResponse defines model for v1GetDeployedIntegrationResponse.
type V1GetDeployedIntegrationResponse struct {
	Integration V1DeployedIntegrationInformation `json:"integration"`
}

// V1GetEnrichmentLimitResponse This response data structure represents the enrichments limit
type V1GetEnrichmentLimitResponse struct {
	Limit int64 `json:"limit"`
	Used  int64 `json:"used"`
}

// V1GetEnrichmentsResponse This response data structure represents a collection of enrichments
type V1GetEnrichmentsResponse struct {
	Enrichments []Coralogixenrichmentv1Enrichment `json:"enrichments"`
}

// V1GetFilterValuesRequest Request to get available filter values for incidents
type V1GetFilterValuesRequest struct {
	// Filter Filter configuration for incidents
	Filter *V1IncidentQueryFilter `json:"filter,omitempty"`
}

// V1GetFilterValuesResponse Response containing available filter values for incidents
type V1GetFilterValuesResponse struct {
	FiltersValues V1IncidentQueryFiltersValues `json:"filtersValues"`
}

// V1GetGlobalRouterResponse Response containing a requested global router
type V1GetGlobalRouterResponse struct {
	// Router Defines a set of pre-configured routing rules for directing notifications
	Router *V1GlobalRouter `json:"router,omitempty"`
}

// V1GetGroupUsersResponse Response containing the list of all users currently assigned to the requested team group.
type V1GetGroupUsersResponse struct {
	// NoMorePages This data structure represents the information associated with an API key.
	NoMorePages *GetGroupUsersResponseNoMorePages `json:"noMorePages,omitempty"`

	// Token This data structure represents the information associated with an API key.
	Token *GetGroupUsersResponseNextPageToken `json:"token,omitempty"`
	Users *[]Permissionsv1User                `json:"users,omitempty"`
}

// V1GetIncidentEventsResponse Response containing all events associated with the requested incident
type V1GetIncidentEventsResponse struct {
	// IncidentEvents List of incident events
	IncidentEvents *[]V1IncidentEvent `json:"incidentEvents,omitempty"`
}

// V1GetIncidentResponse Response containing the requested incident
type V1GetIncidentResponse struct {
	// Incident *
	// Represents an Incident.
	Incident V1Incident `json:"incident"`
}

// V1GetIntegrationDefinitionResponse This data structure represents a list of outgoing webhook types.
type V1GetIntegrationDefinitionResponse struct {
	// IntegrationDefinition This data structure represents a definition of an integration.
	IntegrationDefinition V1IntegrationDefinition `json:"integrationDefinition"`
}

// V1GetIntegrationDetailsResponse defines model for v1GetIntegrationDetailsResponse.
type V1GetIntegrationDetailsResponse struct {
	// IntegrationDetail This data structure represents a set of integration details.
	IntegrationDetail V1IntegrationDetails `json:"integrationDetail"`
}

// V1GetIntegrationsResponse This data structure represents a list of outgoing webhook types.
type V1GetIntegrationsResponse struct {
	Integrations *[]V1GetIntegrationsResponseIntegrationWithCounts `json:"integrations,omitempty"`
}

// V1GetIntegrationsResponseIntegrationWithCounts defines model for v1GetIntegrationsResponseIntegrationWithCounts.
type V1GetIntegrationsResponseIntegrationWithCounts struct {
	AmountIntegrations *int64    `json:"amountIntegrations,omitempty"`
	Errors             *[]string `json:"errors,omitempty"`

	// Integration This data structure represents an integration
	Integration      *V1Integration `json:"integration,omitempty"`
	IsNew            *bool          `json:"isNew,omitempty"`
	UpgradeAvailable *bool          `json:"upgradeAvailable,omitempty"`
}

// V1GetManagedIntegrationStatusResponse defines model for v1GetManagedIntegrationStatusResponse.
type V1GetManagedIntegrationStatusResponse struct {
	IntegrationId string `json:"integrationId"`

	// Status This data structure represents an integration status.
	Status V1IntegrationStatus `json:"status"`
}

// V1GetOutgoingWebhookResponse defines model for v1GetOutgoingWebhookResponse.
type V1GetOutgoingWebhookResponse struct {
	Webhook V1OutgoingWebhook `json:"webhook"`
}

// V1GetOutgoingWebhookTypeDetailsResponse defines model for v1GetOutgoingWebhookTypeDetailsResponse.
type V1GetOutgoingWebhookTypeDetailsResponse struct {
	Details V1OutgoingWebhookDetails `json:"details"`
}

// V1GetPolicyResponse This data structue is obtained when retrieving a policy by its ID.
type V1GetPolicyResponse struct {
	// Policy A policy is a set of rules that define the behavior of the Coralogix system for a specific company.
	Policy *V1Policy `json:"policy,omitempty"`
}

// V1GetPresetResponse defines model for v1GetPresetResponse.
type V1GetPresetResponse struct {
	// Preset Set of preconfigured templates for notification content rendering
	Preset *Presetsv1Preset `json:"preset,omitempty"`
}

// V1GetRetentionsEnabledResponse This data structure is obtained when retrieving the active status of retentions
type V1GetRetentionsEnabledResponse struct {
	EnableTags *bool `json:"enableTags,omitempty"`
}

// V1GetRetentionsResponse defines model for v1GetRetentionsResponse.
type V1GetRetentionsResponse struct {
	Retentions *[]Coralogixarchivev1Retention `json:"retentions,omitempty"`
}

// V1GetRuleGroupModelMappingRequest defines model for v1GetRuleGroupModelMappingRequest.
type V1GetRuleGroupModelMappingRequest struct {
	Creator       *string                                                `json:"creator,omitempty"`
	Description   *string                                                `json:"description,omitempty"`
	Enabled       *bool                                                  `json:"enabled,omitempty"`
	Hidden        *bool                                                  `json:"hidden,omitempty"`
	Name          *string                                                `json:"name,omitempty"`
	Order         *int64                                                 `json:"order,omitempty"`
	RuleMatchers  *[]V1RuleMatcher                                       `json:"ruleMatchers,omitempty"`
	RuleSubgroups *[]V1GetRuleGroupModelMappingRequestCreateRuleSubgroup `json:"ruleSubgroups,omitempty"`
}

// V1GetRuleGroupModelMappingRequestCreateRuleSubgroup defines model for v1GetRuleGroupModelMappingRequestCreateRuleSubgroup.
type V1GetRuleGroupModelMappingRequestCreateRuleSubgroup struct {
	Enabled *bool                                                            `json:"enabled,omitempty"`
	Order   *int64                                                           `json:"order,omitempty"`
	Rules   *[]V1GetRuleGroupModelMappingRequestCreateRuleSubgroupCreateRule `json:"rules,omitempty"`
}

// V1GetRuleGroupModelMappingRequestCreateRuleSubgroupCreateRule defines model for v1GetRuleGroupModelMappingRequestCreateRuleSubgroupCreateRule.
type V1GetRuleGroupModelMappingRequestCreateRuleSubgroupCreateRule struct {
	Description *string           `json:"description,omitempty"`
	Enabled     *bool             `json:"enabled,omitempty"`
	Name        *string           `json:"name,omitempty"`
	Order       *int64            `json:"order,omitempty"`
	Parameters  *V1RuleParameters `json:"parameters,omitempty"`
	SourceField *string           `json:"sourceField,omitempty"`
}

// V1GetRuleGroupModelMappingResponse defines model for v1GetRuleGroupModelMappingResponse.
type V1GetRuleGroupModelMappingResponse struct {
	RuleDefinition *map[string]interface{} `json:"ruleDefinition,omitempty"`
}

// V1GetRuleGroupResponse defines model for v1GetRuleGroupResponse.
type V1GetRuleGroupResponse struct {
	RuleGroup *V1RuleGroup `json:"ruleGroup,omitempty"`
}

// V1GetRumApplicationVersionDataResponse defines model for v1GetRumApplicationVersionDataResponse.
type V1GetRumApplicationVersionDataResponse struct {
	VersionData V1RumVersionData `json:"versionData"`
}

// V1GetScopesResponse This data structure represents a response to get scopes
type V1GetScopesResponse struct {
	Scopes []Coralogixapisscopesv1Scope `json:"scopes"`
}

// V1GetSloResponse Response containing the details of a specific SLO.
type V1GetSloResponse struct {
	// Slo Definition of an SLO
	Slo V1Slo `json:"slo"`
}

// V1GetSystemDefaultPresetSummaryResponse defines model for v1GetSystemDefaultPresetSummaryResponse.
type V1GetSystemDefaultPresetSummaryResponse struct {
	// PresetSummary Provides a concise overview of a preset
	PresetSummary *V1PresetSummary `json:"presetSummary,omitempty"`
}

// V1GetTeamGroupByNameResponse Response containing the complete details of a team group that matches the requested name, including its members, roles, and scope settings.
type V1GetTeamGroupByNameResponse struct {
	Group *V1TeamGroup `json:"group,omitempty"`
}

// V1GetTeamGroupResponse Response containing the complete details of a requested team group, including its members, assigned roles, and scope configuration.
type V1GetTeamGroupResponse struct {
	Group *V1TeamGroup `json:"group,omitempty"`
}

// V1GetTeamGroupScopeResponse Response message containing the optional scope configuration (filters for subsystems and applications) for a team group
type V1GetTeamGroupScopeResponse struct {
	// Scope / A group scope has a list of filters for subsystems and applications. Used to filter traffic based on user defined rules.
	Scope *Coralogixpermissionsv1Scope `json:"scope,omitempty"`
}

// V1GetTeamGroupsResponse Response containing a list of all team groups and their complete details, including members, roles, and scope configurations.
type V1GetTeamGroupsResponse struct {
	Groups *[]V1TeamGroup `json:"groups,omitempty"`
}

// V1GetTemplateResponse defines model for v1GetTemplateResponse.
type V1GetTemplateResponse struct {
	TemplateUrl *string `json:"templateUrl,omitempty"`
}

// V1GlobalRouter Defines a set of pre-configured routing rules for directing notifications
type V1GlobalRouter struct {
	CreateTime           *time.Time                                `json:"createTime,omitempty"`
	DeprecatedEntityType *string                                   `json:"deprecatedEntityType,omitempty"`
	Description          *string                                   `json:"description,omitempty"`
	EntityLabels         *map[string]string                        `json:"entityLabels,omitempty"`
	EntityType           CoralogixapisnotificationCenterEntityType `json:"entityType"`
	Fallback             *[]RoutingRoutingTarget                   `json:"fallback,omitempty"`
	Id                   *string                                   `json:"id,omitempty"`
	Name                 string                                    `json:"name"`
	Rules                *[]RoutingRoutingRule                     `json:"rules,omitempty"`
	UpdateTime           *time.Time                                `json:"updateTime,omitempty"`
	UserDefinedId        *string                                   `json:"userDefinedId,omitempty"`
}

// V1GroupBy defines model for v1GroupBy.
type V1GroupBy struct {
	// ContextualLabel The contextual label to group by.
	ContextualLabel  *string                      `json:"contextualLabel,omitempty"`
	IncidentField    *V1IncidentFields            `json:"incidentField,omitempty"`
	OrderByDirection *Incidentsv1OrderByDirection `json:"orderByDirection,omitempty"`
}

// V1GroupByValues defines model for v1GroupByValues.
type V1GroupByValues struct {
	ContextualLabels *V1ContextualLabels   `json:"contextualLabels,omitempty"`
	IncidentField    *V1IncidentFieldOneOf `json:"incidentField,omitempty"`
}

// V1GroupOrigin / Group origin defines in which circumstances the group was created.
//
//   - GROUP_ORIGIN_BUILT_IN: / A built in group is defined by the system and users are not able to alter them.
//   - GROUP_ORIGIN_USER_DEFINED: / User defined or custom role.
type V1GroupOrigin string

// V1IbmEventNotificationsConfig defines model for v1IbmEventNotificationsConfig.
type V1IbmEventNotificationsConfig struct {
	EndpointType                 IbmEventNotificationsConfigEndpointType `json:"endpointType"`
	EventNotificationsInstanceId string                                  `json:"eventNotificationsInstanceId"`
	RegionId                     string                                  `json:"regionId"`
	SourceId                     *string                                 `json:"sourceId,omitempty"`
	SourceName                   *string                                 `json:"sourceName,omitempty"`
}

// V1InRule A rule within a group that defines a recording rule expression.
type V1InRule struct {
	// Expr *
	// The PromQL expression to evaluate. Every evaluation cycle this is
	// evaluated at the current time, and the result recorded as a new set of
	// time series with the metric name as given by 'record'.
	Expr *string `json:"expr,omitempty"`

	// Labels Labels to add or overwrite before storing the result.
	Labels *map[string]string `json:"labels,omitempty"`

	// Record The name of the time series to output to. Must be a valid metric name.
	Record *string `json:"record,omitempty"`
}

// V1InRuleGroup A group of recording rules.
type V1InRuleGroup struct {
	Id *string `json:"id,omitempty"`

	// Interval How often rules in the group are evaluated.
	//
	// optional, default = 60 secs
	Interval *int64 `json:"interval,omitempty"`

	// Limit Limits the number of series a rule can produce.
	//
	// optional, 0 is no limit, default = 0
	Limit *string `json:"limit,omitempty"`

	// Name Name of the group.
	Name *string `json:"name,omitempty"`

	// Rules Rules of the group.
	Rules   *[]V1InRule `json:"rules,omitempty"`
	Version *int64      `json:"version,omitempty"`
}

// V1Incident *
// Represents an Incident.
type V1Incident struct {
	Assignments []V1Assignment `json:"assignments"`
	ClosedAt    *time.Time     `json:"closedAt,omitempty"`

	// ContextualLabels The incident's current contextual labels - dynamic labels that give contextual information about the incident (for example, the alert_name label can appear in an incident created by an event originating from the alerting system).
	ContextualLabels    map[string]string                    `json:"contextualLabels"`
	CreatedAt           time.Time                            `json:"createdAt"`
	Description         *string                              `json:"description,omitempty"`
	DisplayLabels       map[string]string                    `json:"displayLabels"`
	Duration            string                               `json:"duration"`
	Events              []V1IncidentEvent                    `json:"events"`
	Id                  string                               `json:"id"`
	IsMuted             *bool                                `json:"isMuted,omitempty"`
	LastStateUpdateKey  string                               `json:"lastStateUpdateKey"`
	LastStateUpdateTime time.Time                            `json:"lastStateUpdateTime"`
	MetaLabels          *[]Coralogixapisincidentsv1MetaLabel `json:"metaLabels,omitempty"`
	Name                *string                              `json:"name,omitempty"`
	Severity            V1IncidentSeverity                   `json:"severity"`
	State               V1IncidentState                      `json:"state"`
	Status              V1IncidentStatus                     `json:"status"`
}

// V1IncidentAggregation defines model for v1IncidentAggregation.
type V1IncidentAggregation struct {
	AggAssignmentsCount []V1IncidentAssignmentCount `json:"aggAssignmentsCount"`
	AggMetaLabelsCount  []V1IncidentMetaLabelsCount `json:"aggMetaLabelsCount"`
	AggSeverityCount    []V1IncidentSeverityCount   `json:"aggSeverityCount"`
	AggStateCount       []V1IncidentStateCount      `json:"aggStateCount"`
	AggStatusCount      []V1IncidentStatusCount     `json:"aggStatusCount"`
	AllValuesCount      int64                       `json:"allValuesCount"`
	FirstCreatedAt      time.Time                   `json:"firstCreatedAt"`
	GroupBysValue       []V1GroupByValues           `json:"groupBysValue"`
	LastClosedAt        time.Time                   `json:"lastClosedAt"`
	LastStateUpdateTime time.Time                   `json:"lastStateUpdateTime"`
	ListIncidentsId     []string                    `json:"listIncidentsId"`
}

// V1IncidentAssignmentCount defines model for v1IncidentAssignmentCount.
type V1IncidentAssignmentCount struct {
	AssignedTo V1UserDetails `json:"assignedTo"`
	Count      int64         `json:"count"`
}

// V1IncidentEvent defines model for v1IncidentEvent.
type V1IncidentEvent struct {
	Acknowledge         *V1IncidentEventAcknowledge              `json:"acknowledge,omitempty"`
	AdministrativeEvent *V1IncidentEventOriginatorAdministrative `json:"administrativeEvent,omitempty"`
	Assignment          *V1IncidentEventAssign                   `json:"assignment,omitempty"`
	Close               *V1IncidentEventClose                    `json:"close,omitempty"`

	// Id The ID of the incident event
	Id                string                                `json:"id"`
	IncidentEventType V1IncidentEventType                   `json:"incidentEventType"`
	OperationalEvent  *V1IncidentEventOriginatorOperational `json:"operationalEvent,omitempty"`
	OriginatorType    V1OriginatorType                      `json:"originatorType"`
	SnoozeIndicator   *V1IncidentEventSnoozeIndicator       `json:"snoozeIndicator,omitempty"`
	Unassign          *V1IncidentEventUnassign              `json:"unassign,omitempty"`
	UpsertState       *V1IncidentEventUpsertState           `json:"upsertState,omitempty"`
}

// V1IncidentEventAcknowledge defines model for v1IncidentEventAcknowledge.
type V1IncidentEventAcknowledge struct {
	AcknowledgedBy *V1UserDetails `json:"acknowledgedBy,omitempty"`
}

// V1IncidentEventAlertType defines model for v1IncidentEventAlertType.
type V1IncidentEventAlertType string

// V1IncidentEventAssign defines model for v1IncidentEventAssign.
type V1IncidentEventAssign struct {
	// Assignment Details of the user who assigned the incident and the user to whom it was assigned
	Assignment *V1Assignment `json:"assignment,omitempty"`
}

// V1IncidentEventClose defines model for v1IncidentEventClose.
type V1IncidentEventClose struct {
	ClosedBy *V1UserDetails `json:"closedBy,omitempty"`
}

// V1IncidentEventExtended defines model for v1IncidentEventExtended.
type V1IncidentEventExtended struct {
	CxEventKey                    string                           `json:"cxEventKey"`
	CxEventTimestamp              time.Time                        `json:"cxEventTimestamp"`
	IncidentEvent                 V1IncidentEvent                  `json:"incidentEvent"`
	IncidentEventExtendedMetadata *V1IncidentEventExtendedMetadata `json:"incidentEventExtendedMetadata,omitempty"`
}

// V1IncidentEventExtendedMetadata defines model for v1IncidentEventExtendedMetadata.
type V1IncidentEventExtendedMetadata struct {
	AlertGroupByFields  *[]string                            `json:"alertGroupByFields,omitempty"`
	AlertId             *string                              `json:"alertId,omitempty"`
	AlertLabels         *[]Coralogixapisincidentsv1MetaLabel `json:"alertLabels,omitempty"`
	AlertName           *string                              `json:"alertName,omitempty"`
	AlertType           *V1IncidentEventAlertType            `json:"alertType,omitempty"`
	IncidentPermutation *map[string]string                   `json:"incidentPermutation,omitempty"`
	IncidentSeverity    *V1IncidentSeverity                  `json:"incidentSeverity,omitempty"`
	IncidentState       *V1IncidentState                     `json:"incidentState,omitempty"`
	IncidentStatus      *V1IncidentStatus                    `json:"incidentStatus,omitempty"`
	IsMuted             *bool                                `json:"isMuted,omitempty"`
}

// V1IncidentEventOrderByFieldType defines model for v1IncidentEventOrderByFieldType.
type V1IncidentEventOrderByFieldType string

// V1IncidentEventOriginatorAdministrative defines model for v1IncidentEventOriginatorAdministrative.
type V1IncidentEventOriginatorAdministrative struct {
	UserId *string `json:"userId,omitempty"`
}

// V1IncidentEventOriginatorOperational defines model for v1IncidentEventOriginatorOperational.
type V1IncidentEventOriginatorOperational struct {
	SystemName *string `json:"systemName,omitempty"`
}

// V1IncidentEventQueryFilter Filter configuration for incident events
type V1IncidentEventQueryFilter struct {
	// ContextualLabels The contextual labels of the incident
	ContextualLabels *map[string]V1ContextualLabelValues `json:"contextualLabels,omitempty"`

	// IsMuted Indicates if the incident is muted
	IsMuted *bool           `json:"isMuted,omitempty"`
	Labels  *V1LabelsFilter `json:"labels,omitempty"`

	// Name The name of the incident
	Name *string `json:"name,omitempty"`

	// Severity The severity of the incident
	Severity *[]V1IncidentSeverity `json:"severity,omitempty"`

	// Status The status of the incident
	Status *[]V1IncidentStatus `json:"status,omitempty"`

	// Timestamp Represents a time range with start and end timestamps
	Timestamp *Coralogixapisincidentsv1TimeRange `json:"timestamp,omitempty"`
}

// V1IncidentEventSnoozeIndicator defines model for v1IncidentEventSnoozeIndicator.
type V1IncidentEventSnoozeIndicator struct {
	DurationMinutes *int32     `json:"durationMinutes,omitempty"`
	StartTime       *time.Time `json:"startTime,omitempty"`
	UserId          *string    `json:"userId,omitempty"`
}

// V1IncidentEventType defines model for v1IncidentEventType.
type V1IncidentEventType string

// V1IncidentEventUnassign defines model for v1IncidentEventUnassign.
type V1IncidentEventUnassign = map[string]interface{}

// V1IncidentEventUpsertState defines model for v1IncidentEventUpsertState.
type V1IncidentEventUpsertState struct {
	IsMuted   *bool                        `json:"isMuted,omitempty"`
	Payload   V1UpsertIncidentStatePayload `json:"payload"`
	StateType V1UpsertIncidentStateType    `json:"stateType"`
}

// V1IncidentFieldOneOf defines model for v1IncidentFieldOneOf.
type V1IncidentFieldOneOf struct {
	ApplicationName     *string             `json:"applicationName,omitempty"`
	ClosedAt            *time.Time          `json:"closedAt,omitempty"`
	CreatedAt           *time.Time          `json:"createdAt,omitempty"`
	Duration            *string             `json:"duration,omitempty"`
	Id                  *string             `json:"id,omitempty"`
	LastStateUpdateTime *time.Time          `json:"lastStateUpdateTime,omitempty"`
	Name                *string             `json:"name,omitempty"`
	Severity            *V1IncidentSeverity `json:"severity,omitempty"`
	State               *V1IncidentState    `json:"state,omitempty"`
	Status              *V1IncidentStatus   `json:"status,omitempty"`
	SubsystemName       *string             `json:"subsystemName,omitempty"`
}

// V1IncidentFields defines model for v1IncidentFields.
type V1IncidentFields string

// V1IncidentMetaLabelsCount defines model for v1IncidentMetaLabelsCount.
type V1IncidentMetaLabelsCount struct {
	Count     int64                             `json:"count"`
	MetaLabel Coralogixapisincidentsv1MetaLabel `json:"metaLabel"`
}

// V1IncidentMetaLabelsWithCount defines model for v1IncidentMetaLabelsWithCount.
type V1IncidentMetaLabelsWithCount struct {
	Count     int32                             `json:"count"`
	MetaLabel Coralogixapisincidentsv1MetaLabel `json:"metaLabel"`
}

// V1IncidentQueryFilter Filter configuration for incidents
type V1IncidentQueryFilter struct {
	// ApplicationName Filter by application names
	ApplicationName *[]string `json:"applicationName,omitempty"`

	// Assignee Filter by assignee
	Assignee *[]string `json:"assignee,omitempty"`

	// ContextualLabels Filter by contextual labels
	ContextualLabels *map[string]V1ContextualLabelValues `json:"contextualLabels,omitempty"`

	// CreatedAtRange Represents a time range with start and end timestamps
	CreatedAtRange *Coralogixapisincidentsv1TimeRange `json:"createdAtRange,omitempty"`

	// EndTime Filters all incidents that were open in the given timeframe end time (deprecated, use incident_open_range instead)
	EndTime *time.Time `json:"endTime,omitempty"`

	// IncidentDurationRange Represents a time range with start and end timestamps
	IncidentDurationRange *Coralogixapisincidentsv1TimeRange `json:"incidentDurationRange,omitempty"`

	// IsMuted Indicates if the incident is muted
	IsMuted *bool `json:"isMuted,omitempty"`

	// MetaLabels Filters all incidents with the given meta labels
	MetaLabels   *[]Coralogixapisincidentsv1MetaLabel `json:"metaLabels,omitempty"`
	MetaLabelsOp *Incidentsv1FilterOperator           `json:"metaLabelsOp,omitempty"`
	SearchQuery  *V1IncidentSearchQuery               `json:"searchQuery,omitempty"`

	// Severity Filter by incident severity
	Severity *[]V1IncidentSeverity `json:"severity,omitempty"`

	// StartTime Filters all incidents that were open in the given timeframe start time (deprecated, use incident_open_range instead)
	StartTime *time.Time `json:"startTime,omitempty"`

	// State Filter by incident state
	State *[]V1IncidentState `json:"state,omitempty"`

	// Status Filter by incident status
	Status *[]V1IncidentStatus `json:"status,omitempty"`

	// SubsystemName Filter by subsystem names
	SubsystemName *[]string `json:"subsystemName,omitempty"`
}

// V1IncidentQueryFiltersValues defines model for v1IncidentQueryFiltersValues.
type V1IncidentQueryFiltersValues struct {
	AssigneeWithCount   []V1AssigneeWithCount                       `json:"assigneeWithCount"`
	ContextualLabels    map[string]V1ContextualLabelValuesWithCount `json:"contextualLabels"`
	MetaLabelsOp        Incidentsv1FilterOperator                   `json:"metaLabelsOp"`
	MetaLabelsWithCount []V1IncidentMetaLabelsWithCount             `json:"metaLabelsWithCount"`
	SeverityWithCount   []V1IncidentSeverityWithCount               `json:"severityWithCount"`
	StateWithCount      []V1IncidentStateWithCount                  `json:"stateWithCount"`
	StatusWithCount     []V1IncidentStatusWithCount                 `json:"statusWithCount"`
}

// V1IncidentSearchQuery defines model for v1IncidentSearchQuery.
type V1IncidentSearchQuery struct {
	// ContextualLabel The contextual label to search in.
	ContextualLabel *string           `json:"contextualLabel,omitempty"`
	IncidentField   *V1IncidentFields `json:"incidentField,omitempty"`

	// Query The search query
	Query string `json:"query"`
}

// V1IncidentSeverity defines model for v1IncidentSeverity.
type V1IncidentSeverity string

// V1IncidentSeverityCount defines model for v1IncidentSeverityCount.
type V1IncidentSeverityCount struct {
	Count    int64              `json:"count"`
	Severity V1IncidentSeverity `json:"severity"`
}

// V1IncidentSeverityWithCount defines model for v1IncidentSeverityWithCount.
type V1IncidentSeverityWithCount struct {
	Count    int32              `json:"count"`
	Severity V1IncidentSeverity `json:"severity"`
}

// V1IncidentState defines model for v1IncidentState.
type V1IncidentState string

// V1IncidentStateCount defines model for v1IncidentStateCount.
type V1IncidentStateCount struct {
	Count int64           `json:"count"`
	State V1IncidentState `json:"state"`
}

// V1IncidentStateWithCount defines model for v1IncidentStateWithCount.
type V1IncidentStateWithCount struct {
	Count int32           `json:"count"`
	State V1IncidentState `json:"state"`
}

// V1IncidentStatus defines model for v1IncidentStatus.
type V1IncidentStatus string

// V1IncidentStatusCount defines model for v1IncidentStatusCount.
type V1IncidentStatusCount struct {
	Count  int64            `json:"count"`
	Status V1IncidentStatus `json:"status"`
}

// V1IncidentStatusWithCount defines model for v1IncidentStatusWithCount.
type V1IncidentStatusWithCount struct {
	Count  int32            `json:"count"`
	Status V1IncidentStatus `json:"status"`
}

// V1InitializeTestingRevisionRequest defines model for v1InitializeTestingRevisionRequest.
type V1InitializeTestingRevisionRequest struct {
	// ExtensionData Extension details for ingestion
	ExtensionData V1ExtensionData `json:"extensionData"`
}

// V1InitializeTestingRevisionResponse defines model for v1InitializeTestingRevisionResponse.
type V1InitializeTestingRevisionResponse = map[string]interface{}

// V1Integration This data structure represents an integration
type V1Integration struct {
	DarkIcon    *string `json:"darkIcon,omitempty"`
	Description *string `json:"description,omitempty"`
	FeatureFlag *string `json:"featureFlag,omitempty"`
	Icon        *string `json:"icon,omitempty"`
	Id          *string `json:"id,omitempty"`

	// IntegrationType This data structure represents an integration type.
	IntegrationType *Integrationsv1IntegrationType `json:"integrationType,omitempty"`
	Name            *string                        `json:"name,omitempty"`
	Tags            *[]string                      `json:"tags,omitempty"`
	Versions        *[]string                      `json:"versions,omitempty"`
}

// V1IntegrationDefinition This data structure represents a definition of an integration.
type V1IntegrationDefinition struct {
	FeatureFlag *string `json:"featureFlag,omitempty"`

	// IntegrationType This data structure represents an integration type.
	IntegrationType *Integrationsv1IntegrationType `json:"integrationType,omitempty"`
	Key             *string                        `json:"key,omitempty"`
	Revisions       *[]V1IntegrationRevision       `json:"revisions,omitempty"`
}

// V1IntegrationDetail defines model for v1IntegrationDetail.
type V1IntegrationDetail struct {
	Link string `json:"link"`
	Name string `json:"name"`
}

// V1IntegrationDetails This data structure represents a set of integration details.
type V1IntegrationDetails struct {
	Default    *IntegrationDetailsDefaultIntegrationDetails `json:"default,omitempty"`
	Docs       *[]V1IntegrationDoc                          `json:"docs,omitempty"`
	Extensions *[]Extensionsv1Extension                     `json:"extensions,omitempty"`
	External   *V1ExternalUrl                               `json:"external,omitempty"`

	// Integration This data structure represents an integration
	Integration *V1Integration    `json:"integration,omitempty"`
	Local       *V1LocalChangelog `json:"local,omitempty"`
}

// V1IntegrationDoc This data structure represents integration documentation.
type V1IntegrationDoc struct {
	Link *string `json:"link,omitempty"`
	Name *string `json:"name,omitempty"`
}

// V1IntegrationMetadata This data structure represents the metadata of an integration.
type V1IntegrationMetadata struct {
	IntegrationKey        *string                         `json:"integrationKey,omitempty"`
	IntegrationParameters *V1GenericIntegrationParameters `json:"integrationParameters,omitempty"`
	Version               *string                         `json:"version,omitempty"`
}

// V1IntegrationRevision This data structure represents an integration revision.
type V1IntegrationRevision struct {
	// AzureArmTemplate This data structure represents an azure ARM template.
	AzureArmTemplate *IntegrationRevisionAzureArmTemplate       `json:"azureArmTemplate,omitempty"`
	CloudFormation   *IntegrationRevisionCloudFormationTemplate `json:"cloudFormation,omitempty"`
	FeatureFlag      *string                                    `json:"featureFlag,omitempty"`
	Fields           *[]IntegrationRevisionFieldInformation     `json:"fields,omitempty"`
	Groups           *[]V1IntegrationRevisionGroup              `json:"groups,omitempty"`

	// HelmChart This data structure represents a Helm chart.
	HelmChart *IntegrationRevisionHelmChart `json:"helmChart,omitempty"`
	Id        *string                       `json:"id,omitempty"`

	// ManagedService This data structure represents a managed service.
	ManagedService              *IntegrationRevisionManagedService `json:"managedService,omitempty"`
	RevisionDeploymentSupported *bool                              `json:"revisionDeploymentSupported,omitempty"`

	// Rum This data structure represents a RUM integration.
	Rum *IntegrationRevisionRum `json:"rum,omitempty"`

	// Terraform This data structure represents a Terraform integration.
	Terraform             *IntegrationRevisionTerraform `json:"terraform,omitempty"`
	UpgradeInstructionsMd *string                       `json:"upgradeInstructionsMd,omitempty"`
}

// V1IntegrationRevisionGroup defines model for v1IntegrationRevisionGroup.
type V1IntegrationRevisionGroup struct {
	Id   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// V1IntegrationStatus This data structure represents an integration status.
type V1IntegrationStatus struct {
	ConnectionStatus V1ConnectionStatus `json:"connectionStatus"`
	Details          *map[string]string `json:"details,omitempty"`
	Messages         *[]string          `json:"messages,omitempty"`
}

// V1ItemCounts defines model for v1ItemCounts.
type V1ItemCounts struct {
	Actions           *int64 `json:"actions,omitempty"`
	Alerts            *int64 `json:"alerts,omitempty"`
	CustomDashboards  *int64 `json:"customDashboards,omitempty"`
	Enrichments       *int64 `json:"enrichments,omitempty"`
	EventsToMetrics   *int64 `json:"eventsToMetrics,omitempty"`
	GrafanaDashboards *int64 `json:"grafanaDashboards,omitempty"`
	KibanaDashboards  *int64 `json:"kibanaDashboards,omitempty"`
	MetricsRuleGroup  *int64 `json:"metricsRuleGroup,omitempty"`
	ParsingRules      *int64 `json:"parsingRules,omitempty"`
	SavedViews        *int64 `json:"savedViews,omitempty"`
}

// V1JiraConfig defines model for v1JiraConfig.
type V1JiraConfig struct {
	ApiToken   string `json:"apiToken"`
	Email      string `json:"email"`
	ProjectKey string `json:"projectKey"`
}

// V1JsonExtractParameters defines model for v1JsonExtractParameters.
type V1JsonExtractParameters struct {
	DestinationFieldText *string                                `json:"destinationFieldText,omitempty"`
	DestinationFieldType *JsonExtractParametersDestinationField `json:"destinationFieldType,omitempty"`
	Rule                 *string                                `json:"rule,omitempty"`
}

// V1JsonParseParameters defines model for v1JsonParseParameters.
type V1JsonParseParameters struct {
	DeleteSource     *bool   `json:"deleteSource,omitempty"`
	DestinationField *string `json:"destinationField,omitempty"`
	EscapedValue     *bool   `json:"escapedValue,omitempty"`
	OverrideDest     *bool   `json:"overrideDest,omitempty"`
}

// V1JsonStringifyParameters defines model for v1JsonStringifyParameters.
type V1JsonStringifyParameters struct {
	DeleteSource     *bool   `json:"deleteSource,omitempty"`
	DestinationField *string `json:"destinationField,omitempty"`
}

// V1LabelsFilter defines model for v1LabelsFilter.
type V1LabelsFilter struct {
	// MetaLabels The meta labels of the incident
	MetaLabels []Coralogixapisincidentsv1MetaLabel `json:"metaLabels"`
	Operator   *Incidentsv1FilterOperator          `json:"operator,omitempty"`
}

// V1ListAllOutgoingWebhooksResponse defines model for v1ListAllOutgoingWebhooksResponse.
type V1ListAllOutgoingWebhooksResponse struct {
	Deployed *[]V1OutgoingWebhookExtendedSummary `json:"deployed,omitempty"`
}

// V1ListConnectorSummariesResponse Response containing summaries of connectors
type V1ListConnectorSummariesResponse struct {
	Connectors *[]V1ConnectorSummary `json:"connectors,omitempty"`
}

// V1ListConnectorsResponse Response containing a list of connectors
type V1ListConnectorsResponse struct {
	Connectors *[]V1Connector `json:"connectors,omitempty"`
}

// V1ListEntitySubTypesResponse defines model for v1ListEntitySubTypesResponse.
type V1ListEntitySubTypesResponse struct {
	EntitySubTypes *[]string `json:"entitySubTypes,omitempty"`
}

// V1ListEntityTypesResponse defines model for v1ListEntityTypesResponse.
type V1ListEntityTypesResponse struct {
	DeprecatedEntityTypes *[]string                                    `json:"deprecatedEntityTypes,omitempty"`
	EntityTypes           *[]CoralogixapisnotificationCenterEntityType `json:"entityTypes,omitempty"`
}

// V1ListGlobalRoutersResponse Response containing requested global routers
type V1ListGlobalRoutersResponse struct {
	Routers *[]V1GlobalRouter `json:"routers,omitempty"`
}

// V1ListIbmEventNotificationsInstancesResponse defines model for v1ListIbmEventNotificationsInstancesResponse.
type V1ListIbmEventNotificationsInstancesResponse struct {
	Instances *[]ListIbmEventNotificationsInstancesResponseEventNotificationsInstance `json:"instances,omitempty"`
}

// V1ListIncidentAggregationsRequest Request to get aggregated incident data with filtering and grouping options
type V1ListIncidentAggregationsRequest struct {
	// Filter Filter configuration for incidents
	Filter *V1IncidentQueryFilter `json:"filter,omitempty"`

	// GroupBys Group by fields for aggregation
	GroupBys *[]V1GroupBy `json:"groupBys,omitempty"`

	// Pagination Pagination parameters for list requests
	Pagination *Incidentsv1PaginationRequest `json:"pagination,omitempty"`
}

// V1ListIncidentAggregationsResponse Response containing aggregated incident data and pagination information
type V1ListIncidentAggregationsResponse struct {
	// IncidentAggs List of incident aggregations
	IncidentAggs []V1IncidentAggregation `json:"incidentAggs"`

	// Pagination Pagination information for list responses
	Pagination Incidentsv1PaginationResponse `json:"pagination"`
}

// V1ListIncidentEventRequestOrderBy defines model for v1ListIncidentEventRequestOrderBy.
type V1ListIncidentEventRequestOrderBy struct {
	Direction *Incidentsv1OrderByDirection     `json:"direction,omitempty"`
	Field     *V1IncidentEventOrderByFieldType `json:"field,omitempty"`
}

// V1ListIncidentEventsFilterValuesRequest A request to get available filter values for incident events
type V1ListIncidentEventsFilterValuesRequest struct {
	// Filter Filter configuration for incident events
	Filter *V1IncidentEventQueryFilter `json:"filter,omitempty"`
}

// V1ListIncidentEventsFilterValuesResponse A response containing available filter values for incident events
type V1ListIncidentEventsFilterValuesResponse struct {
	FiltersValues *V1IncidentQueryFiltersValues `json:"filtersValues,omitempty"`
}

// V1ListIncidentEventsRequest Request to list incident events with filtering, pagination and ordering options
type V1ListIncidentEventsRequest struct {
	// Filter Filter configuration for incident events
	Filter  *V1IncidentEventQueryFilter        `json:"filter,omitempty"`
	OrderBy *V1ListIncidentEventRequestOrderBy `json:"orderBy,omitempty"`

	// Pagination Pagination parameters for list requests
	Pagination *Incidentsv1PaginationRequest `json:"pagination,omitempty"`
}

// V1ListIncidentEventsResponse A response containing a list of incident events and pagination information
type V1ListIncidentEventsResponse struct {
	// Items List of incident events
	Items []V1IncidentEventExtended `json:"items"`

	// Pagination Pagination information for list responses
	Pagination *Incidentsv1PaginationResponse `json:"pagination,omitempty"`
}

// V1ListIncidentEventsTotalCountRequest A request to get the total count of incident events matching a filter
type V1ListIncidentEventsTotalCountRequest struct {
	// Filter Filter configuration for incident events
	Filter *V1IncidentEventQueryFilter `json:"filter,omitempty"`
}

// V1ListIncidentEventsTotalCountResponse A response containing the total count of matching incident events and whether the count limit was reached
type V1ListIncidentEventsTotalCountResponse struct {
	// Count Total number of incident events matching the filter
	Count *string `json:"count,omitempty"`

	// ReachedLimit Indicates if the count reached the system limit
	ReachedLimit *bool `json:"reachedLimit,omitempty"`
}

// V1ListIncidentsRequest Request to list incidents with filtering, pagination and ordering options
type V1ListIncidentsRequest struct {
	// Filter Filter configuration for incidents
	Filter *V1IncidentQueryFilter `json:"filter,omitempty"`

	// OrderBys Order by fields
	OrderBys *[]Incidentsv1OrderBy `json:"orderBys,omitempty"`

	// Pagination Pagination parameters for list requests
	Pagination *Incidentsv1PaginationRequest `json:"pagination,omitempty"`
}

// V1ListIncidentsResponse Response containing a list of incidents and pagination information
type V1ListIncidentsResponse struct {
	Incidents []V1Incident `json:"incidents"`

	// Pagination Pagination information for list responses
	Pagination Incidentsv1PaginationResponse `json:"pagination"`
}

// V1ListManagedIntegrationKeysResponse defines model for v1ListManagedIntegrationKeysResponse.
type V1ListManagedIntegrationKeysResponse struct {
	IntegrationKeys []string `json:"integrationKeys"`
}

// V1ListOutboundWebhooksSummaryResponse defines model for v1ListOutboundWebhooksSummaryResponse.
type V1ListOutboundWebhooksSummaryResponse struct {
	OutboundWebhookSummaries *[]V1OutboundWebhookSummary `json:"outboundWebhookSummaries,omitempty"`
}

// V1ListOutgoingWebhookTypesResponse defines model for v1ListOutgoingWebhookTypesResponse.
type V1ListOutgoingWebhookTypesResponse struct {
	Webhooks *[]ListOutgoingWebhookTypesResponseOutgoingWebhookType `json:"webhooks,omitempty"`
}

// V1ListOutgoingWebhooksResponse defines model for v1ListOutgoingWebhooksResponse.
type V1ListOutgoingWebhooksResponse struct {
	Deployed *[]V1OutgoingWebhookSummary `json:"deployed,omitempty"`
}

// V1ListPresetSummariesResponse defines model for v1ListPresetSummariesResponse.
type V1ListPresetSummariesResponse struct {
	PresetSummaries *[]V1PresetSummary `json:"presetSummaries,omitempty"`
}

// V1ListRuleGroupsResponse defines model for v1ListRuleGroupsResponse.
type V1ListRuleGroupsResponse struct {
	RuleGroups *[]V1RuleGroup `json:"ruleGroups,omitempty"`
}

// V1ListSlosResponse Response containing a list of SLOs.
type V1ListSlosResponse struct {
	Slos []V1Slo `json:"slos"`
}

// V1LocalChangelog defines model for v1LocalChangelog.
type V1LocalChangelog struct {
	Changes *[]V1RevisionRef `json:"changes,omitempty"`
}

// V1LogMetaFieldsValues Values for log meta fields.
type V1LogMetaFieldsValues struct {
	ApplicationNameValues string `json:"applicationNameValues"`
	SeverityValues        string `json:"severityValues"`
	SubsystemNameValues   string `json:"subsystemNameValues"`
}

// V1LogRules Log rules for a policy.
type V1LogRules struct {
	Severities []Coralogixquotav1Severity `json:"severities"`
}

// V1MSTeamsWorkflowConfig defines model for v1MSTeamsWorkflowConfig.
type V1MSTeamsWorkflowConfig = map[string]interface{}

// V1Metric Definition of a metric used in SLOs
type V1Metric struct {
	Query string `json:"query"`
}

// V1MicrosoftTeamsConfig defines model for v1MicrosoftTeamsConfig.
type V1MicrosoftTeamsConfig = map[string]interface{}

// V1NoDeployment This data structure represents an integration that does not require deployment.
type V1NoDeployment = map[string]interface{}

// V1OpsgenieConfig defines model for v1OpsgenieConfig.
type V1OpsgenieConfig = map[string]interface{}

// V1OriginatorType defines model for v1OriginatorType.
type V1OriginatorType string

// V1OutRule defines model for v1OutRule.
type V1OutRule struct {
	Expr               *string            `json:"expr,omitempty"`
	Labels             *map[string]string `json:"labels,omitempty"`
	LastEvalDurationMs *string            `json:"lastEvalDurationMs,omitempty"`
	Record             *string            `json:"record,omitempty"`
}

// V1OutRuleGroup defines model for v1OutRuleGroup.
type V1OutRuleGroup struct {
	Id         *string      `json:"id,omitempty"`
	Interval   *int64       `json:"interval,omitempty"`
	LastEvalAt *string      `json:"lastEvalAt,omitempty"`
	Limit      *string      `json:"limit,omitempty"`
	Name       *string      `json:"name,omitempty"`
	Rules      *[]V1OutRule `json:"rules,omitempty"`
	Version    *int64       `json:"version,omitempty"`
}

// V1OutRuleGroupSet An output set of rule groups.
type V1OutRuleGroupSet struct {
	Groups *[]V1OutRuleGroup `json:"groups,omitempty"`
	Id     *string           `json:"id,omitempty"`
	Name   *string           `json:"name,omitempty"`
}

// V1OutboundWebhookSummary defines model for v1OutboundWebhookSummary.
type V1OutboundWebhookSummary struct {
	CreatedAt  time.Time     `json:"createdAt"`
	ExternalId int64         `json:"externalId"`
	Id         string        `json:"id"`
	Name       string        `json:"name"`
	Type       V1WebhookType `json:"type"`
	UpdatedAt  *time.Time    `json:"updatedAt,omitempty"`
}

// V1OutgoingWebhook defines model for v1OutgoingWebhook.
type V1OutgoingWebhook struct {
	AwsEventBridge        *V1AwsEventBridgeConfig        `json:"awsEventBridge,omitempty"`
	CreatedAt             time.Time                      `json:"createdAt"`
	Demisto               *V1DemistoConfig               `json:"demisto,omitempty"`
	EmailGroup            *V1EmailGroupConfig            `json:"emailGroup,omitempty"`
	ExternalId            int64                          `json:"externalId"`
	GenericWebhook        *V1GenericWebhookConfig        `json:"genericWebhook,omitempty"`
	IbmEventNotifications *V1IbmEventNotificationsConfig `json:"ibmEventNotifications,omitempty"`
	Id                    string                         `json:"id"`
	Jira                  *V1JiraConfig                  `json:"jira,omitempty"`
	MicrosoftTeams        *V1MicrosoftTeamsConfig        `json:"microsoftTeams,omitempty"`
	MsTeamsWorkflow       *V1MSTeamsWorkflowConfig       `json:"msTeamsWorkflow,omitempty"`
	Name                  string                         `json:"name"`
	Opsgenie              *V1OpsgenieConfig              `json:"opsgenie,omitempty"`
	PagerDuty             *V1PagerDutyConfig             `json:"pagerDuty,omitempty"`
	SendLog               *V1SendLogConfig               `json:"sendLog,omitempty"`
	Slack                 *V1SlackConfig                 `json:"slack,omitempty"`
	Type                  V1WebhookType                  `json:"type"`
	UpdatedAt             *time.Time                     `json:"updatedAt,omitempty"`
	Url                   *string                        `json:"url,omitempty"`
}

// V1OutgoingWebhookDetails defines model for v1OutgoingWebhookDetails.
type V1OutgoingWebhookDetails struct {
	Label string        `json:"label"`
	Type  V1WebhookType `json:"type"`
}

// V1OutgoingWebhookExtendedSummary defines model for v1OutgoingWebhookExtendedSummary.
type V1OutgoingWebhookExtendedSummary struct {
	CreatedAt  time.Time     `json:"createdAt"`
	ExternalId int64         `json:"externalId"`
	Id         string        `json:"id"`
	Name       string        `json:"name"`
	Type       V1WebhookType `json:"type"`
	UpdatedAt  *time.Time    `json:"updatedAt,omitempty"`
	Url        *string       `json:"url,omitempty"`
}

// V1OutgoingWebhookInputData defines model for v1OutgoingWebhookInputData.
type V1OutgoingWebhookInputData struct {
	AwsEventBridge        *V1AwsEventBridgeConfig        `json:"awsEventBridge,omitempty"`
	Demisto               *V1DemistoConfig               `json:"demisto,omitempty"`
	EmailGroup            *V1EmailGroupConfig            `json:"emailGroup,omitempty"`
	GenericWebhook        *V1GenericWebhookConfig        `json:"genericWebhook,omitempty"`
	IbmEventNotifications *V1IbmEventNotificationsConfig `json:"ibmEventNotifications,omitempty"`
	Jira                  *V1JiraConfig                  `json:"jira,omitempty"`
	MicrosoftTeams        *V1MicrosoftTeamsConfig        `json:"microsoftTeams,omitempty"`
	MsTeamsWorkflow       *V1MSTeamsWorkflowConfig       `json:"msTeamsWorkflow,omitempty"`
	Name                  string                         `json:"name"`
	Opsgenie              *V1OpsgenieConfig              `json:"opsgenie,omitempty"`
	PagerDuty             *V1PagerDutyConfig             `json:"pagerDuty,omitempty"`
	SendLog               *V1SendLogConfig               `json:"sendLog,omitempty"`
	Slack                 *V1SlackConfig                 `json:"slack,omitempty"`
	Type                  V1WebhookType                  `json:"type"`
	Url                   *string                        `json:"url,omitempty"`
}

// V1OutgoingWebhookSummary defines model for v1OutgoingWebhookSummary.
type V1OutgoingWebhookSummary struct {
	CreatedAt  time.Time  `json:"createdAt"`
	ExternalId int64      `json:"externalId"`
	Id         string     `json:"id"`
	Name       string     `json:"name"`
	UpdatedAt  *time.Time `json:"updatedAt,omitempty"`
	Url        *string    `json:"url,omitempty"`
}

// V1PagerDutyConfig defines model for v1PagerDutyConfig.
type V1PagerDutyConfig struct {
	ServiceKey string `json:"serviceKey"`
}

// V1Parameter defines model for v1Parameter.
type V1Parameter struct {
	ApiKey        *ParameterApiKeyData               `json:"apiKey,omitempty"`
	BooleanValue  *bool                              `json:"booleanValue,omitempty"`
	Key           *string                            `json:"key,omitempty"`
	NumericValue  *float64                           `json:"numericValue,omitempty"`
	SensitiveData *ParameterSensitiveDataPlaceholder `json:"sensitiveData,omitempty"`
	StringList    *ParameterStringList               `json:"stringList,omitempty"`
	StringValue   *string                            `json:"stringValue,omitempty"`
}

// V1ParseParameters defines model for v1ParseParameters.
type V1ParseParameters struct {
	DestinationField *string `json:"destinationField,omitempty"`
	Rule             *string `json:"rule,omitempty"`
}

// V1Policy A policy is a set of rules that define the behavior of the Coralogix system for a specific company.
type V1Policy struct {
	ApplicationRule  *Coralogixquotav1Rule `json:"applicationRule,omitempty"`
	ArchiveRetention *V1ArchiveRetention   `json:"archiveRetention,omitempty"`
	CompanyId        int32                 `json:"companyId"`
	CreatedAt        *string               `json:"createdAt,omitempty"`
	Deleted          bool                  `json:"deleted"`
	Description      *string               `json:"description,omitempty"`
	Enabled          bool                  `json:"enabled"`
	Id               string                `json:"id"`

	// LogRules Log rules for a policy.
	LogRules      *V1LogRules              `json:"logRules,omitempty"`
	Name          string                   `json:"name"`
	Order         int32                    `json:"order"`
	Priority      Coralogixquotav1Priority `json:"priority"`
	SpanRules     *V1SpanRules             `json:"spanRules,omitempty"`
	SubsystemRule *Coralogixquotav1Rule    `json:"subsystemRule,omitempty"`
	UpdatedAt     *string                  `json:"updatedAt,omitempty"`
}

// V1PolicyOrder Order of a policy.
type V1PolicyOrder struct {
	Id    string `json:"id"`
	Order int32  `json:"order"`
}

// V1PresetSummary Provides a concise overview of a preset
type V1PresetSummary struct {
	ConnectorType        *NotificationCenterConnectorType           `json:"connectorType,omitempty"`
	CreateTime           *time.Time                                 `json:"createTime,omitempty"`
	DeprecatedEntityType *string                                    `json:"deprecatedEntityType,omitempty"`
	Description          *string                                    `json:"description,omitempty"`
	EntityType           *CoralogixapisnotificationCenterEntityType `json:"entityType,omitempty"`
	Id                   *string                                    `json:"id,omitempty"`
	Name                 *string                                    `json:"name,omitempty"`
	ParentId             *string                                    `json:"parentId,omitempty"`
	PresetType           *V1PresetType                              `json:"presetType,omitempty"`
	UpdateTime           *time.Time                                 `json:"updateTime,omitempty"`
	UserDefinedId        *string                                    `json:"userDefinedId,omitempty"`
}

// V1PresetType defines model for v1PresetType.
type V1PresetType string

// V1QuickTimeSelection defines model for v1QuickTimeSelection.
type V1QuickTimeSelection struct {
	// Caption Folder name
	Caption *string `json:"caption,omitempty"`

	// Seconds Folder name
	Seconds int64 `json:"seconds"`
}

// V1RemoveEnrichmentsResponse Response data structure for enrichments deletion
type V1RemoveEnrichmentsResponse struct {
	RemainingEnrichments []Coralogixenrichmentv1Enrichment `json:"remainingEnrichments"`
}

// V1RemoveFieldsParameters defines model for v1RemoveFieldsParameters.
type V1RemoveFieldsParameters struct {
	Fields *[]string `json:"fields,omitempty"`
}

// V1RemoveUsersFromTeamGroupResponse Response confirming the successful removal of users from the specified team group.
type V1RemoveUsersFromTeamGroupResponse = map[string]interface{}

// V1RemoveUsersFromTeamGroupsResponse Response confirming the successful bulk removal of users from multiple team groups.
type V1RemoveUsersFromTeamGroupsResponse = map[string]interface{}

// V1ReorderPoliciesRequest This data structue is used to reorder policies.
type V1ReorderPoliciesRequest struct {
	Orders     []V1PolicyOrder   `json:"orders"`
	SourceType Quotav1SourceType `json:"sourceType"`
}

// V1ReorderPoliciesResponse This data structure is obtained when reordering policies.
type V1ReorderPoliciesResponse struct {
	Orders []V1PolicyOrder `json:"orders"`
}

// V1ReplaceConnectorResponse Response containing the updated connector
type V1ReplaceConnectorResponse struct {
	// Connector A connector configuration for sending notifications
	Connector *V1Connector `json:"connector,omitempty"`
}

// V1ReplaceCustomPresetResponse Response containing the updated custom preset
type V1ReplaceCustomPresetResponse struct {
	// Preset Set of preconfigured templates for notification content rendering
	Preset *Presetsv1Preset `json:"preset,omitempty"`
}

// V1ReplaceGlobalRouterResponse Response which contains an updated global router
type V1ReplaceGlobalRouterResponse struct {
	// Router Defines a set of pre-configured routing rules for directing notifications
	Router *V1GlobalRouter `json:"router,omitempty"`
}

// V1ReplaceParameters defines model for v1ReplaceParameters.
type V1ReplaceParameters struct {
	DestinationField *string `json:"destinationField,omitempty"`
	ReplaceNewVal    *string `json:"replaceNewVal,omitempty"`
	Rule             *string `json:"rule,omitempty"`
}

// V1ReplaceSloResponse Response after replacing an existing SLO.
type V1ReplaceSloResponse struct {
	EffectedSloAlertIds *[]string `json:"effectedSloAlertIds,omitempty"`

	// Slo Definition of an SLO
	Slo V1Slo `json:"slo"`
}

// V1RequestBasedMetricSli Definition of a request-based SLI based on metrics
type V1RequestBasedMetricSli struct {
	// GoodEvents Definition of a metric used in SLOs
	GoodEvents V1Metric `json:"goodEvents"`

	// TotalEvents Definition of a metric used in SLOs
	TotalEvents V1Metric `json:"totalEvents"`
}

// V1ResolveIncidentsRequest Request to resolve one or more incidents
type V1ResolveIncidentsRequest struct {
	// IncidentIds List of incident IDs to resolve
	IncidentIds []string `json:"incidentIds"`
}

// V1ResolveIncidentsResponse Response containing the updated incidents after resolution
type V1ResolveIncidentsResponse struct {
	// Incidents List of incidents after resolution
	Incidents []V1Incident `json:"incidents"`
}

// V1ResponseStatus Status of the response, including error code and message.
type V1ResponseStatus struct {
	Details *map[string]string `json:"details,omitempty"`
	Message *string            `json:"message,omitempty"`

	// StatusCode The canonical error codes for gRPC APIs.
	//
	//
	// Sometimes multiple error codes may apply.  Services should return
	// the most specific error code that applies.  For example, prefer
	// `OUT_OF_RANGE` over `FAILED_PRECONDITION` if both codes apply.
	// Similarly prefer `NOT_FOUND` or `ALREADY_EXISTS` over `FAILED_PRECONDITION`.
	//
	//  - OK: Not an error; returned on success.
	//
	// HTTP Mapping: 200 OK
	//  - CANCELLED: The operation was cancelled, typically by the caller.
	//
	// HTTP Mapping: 499 Client Closed Request
	//  - UNKNOWN: Unknown error.  For example, this error may be returned when
	// a `Status` value received from another address space belongs to
	// an error space that is not known in this address space.  Also
	// errors raised by APIs that do not return enough error information
	// may be converted to this error.
	//
	// HTTP Mapping: 500 Internal Server Error
	//  - INVALID_ARGUMENT: The client specified an invalid argument.  Note that this differs
	// from `FAILED_PRECONDITION`.  `INVALID_ARGUMENT` indicates arguments
	// that are problematic regardless of the state of the system
	// (e.g., a malformed file name).
	//
	// HTTP Mapping: 400 Bad Request
	//  - DEADLINE_EXCEEDED: The deadline expired before the operation could complete. For operations
	// that change the state of the system, this error may be returned
	// even if the operation has completed successfully.  For example, a
	// successful response from a server could have been delayed long
	// enough for the deadline to expire.
	//
	// HTTP Mapping: 504 Gateway Timeout
	//  - NOT_FOUND: Some requested entity (e.g., file or directory) was not found.
	//
	// Note to server developers: if a request is denied for an entire class
	// of users, such as gradual feature rollout or undocumented allowlist,
	// `NOT_FOUND` may be used. If a request is denied for some users within
	// a class of users, such as user-based access control, `PERMISSION_DENIED`
	// must be used.
	//
	// HTTP Mapping: 404 Not Found
	//  - ALREADY_EXISTS: The entity that a client attempted to create (e.g., file or directory)
	// already exists.
	//
	// HTTP Mapping: 409 Conflict
	//  - PERMISSION_DENIED: The caller does not have permission to execute the specified
	// operation. `PERMISSION_DENIED` must not be used for rejections
	// caused by exhausting some resource (use `RESOURCE_EXHAUSTED`
	// instead for those errors). `PERMISSION_DENIED` must not be
	// used if the caller can not be identified (use `UNAUTHENTICATED`
	// instead for those errors). This error code does not imply the
	// request is valid or the requested entity exists or satisfies
	// other pre-conditions.
	//
	// HTTP Mapping: 403 Forbidden
	//  - UNAUTHENTICATED: The request does not have valid authentication credentials for the
	// operation.
	//
	// HTTP Mapping: 401 Unauthorized
	//  - RESOURCE_EXHAUSTED: Some resource has been exhausted, perhaps a per-user quota, or
	// perhaps the entire file system is out of space.
	//
	// HTTP Mapping: 429 Too Many Requests
	//  - FAILED_PRECONDITION: The operation was rejected because the system is not in a state
	// required for the operation's execution.  For example, the directory
	// to be deleted is non-empty, an rmdir operation is applied to
	// a non-directory, etc.
	//
	// Service implementors can use the following guidelines to decide
	// between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`:
	//  (a) Use `UNAVAILABLE` if the client can retry just the failing call.
	//  (b) Use `ABORTED` if the client should retry at a higher level. For
	//      example, when a client-specified test-and-set fails, indicating the
	//      client should restart a read-modify-write sequence.
	//  (c) Use `FAILED_PRECONDITION` if the client should not retry until
	//      the system state has been explicitly fixed. For example, if an "rmdir"
	//      fails because the directory is non-empty, `FAILED_PRECONDITION`
	//      should be returned since the client should not retry unless
	//      the files are deleted from the directory.
	//
	// HTTP Mapping: 400 Bad Request
	//  - ABORTED: The operation was aborted, typically due to a concurrency issue such as
	// a sequencer check failure or transaction abort.
	//
	// See the guidelines above for deciding between `FAILED_PRECONDITION`,
	// `ABORTED`, and `UNAVAILABLE`.
	//
	// HTTP Mapping: 409 Conflict
	//  - OUT_OF_RANGE: The operation was attempted past the valid range.  E.g., seeking or
	// reading past end-of-file.
	//
	// Unlike `INVALID_ARGUMENT`, this error indicates a problem that may
	// be fixed if the system state changes. For example, a 32-bit file
	// system will generate `INVALID_ARGUMENT` if asked to read at an
	// offset that is not in the range [0,2^32-1], but it will generate
	// `OUT_OF_RANGE` if asked to read from an offset past the current
	// file size.
	//
	// There is a fair bit of overlap between `FAILED_PRECONDITION` and
	// `OUT_OF_RANGE`.  We recommend using `OUT_OF_RANGE` (the more specific
	// error) when it applies so that callers who are iterating through
	// a space can easily look for an `OUT_OF_RANGE` error to detect when
	// they are done.
	//
	// HTTP Mapping: 400 Bad Request
	//  - UNIMPLEMENTED: The operation is not implemented or is not supported/enabled in this
	// service.
	//
	// HTTP Mapping: 501 Not Implemented
	//  - INTERNAL: Internal errors.  This means that some invariants expected by the
	// underlying system have been broken.  This error code is reserved
	// for serious errors.
	//
	// HTTP Mapping: 500 Internal Server Error
	//  - UNAVAILABLE: The service is currently unavailable.  This is most likely a
	// transient condition, which can be corrected by retrying with
	// a backoff. Note that it is not always safe to retry
	// non-idempotent operations.
	//
	// See the guidelines above for deciding between `FAILED_PRECONDITION`,
	// `ABORTED`, and `UNAVAILABLE`.
	//
	// HTTP Mapping: 503 Service Unavailable
	//  - DATA_LOSS: Unrecoverable data loss or corruption.
	//
	// HTTP Mapping: 500 Internal Server Error
	StatusCode RpcCode `json:"statusCode"`
}

// V1RetentionUpdateElement defines model for v1RetentionUpdateElement.
type V1RetentionUpdateElement struct {
	Id   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// V1RevisionRef defines model for v1RevisionRef.
type V1RevisionRef struct {
	DescriptionMd *string `json:"descriptionMd,omitempty"`
	Version       *string `json:"version,omitempty"`
}

// V1Role / A group role. Each role has a collection of permissions associated with it. A group can have many roles.
type V1Role struct {
	Description *string   `json:"description,omitempty"`
	Name        *string   `json:"name,omitempty"`
	RoleId      *V1RoleId `json:"roleId,omitempty"`
}

// V1RoleId defines model for v1RoleId.
type V1RoleId struct {
	Id *int64 `json:"id,omitempty"`
}

// V1RuleGroup defines model for v1RuleGroup.
type V1RuleGroup struct {
	Creator       *string           `json:"creator,omitempty"`
	Description   *string           `json:"description,omitempty"`
	Enabled       *bool             `json:"enabled,omitempty"`
	Hidden        *bool             `json:"hidden,omitempty"`
	Id            *string           `json:"id,omitempty"`
	Name          *string           `json:"name,omitempty"`
	Order         *int64            `json:"order,omitempty"`
	RuleMatchers  *[]V1RuleMatcher  `json:"ruleMatchers,omitempty"`
	RuleSubgroups *[]V1RuleSubgroup `json:"ruleSubgroups,omitempty"`
}

// V1RuleGroupSetListing A listing of rule group sets.
type V1RuleGroupSetListing struct {
	Sets *[]V1OutRuleGroupSet `json:"sets,omitempty"`
}

// V1RuleGroupSetsUpdateBody A set of rule groups to update.
type V1RuleGroupSetsUpdateBody struct {
	Groups *[]V1InRuleGroup `json:"groups,omitempty"`
	Name   *string          `json:"name,omitempty"`
}

// V1RuleMatcher defines model for v1RuleMatcher.
type V1RuleMatcher struct {
	ApplicationName *V1ApplicationNameConstraint `json:"applicationName,omitempty"`
	Severity        *V1SeverityConstraint        `json:"severity,omitempty"`
	SubsystemName   *V1SubsystemNameConstraint   `json:"subsystemName,omitempty"`
}

// V1RuleParameters defines model for v1RuleParameters.
type V1RuleParameters struct {
	AllowParameters            *V1AllowParameters            `json:"allowParameters,omitempty"`
	BlockParameters            *V1BlockParameters            `json:"blockParameters,omitempty"`
	ExtractParameters          *V1ExtractParameters          `json:"extractParameters,omitempty"`
	ExtractTimestampParameters *V1ExtractTimestampParameters `json:"extractTimestampParameters,omitempty"`
	JsonExtractParameters      *V1JsonExtractParameters      `json:"jsonExtractParameters,omitempty"`
	JsonParseParameters        *V1JsonParseParameters        `json:"jsonParseParameters,omitempty"`
	JsonStringifyParameters    *V1JsonStringifyParameters    `json:"jsonStringifyParameters,omitempty"`
	ParseParameters            *V1ParseParameters            `json:"parseParameters,omitempty"`
	RemoveFieldsParameters     *V1RemoveFieldsParameters     `json:"removeFieldsParameters,omitempty"`
	ReplaceParameters          *V1ReplaceParameters          `json:"replaceParameters,omitempty"`
}

// V1RuleSubgroup defines model for v1RuleSubgroup.
type V1RuleSubgroup struct {
	Enabled *bool                   `json:"enabled,omitempty"`
	Id      *string                 `json:"id,omitempty"`
	Order   *int64                  `json:"order,omitempty"`
	Rules   *[]Coralogixrulesv1Rule `json:"rules,omitempty"`
}

// V1RuleTypeId defines model for v1RuleTypeId.
type V1RuleTypeId string

// V1RumVersionData defines model for v1RumVersionData.
type V1RumVersionData struct {
	SyncedAt *time.Time                 `json:"syncedAt,omitempty"`
	Versions *[]V1RumVersionDataVersion `json:"versions,omitempty"`
}

// V1RumVersionDataVersion defines model for v1RumVersionDataVersion.
type V1RumVersionDataVersion struct {
	LogMetadata       *RumVersionDataLogMetadata       `json:"logMetadata,omitempty"`
	SourceMapMetadata *RumVersionDataSourceMapMetadata `json:"sourceMapMetadata,omitempty"`
	Version           *string                          `json:"version,omitempty"`
}

// V1SaveContextualDataIntegrationRequest defines model for v1SaveContextualDataIntegrationRequest.
type V1SaveContextualDataIntegrationRequest struct {
	// Metadata This data structure represents the metadata of an integration.
	Metadata V1IntegrationMetadata `json:"metadata"`
}

// V1SaveContextualDataIntegrationResponse defines model for v1SaveContextualDataIntegrationResponse.
type V1SaveContextualDataIntegrationResponse struct {
	IntegrationId string `json:"integrationId"`
}

// V1SaveIntegrationRequest defines model for v1SaveIntegrationRequest.
type V1SaveIntegrationRequest struct {
	// Metadata This data structure represents the metadata of an integration.
	Metadata V1IntegrationMetadata `json:"metadata"`
}

// V1SaveIntegrationResponse defines model for v1SaveIntegrationResponse.
type V1SaveIntegrationResponse struct {
	IntegrationId string `json:"integrationId"`
}

// V1ScopeFilter defines model for v1ScopeFilter.
type V1ScopeFilter struct {
	// FilterType - FILTER_TYPE_STARTS_WITH: / Matches if string starts with filter
	//  - FILTER_TYPE_ENDS_WITH: / Matches if string ends with filter
	//  - FILTER_TYPE_CONTAINS: / Matches if string contains filter
	//  - FILTER_TYPE_EXACT: / Matches if string exactly matches filter
	FilterType *V1FilterType `json:"filterType,omitempty"`

	// Term / The filter term to use as a matching reference.
	Term *string `json:"term,omitempty"`
}

// V1ScopeFilters defines model for v1ScopeFilters.
type V1ScopeFilters struct {
	Applications *[]V1ScopeFilter `json:"applications,omitempty"`
	Subsystems   *[]V1ScopeFilter `json:"subsystems,omitempty"`
}

// V1ScopeId defines model for v1ScopeId.
type V1ScopeId struct {
	Id *int64 `json:"id,omitempty"`
}

// V1SearchCustomEnrichmentDataResponse defines model for v1SearchCustomEnrichmentDataResponse.
type V1SearchCustomEnrichmentDataResponse struct {
	CustomEnrichmentsData *[]V1CustomEnrichmentData `json:"customEnrichmentsData,omitempty"`
}

// V1SearchQuery defines model for v1SearchQuery.
type V1SearchQuery struct {
	Query string `json:"query"`
}

// V1SelectedFilters defines model for v1SelectedFilters.
type V1SelectedFilters struct {
	Filters *[]Coralogixapisviewsv1Filter `json:"filters,omitempty"`
}

// V1SendLogConfig defines model for v1SendLogConfig.
type V1SendLogConfig struct {
	Payload string `json:"payload"`
	Uuid    string `json:"uuid"`
}

// V1SetCustomPresetAsDefaultResponse defines model for v1SetCustomPresetAsDefaultResponse.
type V1SetCustomPresetAsDefaultResponse = map[string]interface{}

// V1SetPresetAsDefaultResponse defines model for v1SetPresetAsDefaultResponse.
type V1SetPresetAsDefaultResponse = map[string]interface{}

// V1SetTeamGroupScopeResponse Response message containing the ID of the newly created or updated scope for a team group
type V1SetTeamGroupScopeResponse struct {
	ScopeId *V1ScopeId `json:"scopeId,omitempty"`
}

// V1SeverityConstraint defines model for v1SeverityConstraint.
type V1SeverityConstraint struct {
	Value *V1SeverityConstraintValue `json:"value,omitempty"`
}

// V1SeverityConstraintValue defines model for v1SeverityConstraintValue.
type V1SeverityConstraintValue string

// V1SlackConfig defines model for v1SlackConfig.
type V1SlackConfig struct {
	Attachments *[]SlackConfigAttachment `json:"attachments,omitempty"`
	Digests     *[]SlackConfigDigest     `json:"digests,omitempty"`
}

// V1Slo Definition of an SLO
type V1Slo struct {
	CreateTime  *time.Time `json:"createTime,omitempty"`
	Creator     *string    `json:"creator,omitempty"`
	Description *string    `json:"description,omitempty"`

	// Grouping Definition of the SLO grouping fields
	Grouping *Slov1Grouping     `json:"grouping,omitempty"`
	Id       *string            `json:"id,omitempty"`
	Labels   *map[string]string `json:"labels,omitempty"`
	Name     string             `json:"name"`

	// RequestBasedMetricSli Definition of a request-based SLI based on metrics
	RequestBasedMetricSli *V1RequestBasedMetricSli `json:"requestBasedMetricSli,omitempty"`

	// Revision The revision of the slo, used to differentiate between different versions of the same SLO
	Revision                  *Slov1Revision  `json:"revision,omitempty"`
	SloTimeFrame              *V1SloTimeFrame `json:"sloTimeFrame,omitempty"`
	TargetThresholdPercentage float32         `json:"targetThresholdPercentage"`
	UpdateTime                *time.Time      `json:"updateTime,omitempty"`

	// WindowBasedMetricSli Definition of a window-based SLI based on metrics
	WindowBasedMetricSli *V1WindowBasedMetricSli `json:"windowBasedMetricSli,omitempty"`
}

// V1SloExecutionResponse Response for an executed SLO operation.
type V1SloExecutionResponse struct {
	// CreateSloResponse Response after creating a new SLO.
	CreateSloResponse *V1CreateSloResponse `json:"createSloResponse,omitempty"`

	// DeleteSloResponse Response after deleting an existing SLO.
	DeleteSloResponse *V1DeleteSloResponse `json:"deleteSloResponse,omitempty"`

	// ReplaceSloResponse Response after replacing an existing SLO.
	ReplaceSloResponse *V1ReplaceSloResponse `json:"replaceSloResponse,omitempty"`
}

// V1SloTimeFrame defines model for v1SloTimeFrame.
type V1SloTimeFrame string

// V1SpanRules defines model for v1SpanRules.
type V1SpanRules struct {
	ActionRule  *Coralogixquotav1Rule `json:"actionRule,omitempty"`
	ServiceRule *Coralogixquotav1Rule `json:"serviceRule,omitempty"`
	TagRules    *[]V1TagRule          `json:"tagRules,omitempty"`
}

// V1SubsystemNameConstraint defines model for v1SubsystemNameConstraint.
type V1SubsystemNameConstraint struct {
	Value *string `json:"value,omitempty"`
}

// V1SuspiciousIpType defines model for v1SuspiciousIpType.
type V1SuspiciousIpType = map[string]interface{}

// V1SyncRumDataRequest defines model for v1SyncRumDataRequest.
type V1SyncRumDataRequest struct {
	// Force The time between syncs is controlled by configuration.
	Force *bool `json:"force,omitempty"`
}

// V1SyncRumDataResponse defines model for v1SyncRumDataResponse.
type V1SyncRumDataResponse struct {
	SyncExecuted *bool     `json:"syncExecuted,omitempty"`
	SyncedAt     time.Time `json:"syncedAt"`
}

// V1TagRule Tag rule for a policy.
type V1TagRule struct {
	RuleTypeId V1RuleTypeId `json:"ruleTypeId"`
	TagName    string       `json:"tagName"`
	TagValue   string       `json:"tagValue"`
}

// V1TargetDomain defines model for v1TargetDomain.
type V1TargetDomain string

// V1TeamGroup defines model for v1TeamGroup.
type V1TeamGroup struct {
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	Description *string    `json:"description,omitempty"`

	// ExternalId / Group external identifier. Applies if team is externally defined.
	ExternalId *string `json:"externalId,omitempty"`

	// GroupId This data structure represents the information associated with a team group.
	GroupId *V1TeamGroupId `json:"groupId,omitempty"`

	// GroupOrigin / Group origin defines in which circumstances the group was created.
	//
	//  - GROUP_ORIGIN_BUILT_IN: / A built in group is defined by the system and users are not able to alter them.
	//  - GROUP_ORIGIN_USER_DEFINED: / User defined or custom role.
	GroupOrigin    *V1GroupOrigin `json:"groupOrigin,omitempty"`
	Name           *string        `json:"name,omitempty"`
	NextGenScopeId *string        `json:"nextGenScopeId,omitempty"`
	Roles          *[]V1Role      `json:"roles,omitempty"`

	// Scope / A group scope has a list of filters for subsystems and applications. Used to filter traffic based on user defined rules.
	Scope     *Coralogixpermissionsv1Scope  `json:"scope,omitempty"`
	TeamId    *Coralogixpermissionsv1TeamId `json:"teamId,omitempty"`
	UpdatedAt *time.Time                    `json:"updatedAt,omitempty"`
}

// V1TeamGroupId This data structure represents the information associated with a team group.
type V1TeamGroupId struct {
	Id *int64 `json:"id,omitempty"`
}

// V1TeamPermissionsMgmtServiceAddUsersToTeamGroupBody Request to assign additional users to an existing team group, granting them the group's roles and scope permissions.
type V1TeamPermissionsMgmtServiceAddUsersToTeamGroupBody struct {
	GroupId *map[string]interface{} `json:"groupId,omitempty"`
	UserIds *[]Permissionsv1UserId  `json:"userIds,omitempty"`
}

// V1TestConnectorConfigRequest Request to test a connector configuration
type V1TestConnectorConfigRequest struct {
	DeprecatedEntityType *string                                                `json:"deprecatedEntityType,omitempty"`
	EntityType           *CoralogixapisnotificationCenterEntityType             `json:"entityType,omitempty"`
	Fields               *[]CoralogixapisnotificationCenterConnectorConfigField `json:"fields,omitempty"`
	OutputSchemaId       *string                                                `json:"outputSchemaId,omitempty"`
	Type                 *NotificationCenterConnectorType                       `json:"type,omitempty"`
}

// V1TestConnectorConfigResponse defines model for v1TestConnectorConfigResponse.
type V1TestConnectorConfigResponse struct {
	Result *V1TestResult `json:"result,omitempty"`
}

// V1TestContextualDataIntegrationRequest defines model for v1TestContextualDataIntegrationRequest.
type V1TestContextualDataIntegrationRequest struct {
	// IntegrationData This data structure represents the metadata of an integration.
	IntegrationData V1IntegrationMetadata `json:"integrationData"`
	IntegrationId   *string               `json:"integrationId,omitempty"`
}

// V1TestContextualDataIntegrationResponse defines model for v1TestContextualDataIntegrationResponse.
type V1TestContextualDataIntegrationResponse struct {
	Result V1TestIntegrationResult `json:"result"`
}

// V1TestDestinationRequest defines model for v1TestDestinationRequest.
type V1TestDestinationRequest struct {
	ConnectorConfigFields *[]NotificationCenterTemplatedConnectorConfigField   `json:"connectorConfigFields,omitempty"`
	ConnectorId           *string                                              `json:"connectorId,omitempty"`
	ConnectorIdentifier   *NotificationCenterConnectorIdentifier               `json:"connectorIdentifier,omitempty"`
	DeprecatedConnectorId *string                                              `json:"deprecatedConnectorId,omitempty"`
	DeprecatedEntityType  *string                                              `json:"deprecatedEntityType,omitempty"`
	DeprecatedPresetId    *string                                              `json:"deprecatedPresetId,omitempty"`
	EntitySubType         *string                                              `json:"entitySubType,omitempty"`
	EntityType            *CoralogixapisnotificationCenterEntityType           `json:"entityType,omitempty"`
	MessageConfigFields   *[]CoralogixapisnotificationCenterMessageConfigField `json:"messageConfigFields,omitempty"`
	OutputSchemaId        *string                                              `json:"outputSchemaId,omitempty"`
	PresetId              *string                                              `json:"presetId,omitempty"`
	PresetIdentifier      *CoralogixapisnotificationCenterPresetIdentifier     `json:"presetIdentifier,omitempty"`
}

// V1TestDestinationResponse defines model for v1TestDestinationResponse.
type V1TestDestinationResponse struct {
	Result *V1TestResult `json:"result,omitempty"`
}

// V1TestExistingConnectorRequest defines model for v1TestExistingConnectorRequest.
type V1TestExistingConnectorRequest struct {
	ConnectorId           *string                                `json:"connectorId,omitempty"`
	ConnectorIdentifier   *NotificationCenterConnectorIdentifier `json:"connectorIdentifier,omitempty"`
	DeprecatedConnectorId *string                                `json:"deprecatedConnectorId,omitempty"`
	OutputSchemaId        *string                                `json:"outputSchemaId,omitempty"`
}

// V1TestExistingConnectorResponse defines model for v1TestExistingConnectorResponse.
type V1TestExistingConnectorResponse struct {
	Result *V1TestResult `json:"result,omitempty"`
}

// V1TestExistingOutgoingWebhookRequest defines model for v1TestExistingOutgoingWebhookRequest.
type V1TestExistingOutgoingWebhookRequest struct {
	Id string `json:"id"`
}

// V1TestExistingPresetRequest defines model for v1TestExistingPresetRequest.
type V1TestExistingPresetRequest struct {
	ConnectorId           *string                                          `json:"connectorId,omitempty"`
	ConnectorIdentifier   *NotificationCenterConnectorIdentifier           `json:"connectorIdentifier,omitempty"`
	DeprecatedConnectorId *string                                          `json:"deprecatedConnectorId,omitempty"`
	DeprecatedEntityType  *string                                          `json:"deprecatedEntityType,omitempty"`
	DeprecatedPresetId    *string                                          `json:"deprecatedPresetId,omitempty"`
	EntitySubType         *string                                          `json:"entitySubType,omitempty"`
	EntityType            *CoralogixapisnotificationCenterEntityType       `json:"entityType,omitempty"`
	PresetId              *string                                          `json:"presetId,omitempty"`
	PresetIdentifier      *CoralogixapisnotificationCenterPresetIdentifier `json:"presetIdentifier,omitempty"`
}

// V1TestExistingPresetResponse defines model for v1TestExistingPresetResponse.
type V1TestExistingPresetResponse struct {
	Result *V1TestResult `json:"result,omitempty"`
}

// V1TestExtensionRevisionRequest defines model for v1TestExtensionRevisionRequest.
type V1TestExtensionRevisionRequest struct {
	CleanupAfterTest *bool `json:"cleanupAfterTest,omitempty"`

	// ExtensionData Extension details for ingestion
	ExtensionData V1ExtensionData `json:"extensionData"`
}

// V1TestExtensionRevisionResponse defines model for v1TestExtensionRevisionResponse.
type V1TestExtensionRevisionResponse = map[string]interface{}

// V1TestIntegrationRequest defines model for v1TestIntegrationRequest.
type V1TestIntegrationRequest struct {
	// IntegrationData This data structure represents the metadata of an integration.
	IntegrationData V1IntegrationMetadata `json:"integrationData"`
	IntegrationId   *string               `json:"integrationId,omitempty"`
}

// V1TestIntegrationResponse defines model for v1TestIntegrationResponse.
type V1TestIntegrationResponse struct {
	Result V1TestIntegrationResult `json:"result"`
}

// V1TestIntegrationResult defines model for v1TestIntegrationResult.
type V1TestIntegrationResult struct {
	Failure *V1TestIntegrationResultFailure `json:"failure,omitempty"`
	Success *V1TestIntegrationResultSuccess `json:"success,omitempty"`
}

// V1TestIntegrationResultFailure defines model for v1TestIntegrationResultFailure.
type V1TestIntegrationResultFailure struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

// V1TestIntegrationResultSuccess defines model for v1TestIntegrationResultSuccess.
type V1TestIntegrationResultSuccess = map[string]interface{}

// V1TestOutgoingWebhookRequest defines model for v1TestOutgoingWebhookRequest.
type V1TestOutgoingWebhookRequest struct {
	Data V1OutgoingWebhookInputData `json:"data"`
}

// V1TestOutgoingWebhookResponse defines model for v1TestOutgoingWebhookResponse.
type V1TestOutgoingWebhookResponse struct {
	Failure *V1TestOutgoingWebhookResponseFailure `json:"failure,omitempty"`
	Success *V1TestOutgoingWebhookResponseSuccess `json:"success,omitempty"`
}

// V1TestOutgoingWebhookResponseFailure defines model for v1TestOutgoingWebhookResponseFailure.
type V1TestOutgoingWebhookResponseFailure struct {
	DisplayMessage string `json:"displayMessage"`
	ErrorMessage   string `json:"errorMessage"`
	StatusCode     *int64 `json:"statusCode,omitempty"`
}

// V1TestOutgoingWebhookResponseSuccess defines model for v1TestOutgoingWebhookResponseSuccess.
type V1TestOutgoingWebhookResponseSuccess = map[string]interface{}

// V1TestPoliciesResult Result of testing policies.
type V1TestPoliciesResult struct {
	Matched bool `json:"matched"`

	// MetaFieldsValues Values for log meta fields.
	MetaFieldsValues V1LogMetaFieldsValues `json:"metaFieldsValues"`

	// Policy A policy is a set of rules that define the behavior of the Coralogix system for a specific company.
	Policy V1Policy `json:"policy"`
}

// V1TestPresetConfigRequest defines model for v1TestPresetConfigRequest.
type V1TestPresetConfigRequest struct {
	ConfigOverrides       *[]NotificationCenterConfigOverrides             `json:"configOverrides,omitempty"`
	ConnectorId           *string                                          `json:"connectorId,omitempty"`
	ConnectorIdentifier   *NotificationCenterConnectorIdentifier           `json:"connectorIdentifier,omitempty"`
	DeprecatedConnectorId *string                                          `json:"deprecatedConnectorId,omitempty"`
	DeprecatedEntityType  *string                                          `json:"deprecatedEntityType,omitempty"`
	DeprecatedPresetId    *string                                          `json:"deprecatedPresetId,omitempty"`
	EntitySubType         *string                                          `json:"entitySubType,omitempty"`
	EntityType            *CoralogixapisnotificationCenterEntityType       `json:"entityType,omitempty"`
	ParentPresetId        *string                                          `json:"parentPresetId,omitempty"`
	PresetIdentifier      *CoralogixapisnotificationCenterPresetIdentifier `json:"presetIdentifier,omitempty"`
}

// V1TestPresetConfigResponse defines model for v1TestPresetConfigResponse.
type V1TestPresetConfigResponse struct {
	Result *V1TestResult `json:"result,omitempty"`
}

// V1TestResult defines model for v1TestResult.
type V1TestResult struct {
	Failure *V1TestResultFailure `json:"failure,omitempty"`
	Success *V1TestResultSuccess `json:"success,omitempty"`
}

// V1TestResultFailure defines model for v1TestResultFailure.
type V1TestResultFailure struct {
	Message    *string `json:"message,omitempty"`
	StatusCode *int64  `json:"statusCode,omitempty"`
}

// V1TestResultSuccess defines model for v1TestResultSuccess.
type V1TestResultSuccess = map[string]interface{}

// V1TestRoutingConditionValidRequest Request to check that provided routing condition is valid
type V1TestRoutingConditionValidRequest struct {
	DeprecatedEntityType *string                                    `json:"deprecatedEntityType,omitempty"`
	EntityType           *CoralogixapisnotificationCenterEntityType `json:"entityType,omitempty"`
	Template             *string                                    `json:"template,omitempty"`
}

// V1TestRoutingConditionValidResponse Response which specifies condition evaluation result or error
type V1TestRoutingConditionValidResponse struct {
	Failure *V1TestRoutingConditionValidResponseFailure `json:"failure,omitempty"`
	Success *V1TestRoutingConditionValidResponseSuccess `json:"success,omitempty"`
}

// V1TestRoutingConditionValidResponseFailure defines model for v1TestRoutingConditionValidResponseFailure.
type V1TestRoutingConditionValidResponseFailure struct {
	Message *string `json:"message,omitempty"`
}

// V1TestRoutingConditionValidResponseSuccess defines model for v1TestRoutingConditionValidResponseSuccess.
type V1TestRoutingConditionValidResponseSuccess struct {
	Result *bool `json:"result,omitempty"`
}

// V1TestTemplateRenderRequest defines model for v1TestTemplateRenderRequest.
type V1TestTemplateRenderRequest struct {
	DeprecatedEntityType *string                                    `json:"deprecatedEntityType,omitempty"`
	EntitySubType        *string                                    `json:"entitySubType,omitempty"`
	EntityType           *CoralogixapisnotificationCenterEntityType `json:"entityType,omitempty"`
	Template             *string                                    `json:"template,omitempty"`
}

// V1TestTemplateRenderResponse defines model for v1TestTemplateRenderResponse.
type V1TestTemplateRenderResponse struct {
	Result *V1TestTemplateRenderResult `json:"result,omitempty"`
}

// V1TestTemplateRenderResult defines model for v1TestTemplateRenderResult.
type V1TestTemplateRenderResult struct {
	Failure *V1TestTemplateRenderResultFailure `json:"failure,omitempty"`
	Success *V1TestTemplateRenderResultSuccess `json:"success,omitempty"`
}

// V1TestTemplateRenderResultFailure defines model for v1TestTemplateRenderResultFailure.
type V1TestTemplateRenderResultFailure struct {
	Message *string                                `json:"message,omitempty"`
	Reason  *TestTemplateRenderResultFailureReason `json:"reason,omitempty"`
}

// V1TestTemplateRenderResultSuccess defines model for v1TestTemplateRenderResultSuccess.
type V1TestTemplateRenderResultSuccess struct {
	RenderedValue *string `json:"renderedValue,omitempty"`
}

// V1TimeSelection defines model for v1TimeSelection.
type V1TimeSelection struct {
	CustomSelection *V1CustomTimeSelection `json:"customSelection,omitempty"`
	QuickSelection  *V1QuickTimeSelection  `json:"quickSelection,omitempty"`
}

// V1TogglePolicyRequest This data structue is used to toggle a policy by its ID.
type V1TogglePolicyRequest struct {
	Enabled bool   `json:"enabled"`
	Id      string `json:"id"`
}

// V1TogglePolicyResponse This data structue is obtained when toggling a policy by its ID.
type V1TogglePolicyResponse struct {
	Enabled bool   `json:"enabled"`
	Id      string `json:"id"`
}

// V1UUID defines model for v1UUID.
type V1UUID struct {
	Value *string `json:"value,omitempty"`
}

// V1UnassignIncidentsRequest Request to remove assignments from one or more incidents
type V1UnassignIncidentsRequest struct {
	// IncidentIds List of incident IDs to unassign
	IncidentIds []string `json:"incidentIds"`
}

// V1UnassignIncidentsResponse Response containing the updated incidents after unassignment
type V1UnassignIncidentsResponse struct {
	// Incidents List of incidents after unassignment
	Incidents []V1Incident `json:"incidents"`
}

// V1UndeployExtensionRequest defines model for v1UndeployExtensionRequest.
type V1UndeployExtensionRequest struct {
	Id                 string    `json:"id"`
	KeptExtensionItems *[]string `json:"keptExtensionItems,omitempty"`
}

// V1UndeployExtensionResponse defines model for v1UndeployExtensionResponse.
type V1UndeployExtensionResponse struct {
	ExtensionDeployment *V1ExtensionDeployment                 `json:"extensionDeployment,omitempty"`
	FailedItems         *[]UndeployExtensionResponseFailedItem `json:"failedItems,omitempty"`
}

// V1UpdateContextualDataIntegrationRequest defines model for v1UpdateContextualDataIntegrationRequest.
type V1UpdateContextualDataIntegrationRequest struct {
	IntegrationId string `json:"integrationId"`

	// Metadata This data structure represents the metadata of an integration.
	Metadata V1IntegrationMetadata `json:"metadata"`
}

// V1UpdateContextualDataIntegrationResponse defines model for v1UpdateContextualDataIntegrationResponse.
type V1UpdateContextualDataIntegrationResponse = map[string]interface{}

// V1UpdateCustomEnrichmentRequest This request data structure is used to update a custom enrichment
type V1UpdateCustomEnrichmentRequest struct {
	CustomEnrichmentId int64  `json:"customEnrichmentId"`
	Description        string `json:"description"`

	// File This data structure represents a file
	File V1File `json:"file"`
	Name string `json:"name"`
}

// V1UpdateCustomEnrichmentResponse This response data structure is obtained when a custom enrichment is updated
type V1UpdateCustomEnrichmentResponse struct {
	CustomEnrichment V1CustomEnrichment `json:"customEnrichment"`
	Message          *string            `json:"message,omitempty"`
}

// V1UpdateExtensionRequest defines model for v1UpdateExtensionRequest.
type V1UpdateExtensionRequest struct {
	Applications        *[]string              `json:"applications,omitempty"`
	ExtensionDeployment *V1ExtensionDeployment `json:"extensionDeployment,omitempty"`
	Id                  string                 `json:"id"`
	ItemIds             []string               `json:"itemIds"`
	Subsystems          *[]string              `json:"subsystems,omitempty"`
	Version             string                 `json:"version"`
}

// V1UpdateExtensionResponse defines model for v1UpdateExtensionResponse.
type V1UpdateExtensionResponse struct {
	ExtensionDeployment V1ExtensionDeployment `json:"extensionDeployment"`
}

// V1UpdateIntegrationRequest This data structure represents a list of outgoing webhook types.
type V1UpdateIntegrationRequest struct {
	Id string `json:"id"`

	// Metadata This data structure represents the metadata of an integration.
	Metadata V1IntegrationMetadata `json:"metadata"`
}

// V1UpdateIntegrationResponse defines model for v1UpdateIntegrationResponse.
type V1UpdateIntegrationResponse = map[string]interface{}

// V1UpdateOutgoingWebhookRequest defines model for v1UpdateOutgoingWebhookRequest.
type V1UpdateOutgoingWebhookRequest struct {
	Data V1OutgoingWebhookInputData `json:"data"`
	Id   string                     `json:"id"`
}

// V1UpdateOutgoingWebhookResponse defines model for v1UpdateOutgoingWebhookResponse.
type V1UpdateOutgoingWebhookResponse = map[string]interface{}

// V1UpdatePolicyRequest This data structue is used to update an existing policy.
type V1UpdatePolicyRequest struct {
	ApplicationRule  *Coralogixquotav1Rule `json:"applicationRule,omitempty"`
	ArchiveRetention *V1ArchiveRetention   `json:"archiveRetention,omitempty"`
	Description      *string               `json:"description,omitempty"`
	Enabled          *bool                 `json:"enabled,omitempty"`
	Id               string                `json:"id"`

	// LogRules Log rules for a policy.
	LogRules      *V1LogRules               `json:"logRules,omitempty"`
	Name          *string                   `json:"name,omitempty"`
	Priority      *Coralogixquotav1Priority `json:"priority,omitempty"`
	SpanRules     *V1SpanRules              `json:"spanRules,omitempty"`
	SubsystemRule *Coralogixquotav1Rule     `json:"subsystemRule,omitempty"`
}

// V1UpdatePolicyResponse This data structue is obtained when updating a policy.
type V1UpdatePolicyResponse struct {
	// Policy A policy is a set of rules that define the behavior of the Coralogix system for a specific company.
	Policy V1Policy `json:"policy"`
}

// V1UpdateRetentionsRequest This data structure is used to update retentions
type V1UpdateRetentionsRequest struct {
	RetentionUpdateElements []V1RetentionUpdateElement `json:"retentionUpdateElements"`
}

// V1UpdateRetentionsResponse This data structure is obtained after updating retentions
type V1UpdateRetentionsResponse struct {
	Retentions []Coralogixarchivev1Retention `json:"retentions"`
}

// V1UpdateRuleGroupResponse defines model for v1UpdateRuleGroupResponse.
type V1UpdateRuleGroupResponse struct {
	RuleGroup *V1RuleGroup `json:"ruleGroup,omitempty"`
}

// V1UpdateScopeRequest This data structure represents a request to update a scope
type V1UpdateScopeRequest struct {
	DefaultExpression string                        `json:"defaultExpression"`
	Description       *string                       `json:"description,omitempty"`
	DisplayName       string                        `json:"displayName"`
	Filters           []Coralogixapisscopesv1Filter `json:"filters"`
	Id                string                        `json:"id"`
}

// V1UpdateScopeResponse This data structure represents a response to update a scope
type V1UpdateScopeResponse struct {
	// Scope This data structure represents a scope
	Scope Coralogixapisscopesv1Scope `json:"scope"`
}

// V1UpdateTeamGroupRequest Request to modify an existing team group's details, including its name, description, roles, users, and scope settings.
type V1UpdateTeamGroupRequest struct {
	Description *string `json:"description,omitempty"`
	ExternalId  *string `json:"externalId,omitempty"`

	// GroupId This data structure represents the information associated with a team group.
	GroupId        *V1TeamGroupId `json:"groupId,omitempty"`
	Name           *string        `json:"name,omitempty"`
	NextGenScopeId *string        `json:"nextGenScopeId,omitempty"`

	// RoleUpdates This data structure represents the information associated with an API key.
	RoleUpdates  *UpdateTeamGroupRequestRoleUpdates `json:"roleUpdates,omitempty"`
	ScopeFilters *V1ScopeFilters                    `json:"scopeFilters,omitempty"`

	// UserUpdates This data structure represents the information associated with an API key.
	UserUpdates *UpdateTeamGroupRequestUserUpdates `json:"userUpdates,omitempty"`
}

// V1UpdateTeamGroupResponse Response confirming the successful update of a team group's configuration.
type V1UpdateTeamGroupResponse = map[string]interface{}

// V1UpsertIncidentStatePayload defines model for v1UpsertIncidentStatePayload.
type V1UpsertIncidentStatePayload struct {
	CxEventKey *string `json:"cxEventKey,omitempty"`
}

// V1UpsertIncidentStateType defines model for v1UpsertIncidentStateType.
type V1UpsertIncidentStateType string

// V1UserDetails defines model for v1UserDetails.
type V1UserDetails struct {
	UserId string `json:"userId"`
}

// V1UserStatus - USER_STATUS_ACTIVE: / User is active
//   - USER_STATUS_INACTIVE: / User is inactive
type V1UserStatus string

// V1ViewFolder View folder.
type V1ViewFolder struct {
	// Id Unique identifier for folders
	Id *string `json:"id,omitempty"`

	// Name Folder name
	Name string `json:"name"`
}

// V1WebhookType defines model for v1WebhookType.
type V1WebhookType string

// V1WindowBasedMetricSli Definition of a window-based SLI based on metrics
type V1WindowBasedMetricSli struct {
	ComparisonOperator V1ComparisonOperator `json:"comparisonOperator"`

	// Query Definition of a metric used in SLOs
	Query     V1Metric          `json:"query"`
	Threshold float32           `json:"threshold"`
	Window    V1WindowSloWindow `json:"window"`
}

// V1WindowSloWindow defines model for v1WindowSloWindow.
type V1WindowSloWindow string

// V1astAnnotation defines model for v1astAnnotation.
type V1astAnnotation struct {
	Enabled *bool                `json:"enabled,omitempty"`
	Id      *string              `json:"id,omitempty"`
	Name    *string              `json:"name,omitempty"`
	Source  *AstAnnotationSource `json:"source,omitempty"`
}

// V1astFilter This data structure represents the configuration for filtering data on the dashboard.
type V1astFilter struct {
	// Collapsed Indicates if the filter's UI representation should be collapsed or expanded.
	Collapsed *bool `json:"collapsed,omitempty"`

	// Enabled Indicates if the filter is currently enabled or not.
	Enabled *bool `json:"enabled,omitempty"`

	// Source Defines the type of data the filter applies to.
	Source *AstFilterSource `json:"source,omitempty"`
}

// V1commonDataprimeQuery defines model for v1commonDataprimeQuery.
type V1commonDataprimeQuery struct {
	Text *string `json:"text,omitempty"`
}

// V1commonDatasetScope defines model for v1commonDatasetScope.
type V1commonDatasetScope string

// V2ActionExecutionRequest defines model for v2ActionExecutionRequest.
type V2ActionExecutionRequest struct {
	Create  *V2CreateActionRequest  `json:"create,omitempty"`
	Delete  *V2DeleteActionRequest  `json:"delete,omitempty"`
	Replace *V2ReplaceActionRequest `json:"replace,omitempty"`
}

// V2ActionExecutionResponse defines model for v2ActionExecutionResponse.
type V2ActionExecutionResponse struct {
	Create  *V2CreateActionResponse  `json:"create,omitempty"`
	Delete  *V2DeleteActionResponse  `json:"delete,omitempty"`
	Replace *V2ReplaceActionResponse `json:"replace,omitempty"`
}

// V2ArchiveSpec This data structure contains metadata about the archive.
type V2ArchiveSpec struct {
	ArchivingFormatId *string `json:"archivingFormatId,omitempty"`
	EnableTags        *bool   `json:"enableTags,omitempty"`
	IsActive          *bool   `json:"isActive,omitempty"`
}

// V2AtomicBatchExecuteActionsRequest defines model for v2AtomicBatchExecuteActionsRequest.
type V2AtomicBatchExecuteActionsRequest struct {
	Requests *[]V2ActionExecutionRequest `json:"requests,omitempty"`
}

// V2AtomicBatchExecuteActionsResponse defines model for v2AtomicBatchExecuteActionsResponse.
type V2AtomicBatchExecuteActionsResponse struct {
	MatchingResponses *[]V2ActionExecutionResponse `json:"matchingResponses,omitempty"`
}

// V2AtomicBatchExecuteE2MRequest defines model for v2AtomicBatchExecuteE2MRequest.
type V2AtomicBatchExecuteE2MRequest struct {
	Requests *[]V2E2MExecutionRequest `json:"requests,omitempty"`
}

// V2AtomicBatchExecuteE2MResponse defines model for v2AtomicBatchExecuteE2MResponse.
type V2AtomicBatchExecuteE2MResponse struct {
	MatchingResponses *[]V2E2MExecutionResponse `json:"matchingResponses,omitempty"`
}

// V2CreateActionRequest defines model for v2CreateActionRequest.
type V2CreateActionRequest struct {
	ApplicationNames *[]string            `json:"applicationNames,omitempty"`
	IsPrivate        *bool                `json:"isPrivate,omitempty"`
	Name             *string              `json:"name,omitempty"`
	SourceType       *Actionsv2SourceType `json:"sourceType,omitempty"`
	SubsystemNames   *[]string            `json:"subsystemNames,omitempty"`
	Url              *string              `json:"url,omitempty"`
}

// V2CreateActionResponse defines model for v2CreateActionResponse.
type V2CreateActionResponse struct {
	Action *Actionsv2Action `json:"action,omitempty"`
}

// V2CreateE2MRequest This is used to create a new event to metric definition
type V2CreateE2MRequest struct {
	// E2m This data structure is used to create a new event to metric definition
	E2m V2E2MCreateParams `json:"e2m"`
}

// V2CreateE2MResponse defines model for v2CreateE2MResponse.
type V2CreateE2MResponse struct {
	// E2m This data structure represents an Event to Metrics (E2M) object.
	E2m *V2E2M `json:"e2m,omitempty"`
}

// V2DataUsageEntry This data structure represents a data usage entry.
type V2DataUsageEntry struct {
	Dimensions *[]V2Dimension `json:"dimensions,omitempty"`
	SizeGb     *float32       `json:"sizeGb,omitempty"`
	Timestamp  *time.Time     `json:"timestamp,omitempty"`
	Units      *float32       `json:"units,omitempty"`
}

// V2DeleteActionRequest defines model for v2DeleteActionRequest.
type V2DeleteActionRequest struct {
	Id *string `json:"id,omitempty"`
}

// V2DeleteActionResponse defines model for v2DeleteActionResponse.
type V2DeleteActionResponse = map[string]interface{}

// V2DeleteE2MRequest This data structure is used to delete an existing event to metric definition
type V2DeleteE2MRequest struct {
	Id string `json:"id"`
}

// V2DeleteE2MResponse This data structure is obtained when deleting an existing event to metric definition
type V2DeleteE2MResponse struct {
	Id string `json:"id"`
}

// V2DetailedDailyEvaluationTokens defines model for v2DetailedDailyEvaluationTokens.
type V2DetailedDailyEvaluationTokens struct {
	Evaluations *[]V2Evaluation `json:"evaluations,omitempty"`
	StatsDate   *time.Time      `json:"statsDate,omitempty"`
	TotalTokens *V2Token        `json:"totalTokens,omitempty"`
}

// V2DetailedDailyProcessedGbs defines model for v2DetailedDailyProcessedGbs.
type V2DetailedDailyProcessedGbs struct {
	BlockedGbs             *Datausagev2GB `json:"blockedGbs,omitempty"`
	BlockedMetricsGbs      *Datausagev2GB `json:"blockedMetricsGbs,omitempty"`
	CpuProfilesGbs         *Datausagev2GB `json:"cpuProfilesGbs,omitempty"`
	HighLogsGbs            *Datausagev2GB `json:"highLogsGbs,omitempty"`
	HighMetricsGbs         *Datausagev2GB `json:"highMetricsGbs,omitempty"`
	HighTracingGbs         *Datausagev2GB `json:"highTracingGbs,omitempty"`
	LowLogsGbs             *Datausagev2GB `json:"lowLogsGbs,omitempty"`
	LowSessionRecordingGbs *Datausagev2GB `json:"lowSessionRecordingGbs,omitempty"`
	LowTracingGbs          *Datausagev2GB `json:"lowTracingGbs,omitempty"`
	MediumLogsGbs          *Datausagev2GB `json:"mediumLogsGbs,omitempty"`
	MediumTracingGbs       *Datausagev2GB `json:"mediumTracingGbs,omitempty"`
	StatsDate              *time.Time     `json:"statsDate,omitempty"`
	TotalGbs               *Datausagev2GB `json:"totalGbs,omitempty"`
}

// V2DetailedDailyUnits defines model for v2DetailedDailyUnits.
type V2DetailedDailyUnits struct {
	BlockedMetricsUnits      *Datausagev2Unit `json:"blockedMetricsUnits,omitempty"`
	BlockedUnits             *Datausagev2Unit `json:"blockedUnits,omitempty"`
	CpuProfilesUnits         *Datausagev2Unit `json:"cpuProfilesUnits,omitempty"`
	EvaluationUnits          *Datausagev2Unit `json:"evaluationUnits,omitempty"`
	HighLogsUnits            *Datausagev2Unit `json:"highLogsUnits,omitempty"`
	HighMetricsUnits         *Datausagev2Unit `json:"highMetricsUnits,omitempty"`
	HighTracingUnits         *Datausagev2Unit `json:"highTracingUnits,omitempty"`
	LowLogsUnits             *Datausagev2Unit `json:"lowLogsUnits,omitempty"`
	LowSessionRecordingUnits *Datausagev2Unit `json:"lowSessionRecordingUnits,omitempty"`
	LowTracingUnits          *Datausagev2Unit `json:"lowTracingUnits,omitempty"`
	MediumLogsUnits          *Datausagev2Unit `json:"mediumLogsUnits,omitempty"`
	MediumTracingUnits       *Datausagev2Unit `json:"mediumTracingUnits,omitempty"`
	StatsDate                *time.Time       `json:"statsDate,omitempty"`
	TotalUnits               *Datausagev2Unit `json:"totalUnits,omitempty"`
}

// V2Dimension defines model for v2Dimension.
type V2Dimension struct {
	// GenericDimension This data structure represents a generic dimension.
	GenericDimension *V2GenericDimension           `json:"genericDimension,omitempty"`
	Pillar           *Datausagev2Pillar            `json:"pillar,omitempty"`
	Priority         *Datausagev2Priority          `json:"priority,omitempty"`
	Severity         *Coralogixdatausagev2Severity `json:"severity,omitempty"`
	Tier             *Datausagev2TcoTier           `json:"tier,omitempty"`
}

// V2E2M This data structure represents an Event to Metrics (E2M) object.
type V2E2M struct {
	CreateTime  *string             `json:"createTime,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *string `json:"id,omitempty"`
	IsInternal  *bool               `json:"isInternal,omitempty"`

	// LogsQuery This data structure represents a query for logs.
	LogsQuery    *Logs2metricsv2LogsQuery       `json:"logsQuery,omitempty"`
	MetricFields *[]Events2metricsv2MetricField `json:"metricFields,omitempty"`
	MetricLabels *[]V2MetricLabel               `json:"metricLabels,omitempty"`
	Name         string                         `json:"name"`

	// Permutations This data structure represents the limit of events2metrics permutations and if the limit was exceeded
	Permutations *V2E2MPermutations `json:"permutations,omitempty"`

	// SpansQuery This data structure represents a query for spans.
	SpansQuery *Spans2metricsv2SpansQuery `json:"spansQuery,omitempty"`
	Type       V2E2MType                  `json:"type"`
	UpdateTime *string                    `json:"updateTime,omitempty"`
}

// V2E2MAggHistogram This data structure represents the e2m aggregate histogram
type V2E2MAggHistogram struct {
	Buckets *[]float32 `json:"buckets,omitempty"`
}

// V2E2MAggSamples This data structure represents the e2m aggregate samples
type V2E2MAggSamples struct {
	SampleType *E2MAggSamplesSampleType `json:"sampleType,omitempty"`
}

// V2E2MCreateParams This data structure is used to create a new event to metric definition
type V2E2MCreateParams struct {
	Description *string `json:"description,omitempty"`

	// LogsQuery This data structure represents a query for logs.
	LogsQuery         *Logs2metricsv2LogsQuery       `json:"logsQuery,omitempty"`
	MetricFields      *[]Events2metricsv2MetricField `json:"metricFields,omitempty"`
	MetricLabels      *[]V2MetricLabel               `json:"metricLabels,omitempty"`
	Name              string                         `json:"name"`
	PermutationsLimit *int32                         `json:"permutationsLimit,omitempty"`

	// SpansQuery This data structure represents a query for spans.
	SpansQuery *Spans2metricsv2SpansQuery `json:"spansQuery,omitempty"`
	Type       *V2E2MType                 `json:"type,omitempty"`
}

// V2E2MExecutionRequest defines model for v2E2MExecutionRequest.
type V2E2MExecutionRequest struct {
	// Create This is used to create a new event to metric definition
	Create *V2CreateE2MRequest `json:"create,omitempty"`

	// Delete This data structure is used to delete an existing event to metric definition
	Delete *V2DeleteE2MRequest `json:"delete,omitempty"`

	// Replace This data structure is used to replace an existing event to metric definition
	Replace *V2ReplaceE2MRequest `json:"replace,omitempty"`
}

// V2E2MExecutionResponse defines model for v2E2MExecutionResponse.
type V2E2MExecutionResponse struct {
	Created *V2CreateE2MResponse `json:"created,omitempty"`

	// Deleted This data structure is obtained when deleting an existing event to metric definition
	Deleted *V2DeleteE2MResponse `json:"deleted,omitempty"`

	// Replaced This data structure is obtained when replacing an existing event to metric definition
	Replaced *V2ReplaceE2MResponse `json:"replaced,omitempty"`
}

// V2E2MPermutations This data structure represents the limit of events2metrics permutations and if the limit was exceeded
type V2E2MPermutations struct {
	HasExceededLimit bool  `json:"hasExceededLimit"`
	Limit            int32 `json:"limit"`
}

// V2E2MType defines model for v2E2MType.
type V2E2MType string

// V2Evaluation defines model for v2Evaluation.
type V2Evaluation struct {
	EvaluationTokens *V2Token `json:"evaluationTokens,omitempty"`
	EvaluatorName    *string  `json:"evaluatorName,omitempty"`
}

// V2GenericDimension This data structure represents a generic dimension.
type V2GenericDimension struct {
	Key   *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}

// V2GetActionResponse defines model for v2GetActionResponse.
type V2GetActionResponse struct {
	Action *Actionsv2Action `json:"action,omitempty"`
}

// V2GetConfigurationResponse This data structure is obtained as a response to a request to retrieve the configuration of a SAML service provider and identity provider
type V2GetConfigurationResponse struct {
	IdpDetails *GetConfigurationResponseIDPDetails `json:"idpDetails,omitempty"`

	// IdpParameters This data structure represents a set of SAML identity provider parameters
	IdpParameters V2IDPParameters `json:"idpParameters"`

	// SpParameters This data structure represents the parameters of a SAML service provider
	SpParameters V2SPParameters `json:"spParameters"`
	TeamId       int64          `json:"teamId"`
}

// V2GetDailyUsageEvaluationTokensRequest defines model for v2GetDailyUsageEvaluationTokensRequest.
type V2GetDailyUsageEvaluationTokensRequest struct {
	// DateRange This data structure represents a date range.
	DateRange *Datausagev2DateRange `json:"dateRange,omitempty"`
	Range     *Datausagev2Range     `json:"range,omitempty"`
}

// V2GetDailyUsageEvaluationTokensResponse defines model for v2GetDailyUsageEvaluationTokensResponse.
type V2GetDailyUsageEvaluationTokensResponse struct {
	Tokens *[]V2DetailedDailyEvaluationTokens `json:"tokens,omitempty"`
}

// V2GetDailyUsageProcessedGbsRequest defines model for v2GetDailyUsageProcessedGbsRequest.
type V2GetDailyUsageProcessedGbsRequest struct {
	// DateRange This data structure represents a date range.
	DateRange *Datausagev2DateRange `json:"dateRange,omitempty"`
	Range     *Datausagev2Range     `json:"range,omitempty"`
}

// V2GetDailyUsageProcessedGbsResponse defines model for v2GetDailyUsageProcessedGbsResponse.
type V2GetDailyUsageProcessedGbsResponse struct {
	Gbs *[]V2DetailedDailyProcessedGbs `json:"gbs,omitempty"`
}

// V2GetDailyUsageUnitsRequest defines model for v2GetDailyUsageUnitsRequest.
type V2GetDailyUsageUnitsRequest struct {
	// DateRange This data structure represents a date range.
	DateRange *Datausagev2DateRange `json:"dateRange,omitempty"`
	Range     *Datausagev2Range     `json:"range,omitempty"`
}

// V2GetDailyUsageUnitsResponse defines model for v2GetDailyUsageUnitsResponse.
type V2GetDailyUsageUnitsResponse struct {
	Units *[]V2DetailedDailyUnits `json:"units,omitempty"`
}

// V2GetDataUsageMetricsExportStatusResponse This data structure is used to return data usage metrics export status.
type V2GetDataUsageMetricsExportStatusResponse struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// V2GetDataUsageResponse This data structure is used to return data usage.
type V2GetDataUsageResponse struct {
	Entries *[]V2DataUsageEntry `json:"entries,omitempty"`
}

// V2GetE2MResponse This data structure is obtained when retrieving an existing event to metric definition
type V2GetE2MResponse struct {
	// E2m This data structure represents an Event to Metrics (E2M) object.
	E2m V2E2M `json:"e2m"`
}

// V2GetLimitsResponse defines model for v2GetLimitsResponse.
type V2GetLimitsResponse struct {
	CompanyId         *string                      `json:"companyId,omitempty"`
	LabelsLimit       *int32                       `json:"labelsLimit,omitempty"`
	MetricsLimit      *GetLimitsResponseLimitUsage `json:"metricsLimit,omitempty"`
	PermutationsLimit *GetLimitsResponseLimitUsage `json:"permutationsLimit,omitempty"`
}

// V2GetLogsCountResponse This data structure is used to return logs count.
type V2GetLogsCountResponse struct {
	LogsCount *[]V2LogsCount `json:"logsCount,omitempty"`
}

// V2GetSPParametersResponse This data structure is obtained as a response to a request to retrieve the parameters of a SAML service provider
type V2GetSPParametersResponse struct {
	// Params This data structure represents the parameters of a SAML service provider
	Params V2SPParameters `json:"params"`
}

// V2GetSpansCountResponse This data structure is used to return spans count.
type V2GetSpansCountResponse struct {
	SpansCount *[]V2SpansCount `json:"spansCount,omitempty"`
}

// V2GetTargetResponse This data structure is used to retrieve a storage target for logs.
type V2GetTargetResponse struct {
	// Target This data structure represents a target to archive logs.
	Target V2Target `json:"target"`
}

// V2IBMCosTargetSpec This data structure represents an IBM COS target.
type V2IBMCosTargetSpec struct {
	BucketCrn  string           `json:"bucketCrn"`
	BucketType *V2IbmBucketType `json:"bucketType,omitempty"`
	Endpoint   string           `json:"endpoint"`
	ServiceCrn *string          `json:"serviceCrn,omitempty"`
}

// V2IDPParameters This data structure represents a set of SAML identity provider parameters
type V2IDPParameters struct {
	Active          bool     `json:"active"`
	GroupNames      []string `json:"groupNames"`
	MetadataContent *string  `json:"metadataContent,omitempty"`
	MetadataUrl     *string  `json:"metadataUrl,omitempty"`
	TeamEntityId    int64    `json:"teamEntityId"`
}

// V2IbmBucketType defines model for v2IbmBucketType.
type V2IbmBucketType string

// V2LabelsPermutationsCardinalityDay defines model for v2LabelsPermutationsCardinalityDay.
type V2LabelsPermutationsCardinalityDay struct {
	Day          *string `json:"day,omitempty"`
	Permutations *int32  `json:"permutations,omitempty"`
}

// V2ListActionsResponse defines model for v2ListActionsResponse.
type V2ListActionsResponse struct {
	Actions *[]Actionsv2Action `json:"actions,omitempty"`
}

// V2ListE2MResponse This is the response obtained when listing all event to metric definitions
type V2ListE2MResponse struct {
	E2m []V2E2M `json:"e2m"`
}

// V2ListLabelsCardinalityResponse defines model for v2ListLabelsCardinalityResponse.
type V2ListLabelsCardinalityResponse struct {
	Permutations *[]V2LabelsPermutationsCardinalityDay `json:"permutations,omitempty"`
}

// V2LogsCount This data structure represents a logs count.
type V2LogsCount struct {
	LogsCount *string                       `json:"logsCount,omitempty"`
	Priority  *Datausagev2Priority          `json:"priority,omitempty"`
	Severity  *Coralogixdatausagev2Severity `json:"severity,omitempty"`
	Timestamp *time.Time                    `json:"timestamp,omitempty"`
}

// V2MetricLabel This data structure represents a metric label
type V2MetricLabel struct {
	SourceField string `json:"sourceField"`
	TargetLabel string `json:"targetLabel"`
}

// V2OrderActionsRequest defines model for v2OrderActionsRequest.
type V2OrderActionsRequest struct {
	PrivateActionsOrder *map[string]int64 `json:"privateActionsOrder,omitempty"`
	SharedActionsOrder  *map[string]int64 `json:"sharedActionsOrder,omitempty"`
}

// V2OrderActionsResponse defines model for v2OrderActionsResponse.
type V2OrderActionsResponse = map[string]interface{}

// V2ReplaceActionRequest defines model for v2ReplaceActionRequest.
type V2ReplaceActionRequest struct {
	Action *Actionsv2Action `json:"action,omitempty"`
}

// V2ReplaceActionResponse defines model for v2ReplaceActionResponse.
type V2ReplaceActionResponse struct {
	Action *Actionsv2Action `json:"action,omitempty"`
}

// V2ReplaceE2MRequest This data structure is used to replace an existing event to metric definition
type V2ReplaceE2MRequest struct {
	// E2m This data structure represents an Event to Metrics (E2M) object.
	E2m V2E2M `json:"e2m"`
}

// V2ReplaceE2MResponse This data structure is obtained when replacing an existing event to metric definition
type V2ReplaceE2MResponse struct {
	// E2m This data structure represents an Event to Metrics (E2M) object.
	E2m V2E2M `json:"e2m"`
}

// V2S3TargetSpec This data structure represents an S3 target.
type V2S3TargetSpec struct {
	Bucket string  `json:"bucket"`
	Region *string `json:"region,omitempty"`
}

// V2SPParameters This data structure represents the parameters of a SAML service provider
type V2SPParameters struct {
	AssertionConsumerServiceUrl string `json:"assertionConsumerServiceUrl"`
	Binding                     string `json:"binding"`
	MetadataUrl                 string `json:"metadataUrl"`
	NameIdFormat                string `json:"nameIdFormat"`
	SigningCertPem              string `json:"signingCertPem"`
}

// V2SetIDPParametersRequest This data structure is used to set the parameters of a SAML identity provider
type V2SetIDPParametersRequest struct {
	// Params This data structure represents a set of SAML identity provider parameters
	Params V2IDPParameters `json:"params"`
	TeamId int64           `json:"teamId"`
}

// V2SetIDPParametersResponse defines model for v2SetIDPParametersResponse.
type V2SetIDPParametersResponse = map[string]interface{}

// V2SetTargetRequest This data structure is used to set a storage target for logs.
type V2SetTargetRequest struct {
	// IbmCos This data structure represents an IBM COS target.
	IbmCos   *V2IBMCosTargetSpec `json:"ibmCos,omitempty"`
	IsActive bool                `json:"isActive"`

	// S3 This data structure represents an S3 target.
	S3 *V2S3TargetSpec `json:"s3,omitempty"`
}

// V2SetTargetResponse This data structure is obtained after setting a storage target for logs.
type V2SetTargetResponse struct {
	// Target This data structure represents a target to archive logs.
	Target V2Target `json:"target"`
}

// V2SpansCount This data structure represents a spans count.
type V2SpansCount struct {
	ErrorSpanCount         *string    `json:"errorSpanCount,omitempty"`
	LowErrorSpanCount      *string    `json:"lowErrorSpanCount,omitempty"`
	LowSuccessSpanCount    *string    `json:"lowSuccessSpanCount,omitempty"`
	MediumErrorSpanCount   *string    `json:"mediumErrorSpanCount,omitempty"`
	MediumSuccessSpanCount *string    `json:"mediumSuccessSpanCount,omitempty"`
	SuccessSpanCount       *string    `json:"successSpanCount,omitempty"`
	Timestamp              *time.Time `json:"timestamp,omitempty"`
}

// V2Target This data structure represents a target to archive logs.
type V2Target struct {
	// ArchiveSpec This data structure contains metadata about the archive.
	ArchiveSpec *V2ArchiveSpec `json:"archiveSpec,omitempty"`

	// IbmCos This data structure represents an IBM COS target.
	IbmCos *V2IBMCosTargetSpec `json:"ibmCos,omitempty"`

	// S3 This data structure represents an S3 target.
	S3 *V2S3TargetSpec `json:"s3,omitempty"`
}

// V2Token defines model for v2Token.
type V2Token struct {
	Value *float32 `json:"value,omitempty"`
}

// V2UpdateDataUsageMetricsExportStatusRequest This data structure is used to update data usage metrics export status.
type V2UpdateDataUsageMetricsExportStatusRequest struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// V2UpdateDataUsageMetricsExportStatusResponse This data structure is used to return data usage metrics export status.
type V2UpdateDataUsageMetricsExportStatusResponse struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// V2ValidateTargetRequest This data structure is used to validate a storage target for logs.
type V2ValidateTargetRequest struct {
	// IbmCos This data structure represents an IBM COS target.
	IbmCos   *V2IBMCosTargetSpec `json:"ibmCos,omitempty"`
	IsActive bool                `json:"isActive"`

	// S3 This data structure represents an S3 target.
	S3 *V2S3TargetSpec `json:"s3,omitempty"`
}

// V2ValidateTargetResponse This data structure is obtained after validating a storage target for logs.
type V2ValidateTargetResponse struct {
	IsValid bool `json:"isValid"`
}

// V3ActivityAnalysis Configuration for alert activity analysis, containing rules and status.
type V3ActivityAnalysis struct {
	Rules  []string                 `json:"rules"`
	Status V3ActivityAnalysisStatus `json:"status"`
}

// V3ActivityAnalysisStats defines model for v3ActivityAnalysisStats.
type V3ActivityAnalysisStats struct {
	IsMutedCount *int64    `json:"isMutedCount,omitempty"`
	Rules        *[]string `json:"rules,omitempty"`
}

// V3ActivityAnalysisStatus defines model for v3ActivityAnalysisStatus.
type V3ActivityAnalysisStatus string

// V3ActivitySchedule Defines when an alert should be active based on days of the week and time windows
type V3ActivitySchedule struct {
	DayOfWeek []V3DayOfWeek `json:"dayOfWeek"`

	// EndTime Represents a specific time in a 24-hour format
	EndTime V3TimeOfDay `json:"endTime"`

	// StartTime Represents a specific time in a 24-hour format
	StartTime V3TimeOfDay `json:"startTime"`
}

// V3AlertDef This data structure represents an alert definition
type V3AlertDef struct {
	// AlertDefProperties User-configurable properties of an alert definition
	AlertDefProperties V3AlertDefProperties `json:"alertDefProperties"`

	// AlertVersionId The old alert ID
	AlertVersionId string `json:"alertVersionId"`

	// CreatedTime The time when the alert definition was created
	CreatedTime *time.Time `json:"createdTime,omitempty"`

	// Id The alert definition's persistent ID
	Id string `json:"id"`

	// UpdatedTime The time when the alert definition was last updated
	UpdatedTime *time.Time `json:"updatedTime,omitempty"`
}

// V3AlertDefIncidentSettings defines model for v3AlertDefIncidentSettings.
type V3AlertDefIncidentSettings struct {
	// Minutes The time in minutes before the alert can be retriggered
	Minutes  *int64      `json:"minutes,omitempty"`
	NotifyOn *V3NotifyOn `json:"notifyOn,omitempty"`
}

// V3AlertDefNotificationGroup defines model for v3AlertDefNotificationGroup.
type V3AlertDefNotificationGroup struct {
	// Destinations The destinations for notifications.  (Notification Center feature)
	Destinations *[]V3NotificationDestination `json:"destinations,omitempty"`

	// GroupByKeys The keys to group the alerts by
	GroupByKeys *[]string `json:"groupByKeys,omitempty"`

	// Router Configuration for routing notifications
	Router *V3NotificationRouter `json:"router,omitempty"`

	// Webhooks The settings for webhooks associated with the alert definition
	Webhooks *[]V3AlertDefWebhooksSettings `json:"webhooks,omitempty"`
}

// V3AlertDefOverride defines model for v3AlertDefOverride.
type V3AlertDefOverride struct {
	Priority *V3AlertDefPriority `json:"priority,omitempty"`
}

// V3AlertDefPriority defines model for v3AlertDefPriority.
type V3AlertDefPriority string

// V3AlertDefProperties User-configurable properties of an alert definition
type V3AlertDefProperties struct {
	// ActiveOn Defines when an alert should be active based on days of the week and time windows
	ActiveOn *V3ActivitySchedule `json:"activeOn,omitempty"`

	// Deleted Whether the alert has been marked as deleted
	Deleted *bool `json:"deleted,omitempty"`

	// Description A detailed description of what the alert monitors and when it triggers
	Description *string `json:"description,omitempty"`

	// Enabled Whether the alert is currently active and monitoring
	Enabled *bool `json:"enabled,omitempty"`

	// EntityLabels Labels used to identify and categorize the alert entity
	EntityLabels *map[string]string `json:"entityLabels,omitempty"`

	// Flow Configuration for flow-based alerts with multiple stages
	Flow *V3FlowType `json:"flow,omitempty"`

	// GroupByKeys Keys used to group and aggregate alert data
	GroupByKeys       *[]string                   `json:"groupByKeys,omitempty"`
	IncidentsSettings *V3AlertDefIncidentSettings `json:"incidentsSettings,omitempty"`

	// LogsAnomaly Configuration for alerts triggered by anomalous log patterns
	LogsAnomaly *V3LogsAnomalyType `json:"logsAnomaly,omitempty"`

	// LogsImmediate Configuration for immediate alerts triggered on log entries matching specific filters.
	LogsImmediate *V3LogsImmediateType `json:"logsImmediate,omitempty"`

	// LogsNewValue Configuration for alerts triggered by new values appearing in logs
	LogsNewValue *V3LogsNewValueType `json:"logsNewValue,omitempty"`

	// LogsRatioThreshold Configuration for alerts based on the ratio between two log queries
	LogsRatioThreshold *V3LogsRatioThresholdType `json:"logsRatioThreshold,omitempty"`

	// LogsThreshold Configuration for alerts triggered when log counts exceed or fall below specified thresholds
	LogsThreshold *V3LogsThresholdType `json:"logsThreshold,omitempty"`

	// LogsTimeRelativeThreshold Configuration for alerts that are triggered when a fixed ratio reaches a set threshold compared to a past time frame.
	LogsTimeRelativeThreshold *V3LogsTimeRelativeThresholdType `json:"logsTimeRelativeThreshold,omitempty"`

	// LogsUniqueCount Configuration for alerts based on unique value counts in logs
	LogsUniqueCount *V3LogsUniqueCountType `json:"logsUniqueCount,omitempty"`

	// MetricAnomaly Configuration for alerts triggered by anomalous metric patterns
	MetricAnomaly *V3MetricAnomalyType `json:"metricAnomaly,omitempty"`

	// MetricThreshold Configuration for alerts based on metric threshold violations
	MetricThreshold *V3MetricThresholdType `json:"metricThreshold,omitempty"`

	// Name The name of the alert definition
	Name              string                       `json:"name"`
	NotificationGroup *V3AlertDefNotificationGroup `json:"notificationGroup,omitempty"`

	// NotificationGroupExcess Additional notification groups for alerts (deprecated)
	NotificationGroupExcess *[]V3AlertDefNotificationGroup `json:"notificationGroupExcess,omitempty"`

	// PhantomMode Whether the alert is in phantom mode (creating incidents or not)
	PhantomMode *bool              `json:"phantomMode,omitempty"`
	Priority    V3AlertDefPriority `json:"priority"`

	// SloThreshold SLO threshold type definition
	SloThreshold *V3SloThresholdType `json:"sloThreshold,omitempty"`

	// TracingImmediate Configuration for immediate alerts triggered on trace entries
	TracingImmediate *V3TracingImmediateType `json:"tracingImmediate,omitempty"`

	// TracingThreshold Configuration for alerts based on trace count thresholds
	TracingThreshold *V3TracingThresholdType `json:"tracingThreshold,omitempty"`
	Type             V3AlertDefType          `json:"type"`
}

// V3AlertDefType defines model for v3AlertDefType.
type V3AlertDefType string

// V3AlertDefWebhooksSettings Configuration for webhook notifications for an alert
type V3AlertDefWebhooksSettings struct {
	// Integration Defines the type of integration to use for notifications
	Integration Alertsv3IntegrationType `json:"integration"`

	// Minutes The time in minutes before the alert can be retriggered
	Minutes  *int64      `json:"minutes,omitempty"`
	NotifyOn *V3NotifyOn `json:"notifyOn,omitempty"`
}

// V3AlertEvent defines model for v3AlertEvent.
type V3AlertEvent struct {
	// ActivityAnalysis Configuration for alert activity analysis, containing rules and status.
	ActivityAnalysis       V3ActivityAnalysis     `json:"activityAnalysis"`
	AlertId                string                 `json:"alertId"`
	GroupLabels            map[string]string      `json:"groupLabels"`
	IncidentCorrelationKey string                 `json:"incidentCorrelationKey"`
	Payload                map[string]interface{} `json:"payload"`
	PayloadType            string                 `json:"payloadType"`
	PermutationId          string                 `json:"permutationId"`
	PermutationLabels      map[string]string      `json:"permutationLabels"`
	PreGroupingEventId     string                 `json:"preGroupingEventId"`
	Status                 V3AlertStatus          `json:"status"`
	Timestamp              time.Time              `json:"timestamp"`
}

// V3AlertEventMultiplePermutation defines model for v3AlertEventMultiplePermutation.
type V3AlertEventMultiplePermutation struct {
	AlertEventMultiplePermutation *[]V3AlertEvent `json:"alertEventMultiplePermutation,omitempty"`
}

// V3AlertStatus defines model for v3AlertStatus.
type V3AlertStatus string

// V3AlertsOp defines model for v3AlertsOp.
type V3AlertsOp string

// V3AnomalyAlertSettings Common settings for anomaly-based alerts.
type V3AnomalyAlertSettings struct {
	// PercentageOfDeviation The percentage of deviation from the baseline for triggering the alert.
	PercentageOfDeviation *float32 `json:"percentageOfDeviation,omitempty"`
}

// V3BatchGetEventResponse defines model for v3BatchGetEventResponse.
type V3BatchGetEventResponse struct {
	Events      *map[string]V3CxEventSingleOrMultiple    `json:"events,omitempty"`
	NotFoundIds *[]string                                `json:"notFoundIds,omitempty"`
	Pagination  *Coralogixapiseventsv3PaginationResponse `json:"pagination,omitempty"`
}

// V3BurnRateThreshold Burn rate threshold definition
type V3BurnRateThreshold struct {
	// Dual Burn rate type dual definition
	Dual *V3BurnRateTypeDual `json:"dual,omitempty"`

	// Rules The rules for the burn rate threshold
	Rules []V3SloThresholdRule `json:"rules"`

	// Single Burn rate type single definition
	Single *V3BurnRateTypeSingle `json:"single,omitempty"`
}

// V3BurnRateTypeDual Burn rate type dual definition
type V3BurnRateTypeDual struct {
	// TimeDuration Configuration for time duration
	TimeDuration V3TimeDuration `json:"timeDuration"`
}

// V3BurnRateTypeSingle Burn rate type single definition
type V3BurnRateTypeSingle struct {
	// TimeDuration Configuration for time duration
	TimeDuration V3TimeDuration `json:"timeDuration"`
}

// V3CreateAlertDefResponse A response that contains the newly created alert definition
type V3CreateAlertDefResponse struct {
	// AlertDef This data structure represents an alert definition
	AlertDef V3AlertDef `json:"alertDef"`
}

// V3CreateApiKeyRequest This data structure is used to create an API key.
type V3CreateApiKeyRequest struct {
	Hashed bool `json:"hashed"`

	// KeyPermissions This data structure allows to specify loose permissions and permission presets for an API key.
	KeyPermissions V3CreateApiKeyRequestKeyPermissions `json:"keyPermissions"`
	Name           string                              `json:"name"`
	Owner          V3Owner                             `json:"owner"`
}

// V3CreateApiKeyRequestKeyPermissions This data structure allows to specify loose permissions and permission presets for an API key.
type V3CreateApiKeyRequestKeyPermissions struct {
	Permissions []string `json:"permissions"`
	Presets     []string `json:"presets"`
}

// V3CreateApiKeyResponse This data structure is the response obtained when creating an API key.
type V3CreateApiKeyResponse struct {
	KeyId string `json:"keyId"`
	Name  string `json:"name"`
	Value string `json:"value"`
}

// V3CxEvent This data structure represents an event
type V3CxEvent struct {
	CompanyId          int32                  `json:"companyId"`
	CxEventDedupKey    *string                `json:"cxEventDedupKey,omitempty"`
	CxEventKey         string                 `json:"cxEventKey"`
	CxEventLabels      map[string]string      `json:"cxEventLabels"`
	CxEventMetadata    *map[string]string     `json:"cxEventMetadata,omitempty"`
	CxEventPayload     map[string]interface{} `json:"cxEventPayload"`
	CxEventPayloadType string                 `json:"cxEventPayloadType"`
	CxEventTimestamp   time.Time              `json:"cxEventTimestamp"`
	CxEventType        string                 `json:"cxEventType"`
}

// V3CxEventArray This data structure represents an array of events
type V3CxEventArray struct {
	Events []V3CxEvent `json:"events"`
}

// V3CxEventSingleOrMultiple This data structure represents a single or multiple events
type V3CxEventSingleOrMultiple struct {
	// MultipleEvents This data structure represents an array of events
	MultipleEvents *V3CxEventArray `json:"multipleEvents,omitempty"`

	// SingleEvent This data structure represents an event
	SingleEvent *V3CxEvent `json:"singleEvent,omitempty"`
}

// V3DayOfWeek defines model for v3DayOfWeek.
type V3DayOfWeek string

// V3DeleteAlertDefResponse A response to the deletion of an alert definition
type V3DeleteAlertDefResponse = map[string]interface{}

// V3DeleteApiKeyResponse defines model for v3DeleteApiKeyResponse.
type V3DeleteApiKeyResponse = map[string]interface{}

// V3DownloadAlertsResponse A response containing the downloaded alert data
type V3DownloadAlertsResponse struct {
	// Content Base64-encoded binary data of the alert definitions
	Content string `json:"content"`
}

// V3DurationUnit defines model for v3DurationUnit.
type V3DurationUnit string

// V3ErrorBudgetThreshold Error budget threshold definition
type V3ErrorBudgetThreshold struct {
	// Rules The rules for the error budget threshold
	Rules []V3SloThresholdRule `json:"rules"`
}

// V3EventStats defines model for v3EventStats.
type V3EventStats struct {
	ActivityAnalysisStats        *V3ActivityAnalysisStats `json:"activityAnalysisStats,omitempty"`
	Count                        *int64                   `json:"count,omitempty"`
	ResolvedCount                *int64                   `json:"resolvedCount,omitempty"`
	ResolvedPermutationsSamples  *[]V3Permutation         `json:"resolvedPermutationsSamples,omitempty"`
	TriggeredCount               *int64                   `json:"triggeredCount,omitempty"`
	TriggeredPermutationsSamples *[]V3Permutation         `json:"triggeredPermutationsSamples,omitempty"`
}

// V3FieldStatistics defines model for v3FieldStatistics.
type V3FieldStatistics struct {
	FieldStatistics *map[string]string `json:"fieldStatistics,omitempty"`
}

// V3FilterMatcher defines model for v3FilterMatcher.
type V3FilterMatcher string

// V3FilterPathAndValues This data structure represents a filter path and values
type V3FilterPathAndValues struct {
	// Filters This data structure represents a filter
	Filters        *V3Filters        `json:"filters,omitempty"`
	MultipleValues *V3MultipleValues `json:"multipleValues,omitempty"`
	Path           string            `json:"path"`
}

// V3Filters This data structure represents a filter
type V3Filters struct {
	Operator      *Eventsv3FilterOperator `json:"operator,omitempty"`
	PathAndValues []V3FilterPathAndValues `json:"pathAndValues"`
}

// V3FlowStages Defines stages in a flow alert
type V3FlowStages struct {
	// FlowStagesGroups Groups of stages in a flow alert
	FlowStagesGroups *V3FlowStagesGroups `json:"flowStagesGroups,omitempty"`
	TimeframeMs      string              `json:"timeframeMs"`
	TimeframeType    V3TimeframeType     `json:"timeframeType"`
}

// V3FlowStagesGroup Defines a group of stages in a flow alert
type V3FlowStagesGroup struct {
	// AlertDefs The alert definitions for the flow stage group.
	AlertDefs []V3FlowStagesGroupsAlertDefs `json:"alertDefs"`
	AlertsOp  V3AlertsOp                    `json:"alertsOp"`
	NextOp    V3NextOp                      `json:"nextOp"`
}

// V3FlowStagesGroups Groups of stages in a flow alert
type V3FlowStagesGroups struct {
	Groups []V3FlowStagesGroup `json:"groups"`
}

// V3FlowStagesGroupsAlertDefs Alert definitions for a flow stage group
type V3FlowStagesGroupsAlertDefs struct {
	// Id The alert definition ID
	Id string `json:"id"`

	// Not Whether to negate the alert definition or not.
	Not *bool `json:"not,omitempty"`
}

// V3FlowType Configuration for flow-based alerts with multiple stages
type V3FlowType struct {
	EnforceSuppression *bool `json:"enforceSuppression,omitempty"`

	// Stages The stages of the flow alert.
	Stages []V3FlowStages `json:"stages"`
}

// V3GetAlertDefByVersionIdResponse A response that contains an alert definition for the requested version
type V3GetAlertDefByVersionIdResponse struct {
	// AlertDef This data structure represents an alert definition
	AlertDef V3AlertDef `json:"alertDef"`
}

// V3GetAlertDefResponse A response containing the requested alert definition
type V3GetAlertDefResponse struct {
	// AlertDef This data structure represents an alert definition
	AlertDef V3AlertDef `json:"alertDef"`
}

// V3GetAlertEventResponse defines model for v3GetAlertEventResponse.
type V3GetAlertEventResponse struct {
	Id                  *string                                  `json:"id,omitempty"`
	MultiplePermutation *V3AlertEventMultiplePermutation         `json:"multiplePermutation,omitempty"`
	Pagination          *Coralogixapisalertsv3PaginationResponse `json:"pagination,omitempty"`
	SinglePermutation   *V3AlertEvent                            `json:"singlePermutation,omitempty"`
}

// V3GetAlertEventStatsResponse defines model for v3GetAlertEventStatsResponse.
type V3GetAlertEventStatsResponse struct {
	EventsStats *map[string]V3EventStats `json:"eventsStats,omitempty"`
}

// V3GetApiKeyResponse This data structure is the response obtained when retrieving an API key.
type V3GetApiKeyResponse struct {
	// KeyInfo This data structure represents the information associated with an API key.
	KeyInfo V3KeyInfo `json:"keyInfo"`
}

// V3GetEventResponse defines model for v3GetEventResponse.
type V3GetEventResponse struct {
	// Event This data structure represents a single or multiple events
	Event      *V3CxEventSingleOrMultiple               `json:"event,omitempty"`
	Pagination *Coralogixapiseventsv3PaginationResponse `json:"pagination,omitempty"`
}

// V3GetEventsStatisticsResponse This data structure represents a response to get events statistics
type V3GetEventsStatisticsResponse struct {
	CxEventMetadataFieldStatistics map[string]V3FieldStatistics `json:"cxEventMetadataFieldStatistics"`
}

// V3GetSendDataApiKeysResponse This data structure is the response obtained when retrieving an API key.
type V3GetSendDataApiKeysResponse struct {
	Keys *[]V3KeyInfo `json:"keys,omitempty"`
}

// V3KeyInfo This data structure represents the information associated with an API key.
type V3KeyInfo struct {
	Active bool   `json:"active"`
	Hashed bool   `json:"hashed"`
	Id     string `json:"id"`

	// KeyPermissions This data structure represents the permissions on an API key.
	KeyPermissions V3KeyInfoKeyPermissions `json:"keyPermissions"`
	Name           string                  `json:"name"`
	Owner          V3Owner                 `json:"owner"`
	Value          *string                 `json:"value,omitempty"`
}

// V3KeyInfoKeyPermissions This data structure represents the permissions on an API key.
type V3KeyInfoKeyPermissions struct {
	Permissions []string       `json:"permissions"`
	Presets     []V3PresetInfo `json:"presets"`
}

// V3LabelFilterType Label filter type for log entries
type V3LabelFilterType struct {
	Operation V3LogFilterOperationType `json:"operation"`

	// Value The value of the label to filter by
	Value string `json:"value"`
}

// V3LabelFilters Filters for application name, subsystem name, and log severities
type V3LabelFilters struct {
	ApplicationName *[]V3LabelFilterType `json:"applicationName,omitempty"`
	Severities      *[]V3LogSeverity     `json:"severities,omitempty"`
	SubsystemName   *[]V3LabelFilterType `json:"subsystemName,omitempty"`
}

// V3ListAlertDefsResponse A response that contains a list of alert definitions
type V3ListAlertDefsResponse struct {
	// AlertDefs List of alert definitions
	AlertDefs []V3AlertDef `json:"alertDefs"`
}

// V3ListEventsCountResponse This data structure represents a response to list events count
type V3ListEventsCountResponse struct {
	Count        string `json:"count"`
	ReachedLimit bool   `json:"reachedLimit"`
}

// V3ListEventsResponse This data structure represents a response to list events
type V3ListEventsResponse struct {
	Events     []V3CxEvent                              `json:"events"`
	Pagination *Coralogixapiseventsv3PaginationResponse `json:"pagination,omitempty"`
}

// V3LogFilterOperationType defines model for v3LogFilterOperationType.
type V3LogFilterOperationType string

// V3LogSeverity defines model for v3LogSeverity.
type V3LogSeverity string

// V3LogsAnomalyCondition Defines conditions for detecting log anomalies
type V3LogsAnomalyCondition struct {
	ConditionType V3LogsAnomalyConditionType `json:"conditionType"`

	// MinimumThreshold The threshold value for the alert condition
	MinimumThreshold float64 `json:"minimumThreshold"`

	// TimeWindow Time window configuration for log-based alerts
	TimeWindow V3LogsTimeWindow `json:"timeWindow"`
}

// V3LogsAnomalyConditionType defines model for v3LogsAnomalyConditionType.
type V3LogsAnomalyConditionType string

// V3LogsAnomalyRule Defines a rule for detecting log anomalies
type V3LogsAnomalyRule struct {
	// Condition Defines conditions for detecting log anomalies
	Condition V3LogsAnomalyCondition `json:"condition"`
}

// V3LogsAnomalyType Configuration for alerts triggered by anomalous log patterns
type V3LogsAnomalyType struct {
	// AnomalyAlertSettings Common settings for anomaly-based alerts.
	AnomalyAlertSettings *V3AnomalyAlertSettings `json:"anomalyAlertSettings,omitempty"`

	// EvaluationDelayMs The delay in milliseconds before evaluating the alert condition
	EvaluationDelayMs *int `json:"evaluationDelayMs,omitempty"`

	// LogsFilter Filter configuration for log-based alerts
	LogsFilter *Alertsv3LogsFilter `json:"logsFilter,omitempty"`

	// NotificationPayloadFilter The filter to specify which fields to include in the notification payload
	NotificationPayloadFilter *[]string `json:"notificationPayloadFilter,omitempty"`

	// Rules The rules for the log anomaly alert
	Rules []V3LogsAnomalyRule `json:"rules"`
}

// V3LogsImmediateType Configuration for immediate alerts triggered on log entries matching specific filters.
type V3LogsImmediateType struct {
	// LogsFilter Filter configuration for log-based alerts
	LogsFilter                Alertsv3LogsFilter `json:"logsFilter"`
	NotificationPayloadFilter *[]string          `json:"notificationPayloadFilter,omitempty"`
}

// V3LogsNewValueCondition Defines conditions for detecting new values in logs
type V3LogsNewValueCondition struct {
	// KeypathToTrack The keypath to track for new values
	KeypathToTrack string `json:"keypathToTrack"`

	// TimeWindow Time window configuration for log-based new value alerts
	TimeWindow V3LogsNewValueTimeWindow `json:"timeWindow"`
}

// V3LogsNewValueRule Defines the condition for detecting new values in logs
type V3LogsNewValueRule struct {
	// Condition Defines conditions for detecting new values in logs
	Condition V3LogsNewValueCondition `json:"condition"`
}

// V3LogsNewValueTimeWindow Time window configuration for log-based new value alerts
type V3LogsNewValueTimeWindow struct {
	LogsNewValueTimeWindowSpecificValue *V3LogsNewValueTimeWindowValue `json:"logsNewValueTimeWindowSpecificValue,omitempty"`
}

// V3LogsNewValueTimeWindowValue defines model for v3LogsNewValueTimeWindowValue.
type V3LogsNewValueTimeWindowValue string

// V3LogsNewValueType Configuration for alerts triggered by new values appearing in logs
type V3LogsNewValueType struct {
	// LogsFilter Filter configuration for log-based alerts
	LogsFilter *Alertsv3LogsFilter `json:"logsFilter,omitempty"`

	// NotificationPayloadFilter The filter to specify which fields to include in the notification payload.
	NotificationPayloadFilter *[]string `json:"notificationPayloadFilter,omitempty"`

	// Rules The rules for the log new value alert.
	Rules []V3LogsNewValueRule `json:"rules"`
}

// V3LogsRatioCondition Defines conditions for ratio-based alerts
type V3LogsRatioCondition struct {
	ConditionType V3LogsRatioConditionType `json:"conditionType"`

	// Threshold The threshold value for the alert condition
	Threshold float64 `json:"threshold"`

	// TimeWindow Time window configuration for ratio alerts
	TimeWindow V3LogsRatioTimeWindow `json:"timeWindow"`
}

// V3LogsRatioConditionType defines model for v3LogsRatioConditionType.
type V3LogsRatioConditionType string

// V3LogsRatioGroupByFor defines model for v3LogsRatioGroupByFor.
type V3LogsRatioGroupByFor string

// V3LogsRatioRules Defines the rules for log-based ratio alerts
type V3LogsRatioRules struct {
	// Condition Defines conditions for ratio-based alerts
	Condition V3LogsRatioCondition `json:"condition"`
	Override  V3AlertDefOverride   `json:"override"`
}

// V3LogsRatioThresholdType Configuration for alerts based on the ratio between two log queries
type V3LogsRatioThresholdType struct {
	// Denominator Filter configuration for log-based alerts
	Denominator Alertsv3LogsFilter `json:"denominator"`

	// DenominatorAlias The alias for the denominator filter, used for display purposes
	DenominatorAlias *string `json:"denominatorAlias,omitempty"`

	// EvaluationDelayMs The delay in milliseconds before evaluating the alert condition
	EvaluationDelayMs *int32                 `json:"evaluationDelayMs,omitempty"`
	GroupByFor        *V3LogsRatioGroupByFor `json:"groupByFor,omitempty"`

	// IgnoreInfinity The configuration for ignoring infinity values in the ratio
	IgnoreInfinity            *bool     `json:"ignoreInfinity,omitempty"`
	NotificationPayloadFilter *[]string `json:"notificationPayloadFilter,omitempty"`

	// Numerator Filter configuration for log-based alerts
	Numerator Alertsv3LogsFilter `json:"numerator"`

	// NumeratorAlias The alias for the numerator filter, used for display purposes
	NumeratorAlias *string `json:"numeratorAlias,omitempty"`

	// Rules The rules for the ratio alert
	Rules []V3LogsRatioRules `json:"rules"`

	// UndetectedValuesManagement Configuration for handling undetected values in alerts
	UndetectedValuesManagement *Alertsv3UndetectedValuesManagement `json:"undetectedValuesManagement,omitempty"`
}

// V3LogsRatioTimeWindow Time window configuration for ratio alerts
type V3LogsRatioTimeWindow struct {
	LogsRatioTimeWindowSpecificValue *V3LogsRatioTimeWindowValue `json:"logsRatioTimeWindowSpecificValue,omitempty"`
}

// V3LogsRatioTimeWindowValue defines model for v3LogsRatioTimeWindowValue.
type V3LogsRatioTimeWindowValue string

// V3LogsSimpleFilter Basic filter configuration using a Lucene query and label filters
type V3LogsSimpleFilter struct {
	// LabelFilters Filters for application name, subsystem name, and log severities
	LabelFilters *V3LabelFilters `json:"labelFilters,omitempty"`
	LuceneQuery  *string         `json:"luceneQuery,omitempty"`
}

// V3LogsThresholdCondition LogsThresholdCondition is a message that defines the condition for log-based threshold alerts.
type V3LogsThresholdCondition struct {
	ConditionType V3LogsThresholdConditionType `json:"conditionType"`

	// Threshold The threshold value for the alert condition
	Threshold float64 `json:"threshold"`

	// TimeWindow Time window configuration for log-based alerts
	TimeWindow V3LogsTimeWindow `json:"timeWindow"`
}

// V3LogsThresholdConditionType defines model for v3LogsThresholdConditionType.
type V3LogsThresholdConditionType string

// V3LogsThresholdRule LogsThresholdRule is a message that defines a rule for log-based threshold alerts.
type V3LogsThresholdRule struct {
	// Condition LogsThresholdCondition is a message that defines the condition for log-based threshold alerts.
	Condition V3LogsThresholdCondition `json:"condition"`
	Override  V3AlertDefOverride       `json:"override"`
}

// V3LogsThresholdType Configuration for alerts triggered when log counts exceed or fall below specified thresholds
type V3LogsThresholdType struct {
	// EvaluationDelayMs The delay in milliseconds before evaluating the alert condition
	EvaluationDelayMs *int32 `json:"evaluationDelayMs,omitempty"`

	// LogsFilter Filter configuration for log-based alerts
	LogsFilter *Alertsv3LogsFilter `json:"logsFilter,omitempty"`

	// NotificationPayloadFilter The filter to specify which fields to include in the notification payload
	NotificationPayloadFilter *[]string `json:"notificationPayloadFilter,omitempty"`

	// Rules The rules for the threshold alert
	Rules []V3LogsThresholdRule `json:"rules"`

	// UndetectedValuesManagement Configuration for handling undetected values in alerts
	UndetectedValuesManagement *Alertsv3UndetectedValuesManagement `json:"undetectedValuesManagement,omitempty"`
}

// V3LogsTimeRelativeComparedTo defines model for v3LogsTimeRelativeComparedTo.
type V3LogsTimeRelativeComparedTo string

// V3LogsTimeRelativeCondition Defines conditions for time-relative comparison alerts
type V3LogsTimeRelativeCondition struct {
	ComparedTo    V3LogsTimeRelativeComparedTo    `json:"comparedTo"`
	ConditionType V3LogsTimeRelativeConditionType `json:"conditionType"`

	// Threshold The threshold value for the alert condition.
	Threshold float64 `json:"threshold"`
}

// V3LogsTimeRelativeConditionType defines model for v3LogsTimeRelativeConditionType.
type V3LogsTimeRelativeConditionType string

// V3LogsTimeRelativeRule LogsTimeRelativeRule is a message that defines a rule for log-based time-relative alerts
type V3LogsTimeRelativeRule struct {
	// Condition Defines conditions for time-relative comparison alerts
	Condition V3LogsTimeRelativeCondition `json:"condition"`
	Override  V3AlertDefOverride          `json:"override"`
}

// V3LogsTimeRelativeThresholdType Configuration for alerts that are triggered when a fixed ratio reaches a set threshold compared to a past time frame.
type V3LogsTimeRelativeThresholdType struct {
	// EvaluationDelayMs The delay in milliseconds before evaluating the alert condition
	EvaluationDelayMs *int32 `json:"evaluationDelayMs,omitempty"`

	// IgnoreInfinity Ignore infinity values in the alert
	IgnoreInfinity *bool `json:"ignoreInfinity,omitempty"`

	// LogsFilter Filter configuration for log-based alerts
	LogsFilter                *Alertsv3LogsFilter `json:"logsFilter,omitempty"`
	NotificationPayloadFilter *[]string           `json:"notificationPayloadFilter,omitempty"`

	// Rules The rules for the time-relative alert
	Rules []V3LogsTimeRelativeRule `json:"rules"`

	// UndetectedValuesManagement Configuration for handling undetected values in alerts
	UndetectedValuesManagement *Alertsv3UndetectedValuesManagement `json:"undetectedValuesManagement,omitempty"`
}

// V3LogsTimeWindow Time window configuration for log-based alerts
type V3LogsTimeWindow struct {
	LogsTimeWindowSpecificValue *V3LogsTimeWindowValue `json:"logsTimeWindowSpecificValue,omitempty"`
}

// V3LogsTimeWindowValue defines model for v3LogsTimeWindowValue.
type V3LogsTimeWindowValue string

// V3LogsUniqueCountCondition Defines conditions for unique count alerts
type V3LogsUniqueCountCondition struct {
	// MaxUniqueCount The maximum unique count
	MaxUniqueCount string `json:"maxUniqueCount"`

	// TimeWindow Time window configuration for log-based unique value alerts
	TimeWindow V3LogsUniqueValueTimeWindow `json:"timeWindow"`
}

// V3LogsUniqueCountRule Defines the rule for detecting unique counts in logs
type V3LogsUniqueCountRule struct {
	// Condition Defines conditions for unique count alerts
	Condition V3LogsUniqueCountCondition `json:"condition"`
}

// V3LogsUniqueCountType Configuration for alerts based on unique value counts in logs
type V3LogsUniqueCountType struct {
	// LogsFilter Filter configuration for log-based alerts
	LogsFilter *Alertsv3LogsFilter `json:"logsFilter,omitempty"`

	// MaxUniqueCountPerGroupByKey The maximum unique count per group by key
	MaxUniqueCountPerGroupByKey *string `json:"maxUniqueCountPerGroupByKey,omitempty"`

	// NotificationPayloadFilter The filter to specify which fields to include in the notification payload
	NotificationPayloadFilter *[]string `json:"notificationPayloadFilter,omitempty"`

	// Rules The rules for the log unique count alert
	Rules []V3LogsUniqueCountRule `json:"rules"`

	// UniqueCountKeypath The keypath in the logs to be used for unique count
	UniqueCountKeypath string `json:"uniqueCountKeypath"`
}

// V3LogsUniqueValueTimeWindow Time window configuration for log-based unique value alerts
type V3LogsUniqueValueTimeWindow struct {
	LogsUniqueValueTimeWindowSpecificValue *V3LogsUniqueValueTimeWindowValue `json:"logsUniqueValueTimeWindowSpecificValue,omitempty"`
}

// V3LogsUniqueValueTimeWindowValue defines model for v3LogsUniqueValueTimeWindowValue.
type V3LogsUniqueValueTimeWindowValue string

// V3MetricAnomalyCondition defines model for v3MetricAnomalyCondition.
type V3MetricAnomalyCondition struct {
	ConditionType V3MetricAnomalyConditionType `json:"conditionType"`

	// ForOverPct The percentage of the metric that must exceed the threshold to trigger the alert
	ForOverPct *int64 `json:"forOverPct,omitempty"`

	// MinNonNullValuesPct The percentage of non-null values required to trigger the alert
	MinNonNullValuesPct int64              `json:"minNonNullValuesPct"`
	OfTheLast           V3MetricTimeWindow `json:"ofTheLast"`

	// Threshold The threshold value for the alert condition
	Threshold float64 `json:"threshold"`
}

// V3MetricAnomalyConditionType defines model for v3MetricAnomalyConditionType.
type V3MetricAnomalyConditionType string

// V3MetricAnomalyRule A rule for metric-based anomaly detection alerts
type V3MetricAnomalyRule struct {
	Condition V3MetricAnomalyCondition `json:"condition"`
}

// V3MetricAnomalyType Configuration for alerts triggered by anomalous metric patterns
type V3MetricAnomalyType struct {
	// AnomalyAlertSettings Common settings for anomaly-based alerts.
	AnomalyAlertSettings *V3AnomalyAlertSettings `json:"anomalyAlertSettings,omitempty"`

	// EvaluationDelayMs The delay in milliseconds before evaluating the alert condition
	EvaluationDelayMs *int           `json:"evaluationDelayMs,omitempty"`
	MetricFilter      V3MetricFilter `json:"metricFilter"`

	// Rules The rules for the metric anomaly alert.
	Rules []V3MetricAnomalyRule `json:"rules"`
}

// V3MetricFilter defines model for v3MetricFilter.
type V3MetricFilter struct {
	// Promql A PromQL filter for metrics
	Promql string `json:"promql"`
}

// V3MetricMissingValues Configuration for handling missing values in metric threshold alerts.
type V3MetricMissingValues struct {
	// MinNonNullValuesPct If set, specifies the minimum percentage of non-null values required for the alert to be triggered
	MinNonNullValuesPct *int64 `json:"minNonNullValuesPct,omitempty"`

	// ReplaceWithZero If set to true, missing values will be replaced with zero
	ReplaceWithZero *bool `json:"replaceWithZero,omitempty"`
}

// V3MetricThresholdCondition Defines conditions for metric threshold alerts
type V3MetricThresholdCondition struct {
	ConditionType V3MetricThresholdConditionType `json:"conditionType"`

	// ForOverPct The percentage of values that must exceed the threshold to trigger the alert
	ForOverPct int64              `json:"forOverPct"`
	OfTheLast  V3MetricTimeWindow `json:"ofTheLast"`

	// Threshold The threshold value for the alert condition
	Threshold float64 `json:"threshold"`
}

// V3MetricThresholdConditionType defines model for v3MetricThresholdConditionType.
type V3MetricThresholdConditionType string

// V3MetricThresholdRule Defines a rule for metric-based threshold alerts
type V3MetricThresholdRule struct {
	// Condition Defines conditions for metric threshold alerts
	Condition V3MetricThresholdCondition `json:"condition"`
	Override  V3AlertDefOverride         `json:"override"`
}

// V3MetricThresholdType Configuration for alerts based on metric threshold violations
type V3MetricThresholdType struct {
	// EvaluationDelayMs The delay in milliseconds before evaluating the alert condition
	EvaluationDelayMs *int32         `json:"evaluationDelayMs,omitempty"`
	MetricFilter      V3MetricFilter `json:"metricFilter"`

	// MissingValues Configuration for handling missing values in metric threshold alerts.
	MissingValues V3MetricMissingValues `json:"missingValues"`

	// Rules The rules for the metric threshold alert
	Rules []V3MetricThresholdRule `json:"rules"`

	// UndetectedValuesManagement Configuration for handling undetected values in alerts
	UndetectedValuesManagement *Alertsv3UndetectedValuesManagement `json:"undetectedValuesManagement,omitempty"`
}

// V3MetricTimeWindow defines model for v3MetricTimeWindow.
type V3MetricTimeWindow struct {
	// MetricTimeWindowDynamicDuration The time window as a dynamic value
	MetricTimeWindowDynamicDuration *string                  `json:"metricTimeWindowDynamicDuration,omitempty"`
	MetricTimeWindowSpecificValue   *V3MetricTimeWindowValue `json:"metricTimeWindowSpecificValue,omitempty"`
}

// V3MetricTimeWindowValue defines model for v3MetricTimeWindowValue.
type V3MetricTimeWindowValue string

// V3MultipleValues defines model for v3MultipleValues.
type V3MultipleValues struct {
	Matcher *V3FilterMatcher `json:"matcher,omitempty"`
	Values  *[]string        `json:"values,omitempty"`
}

// V3NextOp defines model for v3NextOp.
type V3NextOp string

// V3NotificationDestination Configuration for where and how alert notifications should be sent
type V3NotificationDestination struct {
	// ConnectorId The connector ID used to send notifications
	ConnectorId string      `json:"connectorId"`
	NotifyOn    *V3NotifyOn `json:"notifyOn,omitempty"`

	// PresetId Optional preset ID for the notification destination
	PresetId                  *string                `json:"presetId,omitempty"`
	ResolvedRouteOverrides    *V3NotificationRouting `json:"resolvedRouteOverrides,omitempty"`
	TriggeredRoutingOverrides *V3NotificationRouting `json:"triggeredRoutingOverrides,omitempty"`
}

// V3NotificationRouter Configuration for routing notifications
type V3NotificationRouter struct {
	// Id The ID of the notification router
	Id       string      `json:"id"`
	NotifyOn *V3NotifyOn `json:"notifyOn,omitempty"`
}

// V3NotificationRouting defines model for v3NotificationRouting.
type V3NotificationRouting struct {
	ConfigOverrides *Alertsv3SourceOverrides `json:"configOverrides,omitempty"`
}

// V3NotifyOn defines model for v3NotifyOn.
type V3NotifyOn string

// V3Owner defines model for v3Owner.
type V3Owner struct {
	OrganisationId *string `json:"organisationId,omitempty"`
	TeamId         *int64  `json:"teamId,omitempty"`
	UserId         *string `json:"userId,omitempty"`
}

// V3Permutation defines model for v3Permutation.
type V3Permutation struct {
	PermutationLabels *map[string]string `json:"permutationLabels,omitempty"`
}

// V3PresetInfo This data structure represents a preset set of permissions on an API key.
type V3PresetInfo struct {
	Name        string   `json:"name"`
	Permissions []string `json:"permissions"`
}

// V3Recipients List of email recipients for alert notifications
type V3Recipients struct {
	// Emails The list of email recipients for alert notifications
	Emails []string `json:"emails"`
}

// V3ReplaceAlertDefRequest A request to replace an existing alert definition
type V3ReplaceAlertDefRequest struct {
	// AlertDefProperties User-configurable properties of an alert definition
	AlertDefProperties V3AlertDefProperties `json:"alertDefProperties"`

	// Id Alert definition ID
	Id string `json:"id"`
}

// V3ReplaceAlertDefResponse A response that contains the updated alert definition
type V3ReplaceAlertDefResponse struct {
	// AlertDef This data structure represents an alert definition
	AlertDef V3AlertDef `json:"alertDef"`
}

// V3SloThresholdCondition Condition for the SLO threshold rule
type V3SloThresholdCondition struct {
	Threshold float64 `json:"threshold"`
}

// V3SloThresholdRule SLO threshold rule definition
type V3SloThresholdRule struct {
	// Condition Condition for the SLO threshold rule
	Condition V3SloThresholdCondition `json:"condition"`
	Override  V3AlertDefOverride      `json:"override"`
}

// V3SloThresholdType SLO threshold type definition
type V3SloThresholdType struct {
	// BurnRate Burn rate threshold definition
	BurnRate *V3BurnRateThreshold `json:"burnRate,omitempty"`

	// ErrorBudget Error budget threshold definition
	ErrorBudget *V3ErrorBudgetThreshold `json:"errorBudget,omitempty"`

	// SloDefinition Configuration for SLO definition
	SloDefinition Alertsv3SloDefinition `json:"sloDefinition"`
}

// V3TimeDuration Configuration for time duration
type V3TimeDuration struct {
	// Duration The duration value
	Duration string         `json:"duration"`
	Unit     V3DurationUnit `json:"unit"`
}

// V3TimeOfDay Represents a specific time in a 24-hour format
type V3TimeOfDay struct {
	// Hours Hours of day in 24 hour format. Should be from 0 to 23.
	Hours int32 `json:"hours"`

	// Minutes Minutes of hour of day. Must be from 0 to 59.
	Minutes int32 `json:"minutes"`
}

// V3TimeframeType defines model for v3TimeframeType.
type V3TimeframeType string

// V3TracingFilter Filter configuration for tracing-based alerts
type V3TracingFilter struct {
	// SimpleFilter Basic filter configuration using a latency threshold and label filters
	SimpleFilter *V3TracingSimpleFilter `json:"simpleFilter,omitempty"`
}

// V3TracingFilterOperationType defines model for v3TracingFilterOperationType.
type V3TracingFilterOperationType string

// V3TracingFilterType Filter type for trace entries
type V3TracingFilterType struct {
	Operation V3TracingFilterOperationType `json:"operation"`

	// Values The values of the label to filter by
	Values []string `json:"values"`
}

// V3TracingImmediateType Configuration for immediate alerts triggered on trace entries
type V3TracingImmediateType struct {
	// NotificationPayloadFilter Notification payload field filter
	NotificationPayloadFilter *[]string `json:"notificationPayloadFilter,omitempty"`

	// TracingFilter Filter configuration for tracing-based alerts
	TracingFilter V3TracingFilter `json:"tracingFilter"`
}

// V3TracingLabelFilters Filters for application name, subsystem name, service name, operation name and span fields
type V3TracingLabelFilters struct {
	// ApplicationName Filter by application names
	ApplicationName *[]V3TracingFilterType `json:"applicationName,omitempty"`

	// OperationName Filter by operation names
	OperationName *[]V3TracingFilterType `json:"operationName,omitempty"`

	// ServiceName Filter by service names
	ServiceName *[]V3TracingFilterType `json:"serviceName,omitempty"`

	// SpanFields Filter by span fields
	SpanFields *[]V3TracingSpanFieldsFilterType `json:"spanFields,omitempty"`

	// SubsystemName Filter by subsystem names
	SubsystemName *[]V3TracingFilterType `json:"subsystemName,omitempty"`
}

// V3TracingSimpleFilter Basic filter configuration using a latency threshold and label filters
type V3TracingSimpleFilter struct {
	// LatencyThresholdMs The latency threshold to filter traces in milliseconds
	LatencyThresholdMs string `json:"latencyThresholdMs"`

	// TracingLabelFilters Filters for application name, subsystem name, service name, operation name and span fields
	TracingLabelFilters *V3TracingLabelFilters `json:"tracingLabelFilters,omitempty"`
}

// V3TracingSpanFieldsFilterType A filter for span fields in trace entries
type V3TracingSpanFieldsFilterType struct {
	// FilterType Filter type for trace entries
	FilterType V3TracingFilterType `json:"filterType"`

	// Key The key of the span field to filter by
	Key string `json:"key"`
}

// V3TracingThresholdCondition defines model for v3TracingThresholdCondition.
type V3TracingThresholdCondition struct {
	ConditionType V3TracingThresholdConditionType `json:"conditionType"`

	// SpanAmount The threshold value for the alert condition
	SpanAmount float64             `json:"spanAmount"`
	TimeWindow V3TracingTimeWindow `json:"timeWindow"`
}

// V3TracingThresholdConditionType defines model for v3TracingThresholdConditionType.
type V3TracingThresholdConditionType string

// V3TracingThresholdRule A rule for trace-based threshold alerts
type V3TracingThresholdRule struct {
	Condition V3TracingThresholdCondition `json:"condition"`
}

// V3TracingThresholdType Configuration for alerts based on trace count thresholds
type V3TracingThresholdType struct {
	// NotificationPayloadFilter Notification payload field filter
	NotificationPayloadFilter *[]string `json:"notificationPayloadFilter,omitempty"`

	// Rules The rules for the trace threshold alert.
	Rules []V3TracingThresholdRule `json:"rules"`

	// TracingFilter Filter configuration for tracing-based alerts
	TracingFilter V3TracingFilter `json:"tracingFilter"`
}

// V3TracingTimeWindow defines model for v3TracingTimeWindow.
type V3TracingTimeWindow struct {
	TracingTimeWindowValue *V3TracingTimeWindowValue `json:"tracingTimeWindowValue,omitempty"`
}

// V3TracingTimeWindowValue defines model for v3TracingTimeWindowValue.
type V3TracingTimeWindowValue string

// V3UpdateApiKeyRequestPermissions This data structure represents a set of permissions on an API key.
type V3UpdateApiKeyRequestPermissions struct {
	Permissions []string `json:"permissions"`
}

// V3UpdateApiKeyResponse defines model for v3UpdateApiKeyResponse.
type V3UpdateApiKeyResponse = map[string]interface{}

// WidgetsBarChart BarChart represents the configuration of a vertical bar chart widget.
type WidgetsBarChart struct {
	BarValueDisplay *WidgetsBarValueDisplay `json:"barValueDisplay,omitempty"`

	// ColorScheme Applied color scheme, one of the predefined values
	ColorScheme *string         `json:"colorScheme,omitempty"`
	ColorsBy    *CommonColorsBy `json:"colorsBy,omitempty"`

	// CustomUnit Custom unit (requires to have unit field set to custom to take effect)
	CustomUnit   *string             `json:"customUnit,omitempty"`
	DataModeType *CommonDataModeType `json:"dataModeType,omitempty"`

	// Decimal Number indicating the decimal precision of the numeric values, within range 0-15
	Decimal *int32 `json:"decimal,omitempty"`

	// GroupNameTemplate Custom template name for a bar group, can contain variables
	GroupNameTemplate *string `json:"groupNameTemplate,omitempty"`

	// HashColors Whether to ignore color scheme and derive colors from algorithm
	HashColors *bool         `json:"hashColors,omitempty"`
	Legend     *CommonLegend `json:"legend,omitempty"`

	// MaxBarsPerChart Maximum number of bars on a chart
	MaxBarsPerChart *int32                          `json:"maxBarsPerChart,omitempty"`
	Query           *WidgetsBarChartQuery           `json:"query,omitempty"`
	ScaleType       *CommonScaleType                `json:"scaleType,omitempty"`
	SortBy          *CommonSortByType               `json:"sortBy,omitempty"`
	StackDefinition *WidgetsBarChartStackDefinition `json:"stackDefinition,omitempty"`
	Unit            *WidgetscommonUnit              `json:"unit,omitempty"`
	XAxis           *BarChartXAxis                  `json:"xAxis,omitempty"`

	// YAxisMax Number indicating the upper band for y axis
	YAxisMax *float32 `json:"yAxisMax,omitempty"`

	// YAxisMin Number indicating the lower band for y axis
	YAxisMin *float32 `json:"yAxisMin,omitempty"`
}

// WidgetsBarChartDataprimeQuery A Dataprime variant of the query
type WidgetsBarChartDataprimeQuery struct {
	DataprimeQuery *V1commonDataprimeQuery `json:"dataprimeQuery,omitempty"`

	// Filters List of query filters
	Filters *[]AstFilterSource `json:"filters,omitempty"`

	// GroupNames List of field names by which results are grouped
	GroupNames *[]string `json:"groupNames,omitempty"`

	// StackedGroupName Field name by which results in groups are divided into subgroups
	StackedGroupName *string                `json:"stackedGroupName,omitempty"`
	TimeFrame        *CommonTimeFrameSelect `json:"timeFrame,omitempty"`
}

// WidgetsBarChartLogsQuery A logs variant of the query
type WidgetsBarChartLogsQuery struct {
	Aggregation *CommonLogsAggregation `json:"aggregation,omitempty"`

	// Filters List of filters that narrow down query results
	Filters *[]AstFilterLogsFilter `json:"filters,omitempty"`

	// GroupNames List of field names to group the query results
	GroupNames *[]string `json:"groupNames,omitempty"`

	// GroupNamesFields List of observation fields to group the results
	GroupNamesFields *[]CommonObservationField    `json:"groupNamesFields,omitempty"`
	LuceneQuery      *AstwidgetscommonLuceneQuery `json:"luceneQuery,omitempty"`

	// StackedGroupName Field name by which results are stacked in individual group
	StackedGroupName      *string                 `json:"stackedGroupName,omitempty"`
	StackedGroupNameField *CommonObservationField `json:"stackedGroupNameField,omitempty"`
	TimeFrame             *CommonTimeFrameSelect  `json:"timeFrame,omitempty"`
}

// WidgetsBarChartMetricsQuery A metrics variant of the query
type WidgetsBarChartMetricsQuery struct {
	Aggregation *WidgetscommonAggregation     `json:"aggregation,omitempty"`
	EditorMode  *CommonMetricsQueryEditorMode `json:"editorMode,omitempty"`

	// Filters List of metrics filters
	Filters *[]FilterMetricsFilter `json:"filters,omitempty"`

	// GroupNames List of field names by which metric results are grouped
	GroupNames      *[]string                    `json:"groupNames,omitempty"`
	PromqlQuery     *AstwidgetscommonPromQlQuery `json:"promqlQuery,omitempty"`
	PromqlQueryType *CommonPromQLQueryType       `json:"promqlQueryType,omitempty"`

	// StackedGroupName Field name by which results in groups are divided into subgroups
	StackedGroupName *string                `json:"stackedGroupName,omitempty"`
	TimeFrame        *CommonTimeFrameSelect `json:"timeFrame,omitempty"`
}

// WidgetsBarChartQuery defines model for widgetsBarChartQuery.
type WidgetsBarChartQuery struct {
	// Dataprime A Dataprime variant of the query
	Dataprime *WidgetsBarChartDataprimeQuery `json:"dataprime,omitempty"`

	// Logs A logs variant of the query
	Logs *WidgetsBarChartLogsQuery `json:"logs,omitempty"`

	// Metrics A metrics variant of the query
	Metrics *WidgetsBarChartMetricsQuery `json:"metrics,omitempty"`

	// Spans A spans variant of the query
	Spans *WidgetsBarChartSpansQuery `json:"spans,omitempty"`
}

// WidgetsBarChartSpansQuery A spans variant of the query
type WidgetsBarChartSpansQuery struct {
	Aggregation *CommonSpansAggregation `json:"aggregation,omitempty"`

	// Filters List of span query filters
	Filters *[]FilterSpansFilter `json:"filters,omitempty"`

	// GroupNames List of field names to group the span records
	GroupNames *[]CommonSpanField `json:"groupNames,omitempty"`

	// GroupNamesFields A list of observation fields definitions to group the records by
	GroupNamesFields      *[]CommonSpanObservationField `json:"groupNamesFields,omitempty"`
	LuceneQuery           *AstwidgetscommonLuceneQuery  `json:"luceneQuery,omitempty"`
	StackedGroupName      *CommonSpanField              `json:"stackedGroupName,omitempty"`
	StackedGroupNameField *CommonSpanObservationField   `json:"stackedGroupNameField,omitempty"`
	TimeFrame             *CommonTimeFrameSelect        `json:"timeFrame,omitempty"`
}

// WidgetsBarChartStackDefinition defines model for widgetsBarChartStackDefinition.
type WidgetsBarChartStackDefinition struct {
	// MaxSlicesPerBar How many slices can fit in a single bar
	MaxSlicesPerBar *int32 `json:"maxSlicesPerBar,omitempty"`

	// StackNameTemplate Custom template name of an individual stack
	StackNameTemplate *string `json:"stackNameTemplate,omitempty"`
}

// WidgetsBarValueDisplay defines model for widgetsBarValueDisplay.
type WidgetsBarValueDisplay string

// WidgetsDataTable defines model for widgetsDataTable.
type WidgetsDataTable struct {
	// Columns List of column definitions
	Columns      *[]DataTableColumn     `json:"columns,omitempty"`
	DataModeType *CommonDataModeType    `json:"dataModeType,omitempty"`
	OrderBy      *CommonOrderingField   `json:"orderBy,omitempty"`
	Query        *WidgetsDataTableQuery `json:"query,omitempty"`

	// ResultsPerPage How many results are displayed per table page
	ResultsPerPage *int32           `json:"resultsPerPage,omitempty"`
	RowStyle       *WidgetsRowStyle `json:"rowStyle,omitempty"`
}

// WidgetsDataTableDataprimeQuery A Dataprime variant of the query
type WidgetsDataTableDataprimeQuery struct {
	DataprimeQuery *V1commonDataprimeQuery `json:"dataprimeQuery,omitempty"`

	// Filters List of query filters
	Filters   *[]AstFilterSource     `json:"filters,omitempty"`
	TimeFrame *CommonTimeFrameSelect `json:"timeFrame,omitempty"`
}

// WidgetsDataTableLogsQuery A logs variant of the query
type WidgetsDataTableLogsQuery struct {
	// Filters List of filters that narrow down query results
	Filters     *[]AstFilterLogsFilter       `json:"filters,omitempty"`
	Grouping    *DataTableLogsQueryGrouping  `json:"grouping,omitempty"`
	LuceneQuery *AstwidgetscommonLuceneQuery `json:"luceneQuery,omitempty"`
	TimeFrame   *CommonTimeFrameSelect       `json:"timeFrame,omitempty"`
}

// WidgetsDataTableMetricsQuery A metrics variant of the query
type WidgetsDataTableMetricsQuery struct {
	EditorMode *CommonMetricsQueryEditorMode `json:"editorMode,omitempty"`

	// Filters List of metrics filters
	Filters         *[]FilterMetricsFilter       `json:"filters,omitempty"`
	PromqlQuery     *AstwidgetscommonPromQlQuery `json:"promqlQuery,omitempty"`
	PromqlQueryType *CommonPromQLQueryType       `json:"promqlQueryType,omitempty"`
	TimeFrame       *CommonTimeFrameSelect       `json:"timeFrame,omitempty"`
}

// WidgetsDataTableQuery defines model for widgetsDataTableQuery.
type WidgetsDataTableQuery struct {
	// Dataprime A Dataprime variant of the query
	Dataprime *WidgetsDataTableDataprimeQuery `json:"dataprime,omitempty"`

	// Logs A logs variant of the query
	Logs *WidgetsDataTableLogsQuery `json:"logs,omitempty"`

	// Metrics A metrics variant of the query
	Metrics *WidgetsDataTableMetricsQuery `json:"metrics,omitempty"`

	// Spans A spans variant of the query
	Spans *WidgetsDataTableSpansQuery `json:"spans,omitempty"`
}

// WidgetsDataTableSpansQuery A spans variant of the query
type WidgetsDataTableSpansQuery struct {
	// Filters List of span query filters
	Filters     *[]FilterSpansFilter         `json:"filters,omitempty"`
	Grouping    *DataTableSpansQueryGrouping `json:"grouping,omitempty"`
	LuceneQuery *AstwidgetscommonLuceneQuery `json:"luceneQuery,omitempty"`
	TimeFrame   *CommonTimeFrameSelect       `json:"timeFrame,omitempty"`
}

// WidgetsGauge defines model for widgetsGauge.
type WidgetsGauge struct {
	// CustomUnit Custom unit (requires to have unit field set as 'custom' to take effect)
	CustomUnit   *string             `json:"customUnit,omitempty"`
	DataModeType *CommonDataModeType `json:"dataModeType,omitempty"`

	// Decimal Number indicating the decimal precision of the numeric values, within range 0-15
	Decimal *int32 `json:"decimal,omitempty"`

	// DisplaySeriesName (multigauge display only) Whether to show the series names above the value
	DisplaySeriesName *bool           `json:"displaySeriesName,omitempty"`
	Legend            *CommonLegend   `json:"legend,omitempty"`
	LegendBy          *CommonLegendBy `json:"legendBy,omitempty"`

	// Max A maximum gauge value used in percentage threshold calculation and for visual value representation
	Max *float64 `json:"max,omitempty"`

	// Min A minimum gauge value used in percentage threshold calculation and for visual value representation
	Min   *float64           `json:"min,omitempty"`
	Query *WidgetsGaugeQuery `json:"query,omitempty"`

	// ShowInnerArc Whether to show the inner arc of gauge which graphically represents the value
	ShowInnerArc *bool `json:"showInnerArc,omitempty"`

	// ShowOuterArc Whether to show the outer arc of gauge which graphically represents the min/max range
	ShowOuterArc  *bool                    `json:"showOuterArc,omitempty"`
	ThresholdBy   *WidgetsGaugeThresholdBy `json:"thresholdBy,omitempty"`
	ThresholdType *CommonThresholdType     `json:"thresholdType,omitempty"`

	// Thresholds List of value thresholds, each with a certain color and an optional name label
	Thresholds *[]WidgetsGaugeThreshold `json:"thresholds,omitempty"`
	Unit       *WidgetsGaugeUnit        `json:"unit,omitempty"`
}

// WidgetsGaugeAggregation defines model for widgetsGaugeAggregation.
type WidgetsGaugeAggregation string

// WidgetsGaugeDataprimeQuery A Dataprime variant of the query
type WidgetsGaugeDataprimeQuery struct {
	DataprimeQuery *V1commonDataprimeQuery `json:"dataprimeQuery,omitempty"`

	// Filters List of query filters
	Filters   *[]AstFilterSource     `json:"filters,omitempty"`
	TimeFrame *CommonTimeFrameSelect `json:"timeFrame,omitempty"`
}

// WidgetsGaugeLogsQuery A logs variant of the query
type WidgetsGaugeLogsQuery struct {
	Aggregation *WidgetsGaugeAggregation `json:"aggregation,omitempty"`

	// Filters List of filters that narrow down query results
	Filters *[]AstFilterLogsFilter `json:"filters,omitempty"`

	// GroupBy A list of observation fields by which to group the results
	GroupBy         *[]CommonObservationField    `json:"groupBy,omitempty"`
	LogsAggregation *CommonLogsAggregation       `json:"logsAggregation,omitempty"`
	LuceneQuery     *AstwidgetscommonLuceneQuery `json:"luceneQuery,omitempty"`
	TimeFrame       *CommonTimeFrameSelect       `json:"timeFrame,omitempty"`
}

// WidgetsGaugeMetricsQuery A metrics variant of the query
type WidgetsGaugeMetricsQuery struct {
	Aggregation *WidgetsGaugeAggregation      `json:"aggregation,omitempty"`
	EditorMode  *CommonMetricsQueryEditorMode `json:"editorMode,omitempty"`

	// Filters List of metrics filters
	Filters         *[]FilterMetricsFilter       `json:"filters,omitempty"`
	PromqlQuery     *AstwidgetscommonPromQlQuery `json:"promqlQuery,omitempty"`
	PromqlQueryType *CommonPromQLQueryType       `json:"promqlQueryType,omitempty"`
	TimeFrame       *CommonTimeFrameSelect       `json:"timeFrame,omitempty"`
}

// WidgetsGaugeQuery defines model for widgetsGaugeQuery.
type WidgetsGaugeQuery struct {
	// Dataprime A Dataprime variant of the query
	Dataprime *WidgetsGaugeDataprimeQuery `json:"dataprime,omitempty"`

	// Logs A logs variant of the query
	Logs *WidgetsGaugeLogsQuery `json:"logs,omitempty"`

	// Metrics A metrics variant of the query
	Metrics *WidgetsGaugeMetricsQuery `json:"metrics,omitempty"`

	// Spans A spans variant of the query
	Spans *WidgetsGaugeSpansQuery `json:"spans,omitempty"`
}

// WidgetsGaugeSpansQuery A spans variant of the query
type WidgetsGaugeSpansQuery struct {
	Aggregation *WidgetsGaugeAggregation `json:"aggregation,omitempty"`

	// Filters List of span query filters
	Filters *[]FilterSpansFilter `json:"filters,omitempty"`

	// GroupBy List of field names to group the span records
	GroupBy *[]CommonSpanField `json:"groupBy,omitempty"`

	// GroupBys A list of observation fields to group the records by
	GroupBys         *[]CommonSpanObservationField `json:"groupBys,omitempty"`
	LuceneQuery      *AstwidgetscommonLuceneQuery  `json:"luceneQuery,omitempty"`
	SpansAggregation *CommonSpansAggregation       `json:"spansAggregation,omitempty"`
	TimeFrame        *CommonTimeFrameSelect        `json:"timeFrame,omitempty"`
}

// WidgetsGaugeThreshold Definition of a single gauge threshold
type WidgetsGaugeThreshold struct {
	// Color Color of the threshold
	Color *string `json:"color,omitempty"`

	// From Minimum bound value of the threshold
	From *float64 `json:"from,omitempty"`

	// Label Optional label of the threshold
	Label *string `json:"label,omitempty"`
}

// WidgetsGaugeThresholdBy defines model for widgetsGaugeThresholdBy.
type WidgetsGaugeThresholdBy string

// WidgetsGaugeUnit defines model for widgetsGaugeUnit.
type WidgetsGaugeUnit string

// WidgetsHexagon defines model for widgetsHexagon.
type WidgetsHexagon struct {
	// CustomUnit Custom unit (requires to have unit field set as UNIT_CUSTOM to take effect)
	CustomUnit   *string             `json:"customUnit,omitempty"`
	DataModeType *CommonDataModeType `json:"dataModeType,omitempty"`

	// Decimal Number indicating the decimal precision of the numeric values, within range 0-15
	Decimal  *int32          `json:"decimal,omitempty"`
	Legend   *CommonLegend   `json:"legend,omitempty"`
	LegendBy *CommonLegendBy `json:"legendBy,omitempty"`

	// Max A maximum value used in percentage threshold calculation and for visual value representation
	Max *float64 `json:"max,omitempty"`

	// Min A minimum value used in percentage threshold calculation and for visual value representation
	Min           *float64             `json:"min,omitempty"`
	Query         *WidgetsHexagonQuery `json:"query,omitempty"`
	ThresholdType *CommonThresholdType `json:"thresholdType,omitempty"`

	// Thresholds List of value thresholds, each with a certain color and an optional name label
	Thresholds *[]WidgetscommonThreshold `json:"thresholds,omitempty"`
	Unit       *WidgetscommonUnit        `json:"unit,omitempty"`
}

// WidgetsHexagonDataprimeQuery A Dataprime variant of the query
type WidgetsHexagonDataprimeQuery struct {
	DataprimeQuery *V1commonDataprimeQuery `json:"dataprimeQuery,omitempty"`

	// Filters List of query filters
	Filters   *[]AstFilterSource     `json:"filters,omitempty"`
	TimeFrame *CommonTimeFrameSelect `json:"timeFrame,omitempty"`
}

// WidgetsHexagonLogsQuery A logs variant of the query
type WidgetsHexagonLogsQuery struct {
	// Filters List of filters that narrow down query results
	Filters *[]AstFilterLogsFilter `json:"filters,omitempty"`

	// GroupBy A list of observation fields by which to group the results
	GroupBy         *[]CommonObservationField    `json:"groupBy,omitempty"`
	LogsAggregation *CommonLogsAggregation       `json:"logsAggregation,omitempty"`
	LuceneQuery     *AstwidgetscommonLuceneQuery `json:"luceneQuery,omitempty"`
	TimeFrame       *CommonTimeFrameSelect       `json:"timeFrame,omitempty"`
}

// WidgetsHexagonMetricsQuery A metrics variant of the query
type WidgetsHexagonMetricsQuery struct {
	Aggregation *WidgetscommonAggregation     `json:"aggregation,omitempty"`
	EditorMode  *CommonMetricsQueryEditorMode `json:"editorMode,omitempty"`

	// Filters List of metrics filters
	Filters         *[]FilterMetricsFilter       `json:"filters,omitempty"`
	PromqlQuery     *AstwidgetscommonPromQlQuery `json:"promqlQuery,omitempty"`
	PromqlQueryType *CommonPromQLQueryType       `json:"promqlQueryType,omitempty"`
	TimeFrame       *CommonTimeFrameSelect       `json:"timeFrame,omitempty"`
}

// WidgetsHexagonQuery defines model for widgetsHexagonQuery.
type WidgetsHexagonQuery struct {
	// Dataprime A Dataprime variant of the query
	Dataprime *WidgetsHexagonDataprimeQuery `json:"dataprime,omitempty"`

	// Logs A logs variant of the query
	Logs *WidgetsHexagonLogsQuery `json:"logs,omitempty"`

	// Metrics A metrics variant of the query
	Metrics *WidgetsHexagonMetricsQuery `json:"metrics,omitempty"`

	// Spans A spans variant of the query
	Spans *WidgetsHexagonSpansQuery `json:"spans,omitempty"`
}

// WidgetsHexagonSpansQuery A spans variant of the query
type WidgetsHexagonSpansQuery struct {
	// Filters List of span query filters
	Filters *[]FilterSpansFilter `json:"filters,omitempty"`

	// GroupBy List of field names to group the span records
	GroupBy *[]CommonSpanField `json:"groupBy,omitempty"`

	// GroupBys A list of observation fields to group the records by
	GroupBys         *[]CommonSpanObservationField `json:"groupBys,omitempty"`
	LuceneQuery      *AstwidgetscommonLuceneQuery  `json:"luceneQuery,omitempty"`
	SpansAggregation *CommonSpansAggregation       `json:"spansAggregation,omitempty"`
	TimeFrame        *CommonTimeFrameSelect        `json:"timeFrame,omitempty"`
}

// WidgetsHorizontalBarChart defines model for widgetsHorizontalBarChart.
type WidgetsHorizontalBarChart struct {
	// ColorScheme Applied color scheme, one of the predefined values
	ColorScheme *string         `json:"colorScheme,omitempty"`
	ColorsBy    *CommonColorsBy `json:"colorsBy,omitempty"`

	// CustomUnit Custom unit (requires to have unit field set to custom to take effect)
	CustomUnit   *string             `json:"customUnit,omitempty"`
	DataModeType *CommonDataModeType `json:"dataModeType,omitempty"`

	// Decimal Number indicating the decimal precision of the numeric values, within range 0-15
	Decimal *int32 `json:"decimal,omitempty"`

	// DisplayOnBar Specifies where to display the bar value
	DisplayOnBar *bool `json:"displayOnBar,omitempty"`

	// GroupNameTemplate Custom template name for a bar group, can contain variables
	GroupNameTemplate *string `json:"groupNameTemplate,omitempty"`

	// HashColors Whether to ignore color scheme and derive colors from algorithm
	HashColors *bool         `json:"hashColors,omitempty"`
	Legend     *CommonLegend `json:"legend,omitempty"`

	// MaxBarsPerChart Maximum number of bars on a chart
	MaxBarsPerChart *int32                                    `json:"maxBarsPerChart,omitempty"`
	Query           *WidgetsHorizontalBarChartQuery           `json:"query,omitempty"`
	ScaleType       *CommonScaleType                          `json:"scaleType,omitempty"`
	SortBy          *CommonSortByType                         `json:"sortBy,omitempty"`
	StackDefinition *WidgetsHorizontalBarChartStackDefinition `json:"stackDefinition,omitempty"`
	Unit            *WidgetscommonUnit                        `json:"unit,omitempty"`

	// YAxisMax Number indicating the upper band for y axis
	YAxisMax *float32 `json:"yAxisMax,omitempty"`

	// YAxisMin Number indicating the lower band for y axis
	YAxisMin    *float32                       `json:"yAxisMin,omitempty"`
	YAxisViewBy *HorizontalBarChartYAxisViewBy `json:"yAxisViewBy,omitempty"`
}

// WidgetsHorizontalBarChartDataprimeQuery A Dataprime variant of the query
type WidgetsHorizontalBarChartDataprimeQuery struct {
	DataprimeQuery *V1commonDataprimeQuery `json:"dataprimeQuery,omitempty"`

	// Filters List of query filters
	Filters *[]AstFilterSource `json:"filters,omitempty"`

	// GroupNames List of field names by which results are grouped
	GroupNames *[]string `json:"groupNames,omitempty"`

	// StackedGroupName Field name by which results in groups are divided into subgroups
	StackedGroupName *string                `json:"stackedGroupName,omitempty"`
	TimeFrame        *CommonTimeFrameSelect `json:"timeFrame,omitempty"`
}

// WidgetsHorizontalBarChartLogsQuery A logs variant of the query
type WidgetsHorizontalBarChartLogsQuery struct {
	Aggregation *CommonLogsAggregation `json:"aggregation,omitempty"`

	// Filters List of filters that narrow down query results
	Filters *[]AstFilterLogsFilter `json:"filters,omitempty"`

	// GroupNames List of field names to group the query results
	GroupNames *[]string `json:"groupNames,omitempty"`

	// GroupNamesFields List of observation fields to group the results
	GroupNamesFields *[]CommonObservationField    `json:"groupNamesFields,omitempty"`
	LuceneQuery      *AstwidgetscommonLuceneQuery `json:"luceneQuery,omitempty"`

	// StackedGroupName Field name by which results are stacked in individual group
	StackedGroupName      *string                 `json:"stackedGroupName,omitempty"`
	StackedGroupNameField *CommonObservationField `json:"stackedGroupNameField,omitempty"`
	TimeFrame             *CommonTimeFrameSelect  `json:"timeFrame,omitempty"`
}

// WidgetsHorizontalBarChartMetricsQuery A metrics variant of the query
type WidgetsHorizontalBarChartMetricsQuery struct {
	Aggregation *WidgetscommonAggregation     `json:"aggregation,omitempty"`
	EditorMode  *CommonMetricsQueryEditorMode `json:"editorMode,omitempty"`

	// Filters List of metrics filters
	Filters *[]FilterMetricsFilter `json:"filters,omitempty"`

	// GroupNames List of field names by which metric results are grouped
	GroupNames      *[]string                    `json:"groupNames,omitempty"`
	PromqlQuery     *AstwidgetscommonPromQlQuery `json:"promqlQuery,omitempty"`
	PromqlQueryType *CommonPromQLQueryType       `json:"promqlQueryType,omitempty"`

	// StackedGroupName Field name by which results in groups are divided into subgroups
	StackedGroupName *string                `json:"stackedGroupName,omitempty"`
	TimeFrame        *CommonTimeFrameSelect `json:"timeFrame,omitempty"`
}

// WidgetsHorizontalBarChartQuery defines model for widgetsHorizontalBarChartQuery.
type WidgetsHorizontalBarChartQuery struct {
	// Dataprime A Dataprime variant of the query
	Dataprime *WidgetsHorizontalBarChartDataprimeQuery `json:"dataprime,omitempty"`

	// Logs A logs variant of the query
	Logs *WidgetsHorizontalBarChartLogsQuery `json:"logs,omitempty"`

	// Metrics A metrics variant of the query
	Metrics *WidgetsHorizontalBarChartMetricsQuery `json:"metrics,omitempty"`

	// Spans A spans variant of the query
	Spans *WidgetsHorizontalBarChartSpansQuery `json:"spans,omitempty"`
}

// WidgetsHorizontalBarChartSpansQuery A spans variant of the query
type WidgetsHorizontalBarChartSpansQuery struct {
	Aggregation *CommonSpansAggregation `json:"aggregation,omitempty"`

	// Filters List of span query filters
	Filters *[]FilterSpansFilter `json:"filters,omitempty"`

	// GroupNames List of field names to group the span records
	GroupNames *[]CommonSpanField `json:"groupNames,omitempty"`

	// GroupNamesFields A list of observation fields definitions to group the records by
	GroupNamesFields      *[]CommonSpanObservationField `json:"groupNamesFields,omitempty"`
	LuceneQuery           *AstwidgetscommonLuceneQuery  `json:"luceneQuery,omitempty"`
	StackedGroupName      *CommonSpanField              `json:"stackedGroupName,omitempty"`
	StackedGroupNameField *CommonSpanObservationField   `json:"stackedGroupNameField,omitempty"`
	TimeFrame             *CommonTimeFrameSelect        `json:"timeFrame,omitempty"`
}

// WidgetsHorizontalBarChartStackDefinition defines model for widgetsHorizontalBarChartStackDefinition.
type WidgetsHorizontalBarChartStackDefinition struct {
	// MaxSlicesPerBar How many slices can fit in a single bar
	MaxSlicesPerBar *int32 `json:"maxSlicesPerBar,omitempty"`

	// StackNameTemplate Custom template name of an individual stack
	StackNameTemplate *string `json:"stackNameTemplate,omitempty"`
}

// WidgetsLineChart LineChart represents the configuration of a line chart widget.
type WidgetsLineChart struct {
	Legend *CommonLegend `json:"legend,omitempty"`

	// QueryDefinitions Definitions of widget queries
	QueryDefinitions []LineChartQueryDefinition `json:"queryDefinitions"`
	StackedLine      *LineChartStackedLine      `json:"stackedLine,omitempty"`
	Tooltip          *LineChartTooltip          `json:"tooltip,omitempty"`
}

// WidgetsLineChartDataprimeQuery defines model for widgetsLineChartDataprimeQuery.
type WidgetsLineChartDataprimeQuery struct {
	DataprimeQuery *V1commonDataprimeQuery `json:"dataprimeQuery,omitempty"`

	// Filters List of query filters
	Filters   *[]AstFilterSource     `json:"filters,omitempty"`
	TimeFrame *CommonTimeFrameSelect `json:"timeFrame,omitempty"`
}

// WidgetsLineChartLogsQuery defines model for widgetsLineChartLogsQuery.
type WidgetsLineChartLogsQuery struct {
	// Aggregations List of query aggregation functions, it should contain only one element
	Aggregations *[]CommonLogsAggregation `json:"aggregations,omitempty"`

	// Filters List of filters that narrow down query results
	Filters *[]AstFilterLogsFilter `json:"filters,omitempty"`

	// GroupBy List of field names to group the query results
	GroupBy *[]string `json:"groupBy,omitempty"`

	// GroupBys A list of observation fields to group the query results
	GroupBys    *[]CommonObservationField    `json:"groupBys,omitempty"`
	LuceneQuery *AstwidgetscommonLuceneQuery `json:"luceneQuery,omitempty"`
	TimeFrame   *CommonTimeFrameSelect       `json:"timeFrame,omitempty"`
}

// WidgetsLineChartMetricsQuery defines model for widgetsLineChartMetricsQuery.
type WidgetsLineChartMetricsQuery struct {
	EditorMode *CommonMetricsQueryEditorMode `json:"editorMode,omitempty"`

	// Filters List of metrics filters
	Filters     *[]FilterMetricsFilter       `json:"filters,omitempty"`
	PromqlQuery *AstwidgetscommonPromQlQuery `json:"promqlQuery,omitempty"`
	TimeFrame   *CommonTimeFrameSelect       `json:"timeFrame,omitempty"`
}

// WidgetsLineChartQuery defines model for widgetsLineChartQuery.
type WidgetsLineChartQuery struct {
	Dataprime *WidgetsLineChartDataprimeQuery `json:"dataprime,omitempty"`
	Logs      *WidgetsLineChartLogsQuery      `json:"logs,omitempty"`
	Metrics   *WidgetsLineChartMetricsQuery   `json:"metrics,omitempty"`
	Spans     *WidgetsLineChartSpansQuery     `json:"spans,omitempty"`
}

// WidgetsLineChartResolution defines model for widgetsLineChartResolution.
type WidgetsLineChartResolution struct {
	// BucketsPresented How many buckets to present in the selected timeframe
	BucketsPresented *int32 `json:"bucketsPresented,omitempty"`

	// Interval Interval of value sampling, i.e. every 5 minutes, every 1 second and so on
	Interval *string `json:"interval,omitempty"`
}

// WidgetsLineChartSpansQuery defines model for widgetsLineChartSpansQuery.
type WidgetsLineChartSpansQuery struct {
	// Aggregations List of span query aggregation functions, it should contain only one element
	Aggregations *[]CommonSpansAggregation `json:"aggregations,omitempty"`

	// Filters List of span query filters
	Filters *[]FilterSpansFilter `json:"filters,omitempty"`

	// GroupBy List of field names to group the span records
	GroupBy *[]CommonSpanField `json:"groupBy,omitempty"`

	// GroupBys A list of observation fields to group the records by
	GroupBys    *[]CommonSpanObservationField `json:"groupBys,omitempty"`
	LuceneQuery *AstwidgetscommonLuceneQuery  `json:"luceneQuery,omitempty"`
	TimeFrame   *CommonTimeFrameSelect        `json:"timeFrame,omitempty"`
}

// WidgetsMarkdown defines model for widgetsMarkdown.
type WidgetsMarkdown struct {
	// MarkdownText Markdown text
	MarkdownText *string `json:"markdownText,omitempty"`

	// TooltipText Tooltip text to display on widget hover
	TooltipText *string `json:"tooltipText,omitempty"`
}

// WidgetsPieChart defines model for widgetsPieChart.
type WidgetsPieChart struct {
	// ColorScheme Applied color scheme, one of the predefined values
	ColorScheme *string `json:"colorScheme,omitempty"`

	// CustomUnit Custom unit (requires the unit field to be set to custom to take effect)
	CustomUnit   *string             `json:"customUnit,omitempty"`
	DataModeType *CommonDataModeType `json:"dataModeType,omitempty"`

	// Decimal Number indicating the decimal precision of the numeric values, within range 0-15
	Decimal *int32 `json:"decimal,omitempty"`

	// GroupNameTemplate Custom template name for a group, can contain variables
	GroupNameTemplate *string `json:"groupNameTemplate,omitempty"`

	// HashColors Whether to ignore color scheme and derive colors from algorithm
	HashColors      *bool                    `json:"hashColors,omitempty"`
	LabelDefinition *PieChartLabelDefinition `json:"labelDefinition,omitempty"`
	Legend          *CommonLegend            `json:"legend,omitempty"`

	// MaxSlicesPerChart Maximum number of slices on a chart
	MaxSlicesPerChart *int32 `json:"maxSlicesPerChart,omitempty"`

	// MinSlicePercentage Minimum percentage threshold for slices to be displayed
	MinSlicePercentage *int32                `json:"minSlicePercentage,omitempty"`
	Query              *WidgetsPieChartQuery `json:"query,omitempty"`

	// ShowLegend Indicates whether to display the legend
	ShowLegend      *bool                           `json:"showLegend,omitempty"`
	StackDefinition *WidgetsPieChartStackDefinition `json:"stackDefinition,omitempty"`
	Unit            *WidgetscommonUnit              `json:"unit,omitempty"`
}

// WidgetsPieChartDataprimeQuery A Dataprime variant of the query
type WidgetsPieChartDataprimeQuery struct {
	DataprimeQuery *V1commonDataprimeQuery `json:"dataprimeQuery,omitempty"`

	// Filters List of query filters
	Filters *[]AstFilterSource `json:"filters,omitempty"`

	// GroupNames List of field names by which results are grouped
	GroupNames *[]string `json:"groupNames,omitempty"`

	// StackedGroupName Field name by which results in groups are divided into subgroups
	StackedGroupName *string                `json:"stackedGroupName,omitempty"`
	TimeFrame        *CommonTimeFrameSelect `json:"timeFrame,omitempty"`
}

// WidgetsPieChartLogsQuery A logs variant of the query
type WidgetsPieChartLogsQuery struct {
	Aggregation *CommonLogsAggregation `json:"aggregation,omitempty"`

	// Filters List of filters that narrow down query results
	Filters *[]AstFilterLogsFilter `json:"filters,omitempty"`

	// GroupNames List of field names to group the query results
	GroupNames *[]string `json:"groupNames,omitempty"`

	// GroupNamesFields List of observation fields to group the results
	GroupNamesFields *[]CommonObservationField    `json:"groupNamesFields,omitempty"`
	LuceneQuery      *AstwidgetscommonLuceneQuery `json:"luceneQuery,omitempty"`

	// StackedGroupName Field name by which results are stacked in individual group
	StackedGroupName      *string                 `json:"stackedGroupName,omitempty"`
	StackedGroupNameField *CommonObservationField `json:"stackedGroupNameField,omitempty"`
	TimeFrame             *CommonTimeFrameSelect  `json:"timeFrame,omitempty"`
}

// WidgetsPieChartMetricsQuery A metrics variant of the query
type WidgetsPieChartMetricsQuery struct {
	Aggregation *WidgetscommonAggregation     `json:"aggregation,omitempty"`
	EditorMode  *CommonMetricsQueryEditorMode `json:"editorMode,omitempty"`

	// Filters List of metrics filters
	Filters *[]FilterMetricsFilter `json:"filters,omitempty"`

	// GroupNames List of field names by which metric results are grouped
	GroupNames      *[]string                    `json:"groupNames,omitempty"`
	PromqlQuery     *AstwidgetscommonPromQlQuery `json:"promqlQuery,omitempty"`
	PromqlQueryType *CommonPromQLQueryType       `json:"promqlQueryType,omitempty"`

	// StackedGroupName Field name by which results in groups are divided into subgroups
	StackedGroupName *string                `json:"stackedGroupName,omitempty"`
	TimeFrame        *CommonTimeFrameSelect `json:"timeFrame,omitempty"`
}

// WidgetsPieChartQuery defines model for widgetsPieChartQuery.
type WidgetsPieChartQuery struct {
	// Dataprime A Dataprime variant of the query
	Dataprime *WidgetsPieChartDataprimeQuery `json:"dataprime,omitempty"`

	// Logs A logs variant of the query
	Logs *WidgetsPieChartLogsQuery `json:"logs,omitempty"`

	// Metrics A metrics variant of the query
	Metrics *WidgetsPieChartMetricsQuery `json:"metrics,omitempty"`

	// Spans A spans variant of the query
	Spans *WidgetsPieChartSpansQuery `json:"spans,omitempty"`
}

// WidgetsPieChartSpansQuery A spans variant of the query
type WidgetsPieChartSpansQuery struct {
	Aggregation *CommonSpansAggregation `json:"aggregation,omitempty"`

	// Filters List of span query filters
	Filters *[]FilterSpansFilter `json:"filters,omitempty"`

	// GroupNames List of field names to group the span records
	GroupNames *[]CommonSpanField `json:"groupNames,omitempty"`

	// GroupNamesFields A list of observation fields definitions to group the records by
	GroupNamesFields      *[]CommonSpanObservationField `json:"groupNamesFields,omitempty"`
	LuceneQuery           *AstwidgetscommonLuceneQuery  `json:"luceneQuery,omitempty"`
	StackedGroupName      *CommonSpanField              `json:"stackedGroupName,omitempty"`
	StackedGroupNameField *CommonSpanObservationField   `json:"stackedGroupNameField,omitempty"`
	TimeFrame             *CommonTimeFrameSelect        `json:"timeFrame,omitempty"`
}

// WidgetsPieChartStackDefinition defines model for widgetsPieChartStackDefinition.
type WidgetsPieChartStackDefinition struct {
	// MaxSlicesPerStack How many slices can fit in a single slice stack
	MaxSlicesPerStack *int32 `json:"maxSlicesPerStack,omitempty"`

	// StackNameTemplate Custom template name of an individual slice in the stack
	StackNameTemplate *string `json:"stackNameTemplate,omitempty"`
}

// WidgetsRowStyle defines model for widgetsRowStyle.
type WidgetsRowStyle string

// WidgetscommonAggregation defines model for widgetscommonAggregation.
type WidgetscommonAggregation string

// WidgetscommonThreshold Definition of a single gauge threshold
type WidgetscommonThreshold struct {
	// Color Color of the threshold
	Color *string `json:"color,omitempty"`

	// From Minimum bound value of the threshold
	From *float64 `json:"from,omitempty"`

	// Label Optional label of the threshold
	Label *string `json:"label,omitempty"`
}

// WidgetscommonUnit defines model for widgetscommonUnit.
type WidgetscommonUnit string

// RuleGroupsServiceBulkDeleteRuleGroupParams defines parameters for RuleGroupsServiceBulkDeleteRuleGroup.
type RuleGroupsServiceBulkDeleteRuleGroupParams struct {
	GroupIds *[]string `form:"groupIds,omitempty" json:"groupIds,omitempty"`
}

// Events2MetricServiceListLabelsCardinalityParams defines parameters for Events2MetricServiceListLabelsCardinality.
type Events2MetricServiceListLabelsCardinalityParams struct {
	// SpansQueryLucene lucene query
	SpansQueryLucene *string `form:"spansQuery.lucene,omitempty" json:"spansQuery.lucene,omitempty"`

	// SpansQueryApplicationnameFilters application name filters
	SpansQueryApplicationnameFilters *[]string `form:"spansQuery.applicationnameFilters,omitempty" json:"spansQuery.applicationnameFilters,omitempty"`

	// SpansQuerySubsystemnameFilters subsystem name filters
	SpansQuerySubsystemnameFilters *[]string `form:"spansQuery.subsystemnameFilters,omitempty" json:"spansQuery.subsystemnameFilters,omitempty"`

	// SpansQueryActionFilters action filters
	SpansQueryActionFilters *[]string `form:"spansQuery.actionFilters,omitempty" json:"spansQuery.actionFilters,omitempty"`

	// SpansQueryServiceFilters service filters
	SpansQueryServiceFilters *[]string `form:"spansQuery.serviceFilters,omitempty" json:"spansQuery.serviceFilters,omitempty"`

	// LogsQueryLucene lucene query
	LogsQueryLucene *string `form:"logsQuery.lucene,omitempty" json:"logsQuery.lucene,omitempty"`

	// LogsQueryAlias alias
	LogsQueryAlias *string `form:"logsQuery.alias,omitempty" json:"logsQuery.alias,omitempty"`

	// LogsQueryApplicationnameFilters application name filters
	LogsQueryApplicationnameFilters *[]string `form:"logsQuery.applicationnameFilters,omitempty" json:"logsQuery.applicationnameFilters,omitempty"`

	// LogsQuerySubsystemnameFilters subsystem names filters
	LogsQuerySubsystemnameFilters *[]string `form:"logsQuery.subsystemnameFilters,omitempty" json:"logsQuery.subsystemnameFilters,omitempty"`

	// LogsQuerySeverityFilters severity type filters
	LogsQuerySeverityFilters *[]Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFilters `form:"logsQuery.severityFilters,omitempty" json:"logsQuery.severityFilters,omitempty"`
}

// Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFilters defines parameters for Events2MetricServiceListLabelsCardinality.
type Events2MetricServiceListLabelsCardinalityParamsLogsQuerySeverityFilters string

// EnrichmentServiceRemoveEnrichmentsParams defines parameters for EnrichmentServiceRemoveEnrichments.
type EnrichmentServiceRemoveEnrichmentsParams struct {
	EnrichmentIds []int64 `form:"enrichmentIds" json:"enrichmentIds"`
}

// ContextualDataIntegrationServiceGetContextualDataIntegrationsParams defines parameters for ContextualDataIntegrationServiceGetContextualDataIntegrations.
type ContextualDataIntegrationServiceGetContextualDataIntegrationsParams struct {
	IncludeTestingIntegrations *bool `form:"includeTestingIntegrations,omitempty" json:"includeTestingIntegrations,omitempty"`
}

// ContextualDataIntegrationServiceGetContextualDataIntegrationDefinitionParams defines parameters for ContextualDataIntegrationServiceGetContextualDataIntegrationDefinition.
type ContextualDataIntegrationServiceGetContextualDataIntegrationDefinitionParams struct {
	IncludeTestingIntegrations *bool `form:"includeTestingIntegrations,omitempty" json:"includeTestingIntegrations,omitempty"`
}

// ContextualDataIntegrationServiceGetContextualDataIntegrationDetailsParams defines parameters for ContextualDataIntegrationServiceGetContextualDataIntegrationDetails.
type ContextualDataIntegrationServiceGetContextualDataIntegrationDetailsParams struct {
	IncludeTestingRevisions *bool `form:"includeTestingRevisions,omitempty" json:"includeTestingRevisions,omitempty"`
}

// DashboardsServiceDeleteDashboardParams defines parameters for DashboardsServiceDeleteDashboard.
type DashboardsServiceDeleteDashboardParams struct {
	RequestId string `form:"requestId" json:"requestId"`
}

// DashboardFoldersServiceDeleteDashboardFolderParams defines parameters for DashboardFoldersServiceDeleteDashboardFolder.
type DashboardFoldersServiceDeleteDashboardFolderParams struct {
	RequestId *string `form:"requestId,omitempty" json:"requestId,omitempty"`
}

// DashboardFoldersServiceGetDashboardFolderParams defines parameters for DashboardFoldersServiceGetDashboardFolder.
type DashboardFoldersServiceGetDashboardFolderParams struct {
	RequestId *string `form:"requestId,omitempty" json:"requestId,omitempty"`
}

// ExtensionServiceGetExtensionParams defines parameters for ExtensionServiceGetExtension.
type ExtensionServiceGetExtensionParams struct {
	// IncludeDashboardBinaries On the frontend, we don't need the dashboard binaries.
	// But we need them for deployment in the extensions-service - so it's kind of a temporary argument,
	// As soon all the deployment logic is moved to the extensions-api, it can be removed.
	IncludeDashboardBinaries *bool `form:"includeDashboardBinaries,omitempty" json:"includeDashboardBinaries,omitempty"`
	IncludeTestingRevision   *bool `form:"includeTestingRevision,omitempty" json:"includeTestingRevision,omitempty"`
}

// IncidentsServiceBatchGetIncidentParams defines parameters for IncidentsServiceBatchGetIncident.
type IncidentsServiceBatchGetIncidentParams struct {
	Ids []string `form:"ids" json:"ids"`
}

// IntegrationServiceGetIntegrationsParams defines parameters for IntegrationServiceGetIntegrations.
type IntegrationServiceGetIntegrationsParams struct {
	IncludeTestingRevision *bool `form:"includeTestingRevision,omitempty" json:"includeTestingRevision,omitempty"`
}

// IntegrationServiceGetIntegrationDefinitionParams defines parameters for IntegrationServiceGetIntegrationDefinition.
type IntegrationServiceGetIntegrationDefinitionParams struct {
	IncludeTestingRevision *bool `form:"includeTestingRevision,omitempty" json:"includeTestingRevision,omitempty"`
}

// IntegrationServiceGetRumApplicationVersionDataParams defines parameters for IntegrationServiceGetRumApplicationVersionData.
type IntegrationServiceGetRumApplicationVersionDataParams struct {
	ApplicationName string `form:"applicationName" json:"applicationName"`
}

// IntegrationServiceGetTemplateParams defines parameters for IntegrationServiceGetTemplate.
type IntegrationServiceGetTemplateParams struct {
	IntegrationId            string `form:"integrationId" json:"integrationId"`
	CommonArmParamsLogsUrl   string `form:"commonArmParams.logsUrl" json:"commonArmParams.logsUrl"`
	CommonArmParamsApiKey    string `form:"commonArmParams.apiKey" json:"commonArmParams.apiKey"`
	CommonArmParamsCgxDomain string `form:"commonArmParams.cgxDomain" json:"commonArmParams.cgxDomain"`
}

// IntegrationServiceGetIntegrationDetailsParams defines parameters for IntegrationServiceGetIntegrationDetails.
type IntegrationServiceGetIntegrationDetailsParams struct {
	IncludeTestingRevision *bool `form:"includeTestingRevision,omitempty" json:"includeTestingRevision,omitempty"`
}

// ConnectorsServiceListConnectorsParams defines parameters for ConnectorsServiceListConnectors.
type ConnectorsServiceListConnectorsParams struct {
	ConnectorType *ConnectorsServiceListConnectorsParamsConnectorType `form:"connectorType,omitempty" json:"connectorType,omitempty"`
}

// ConnectorsServiceListConnectorsParamsConnectorType defines parameters for ConnectorsServiceListConnectors.
type ConnectorsServiceListConnectorsParamsConnectorType string

// ConnectorsServiceDeleteConnectorParams defines parameters for ConnectorsServiceDeleteConnector.
type ConnectorsServiceDeleteConnectorParams struct {
	DeprecatedId *string `form:"deprecatedId,omitempty" json:"deprecatedId,omitempty"`

	// IdentifierId The unique identifier automatically generated by the service
	IdentifierId            *string `form:"identifier.id,omitempty" json:"identifier.id,omitempty"`
	IdentifierUserDefinedId *string `form:"identifier.userDefinedId,omitempty" json:"identifier.userDefinedId,omitempty"`
}

// ConnectorsServiceGetConnectorParams defines parameters for ConnectorsServiceGetConnector.
type ConnectorsServiceGetConnectorParams struct {
	DeprecatedId *string `form:"deprecatedId,omitempty" json:"deprecatedId,omitempty"`

	// IdentifierId The unique identifier automatically generated by the service
	IdentifierId            *string `form:"identifier.id,omitempty" json:"identifier.id,omitempty"`
	IdentifierUserDefinedId *string `form:"identifier.userDefinedId,omitempty" json:"identifier.userDefinedId,omitempty"`
}

// ConnectorsServiceBatchGetConnectorsParams defines parameters for ConnectorsServiceBatchGetConnectors.
type ConnectorsServiceBatchGetConnectorsParams struct {
	DeprecatedIds *[]string `form:"deprecatedIds,omitempty" json:"deprecatedIds,omitempty"`
	ConnectorIds  *[]string `form:"connectorIds,omitempty" json:"connectorIds,omitempty"`
}

// ConnectorsServiceBatchGetConnectorSummariesParams defines parameters for ConnectorsServiceBatchGetConnectorSummaries.
type ConnectorsServiceBatchGetConnectorSummariesParams struct {
	DeprecatedIds *[]string `form:"deprecatedIds,omitempty" json:"deprecatedIds,omitempty"`
	ConnectorIds  *[]string `form:"connectorIds,omitempty" json:"connectorIds,omitempty"`
}

// ConnectorsServiceListConnectorSummariesParams defines parameters for ConnectorsServiceListConnectorSummaries.
type ConnectorsServiceListConnectorSummariesParams struct {
	ConnectorType *ConnectorsServiceListConnectorSummariesParamsConnectorType `form:"connectorType,omitempty" json:"connectorType,omitempty"`
}

// ConnectorsServiceListConnectorSummariesParamsConnectorType defines parameters for ConnectorsServiceListConnectorSummaries.
type ConnectorsServiceListConnectorSummariesParamsConnectorType string

// EntitiesServiceListEntitySubTypesParamsEntityType defines parameters for EntitiesServiceListEntitySubTypes.
type EntitiesServiceListEntitySubTypesParamsEntityType string

// PresetsServiceDeleteCustomPresetParams defines parameters for PresetsServiceDeleteCustomPreset.
type PresetsServiceDeleteCustomPresetParams struct {
	DeprecatedIdentifier2Id           *string `form:"deprecatedIdentifier2.id,omitempty" json:"deprecatedIdentifier2.id,omitempty"`
	DeprecatedIdentifier2UserFacingId *string `form:"deprecatedIdentifier2.userFacingId,omitempty" json:"deprecatedIdentifier2.userFacingId,omitempty"`

	// IdentifierId The unique identifier automatically generated by the service
	IdentifierId *string `form:"identifier.id,omitempty" json:"identifier.id,omitempty"`

	// IdentifierUserDefinedId The unique identifier provided by the user
	IdentifierUserDefinedId *string `form:"identifier.userDefinedId,omitempty" json:"identifier.userDefinedId,omitempty"`
}

// PresetsServiceSetCustomPresetAsDefaultParams defines parameters for PresetsServiceSetCustomPresetAsDefault.
type PresetsServiceSetCustomPresetAsDefaultParams struct {
	DeprecatedIdentifier2Id           *string `form:"deprecatedIdentifier2.id,omitempty" json:"deprecatedIdentifier2.id,omitempty"`
	DeprecatedIdentifier2UserFacingId *string `form:"deprecatedIdentifier2.userFacingId,omitempty" json:"deprecatedIdentifier2.userFacingId,omitempty"`

	// IdentifierId The unique identifier automatically generated by the service
	IdentifierId *string `form:"identifier.id,omitempty" json:"identifier.id,omitempty"`

	// IdentifierUserDefinedId The unique identifier provided by the user
	IdentifierUserDefinedId *string `form:"identifier.userDefinedId,omitempty" json:"identifier.userDefinedId,omitempty"`
}

// PresetsServiceGetPresetParams defines parameters for PresetsServiceGetPreset.
type PresetsServiceGetPresetParams struct {
	DeprecatedIdentifier2Id           *string `form:"deprecatedIdentifier2.id,omitempty" json:"deprecatedIdentifier2.id,omitempty"`
	DeprecatedIdentifier2UserFacingId *string `form:"deprecatedIdentifier2.userFacingId,omitempty" json:"deprecatedIdentifier2.userFacingId,omitempty"`

	// IdentifierId The unique identifier automatically generated by the service
	IdentifierId *string `form:"identifier.id,omitempty" json:"identifier.id,omitempty"`

	// IdentifierUserDefinedId The unique identifier provided by the user
	IdentifierUserDefinedId *string `form:"identifier.userDefinedId,omitempty" json:"identifier.userDefinedId,omitempty"`
}

// PresetsServiceSetPresetAsDefaultParams defines parameters for PresetsServiceSetPresetAsDefault.
type PresetsServiceSetPresetAsDefaultParams struct {
	DeprecatedIdentifierId           *string `form:"deprecatedIdentifier.id,omitempty" json:"deprecatedIdentifier.id,omitempty"`
	DeprecatedIdentifierUserFacingId *string `form:"deprecatedIdentifier.userFacingId,omitempty" json:"deprecatedIdentifier.userFacingId,omitempty"`

	// IdentifierId The unique identifier automatically generated by the service
	IdentifierId *string `form:"identifier.id,omitempty" json:"identifier.id,omitempty"`

	// IdentifierUserDefinedId The unique identifier provided by the user
	IdentifierUserDefinedId *string `form:"identifier.userDefinedId,omitempty" json:"identifier.userDefinedId,omitempty"`
}

// PresetsServiceBatchGetPresetsParams defines parameters for PresetsServiceBatchGetPresets.
type PresetsServiceBatchGetPresetsParams struct {
	DeprecatedIds *[]string `form:"deprecatedIds,omitempty" json:"deprecatedIds,omitempty"`
	PresetIds     *[]string `form:"presetIds,omitempty" json:"presetIds,omitempty"`
}

// PresetsServiceGetDefaultPresetSummaryParams defines parameters for PresetsServiceGetDefaultPresetSummary.
type PresetsServiceGetDefaultPresetSummaryParams struct {
	ConnectorType        *PresetsServiceGetDefaultPresetSummaryParamsConnectorType `form:"connectorType,omitempty" json:"connectorType,omitempty"`
	DeprecatedEntityType *string                                                   `form:"deprecatedEntityType,omitempty" json:"deprecatedEntityType,omitempty"`
	EntityType           *PresetsServiceGetDefaultPresetSummaryParamsEntityType    `form:"entityType,omitempty" json:"entityType,omitempty"`
}

// PresetsServiceGetDefaultPresetSummaryParamsConnectorType defines parameters for PresetsServiceGetDefaultPresetSummary.
type PresetsServiceGetDefaultPresetSummaryParamsConnectorType string

// PresetsServiceGetDefaultPresetSummaryParamsEntityType defines parameters for PresetsServiceGetDefaultPresetSummary.
type PresetsServiceGetDefaultPresetSummaryParamsEntityType string

// PresetsServiceListPresetSummariesParams defines parameters for PresetsServiceListPresetSummaries.
type PresetsServiceListPresetSummariesParams struct {
	ConnectorType        *PresetsServiceListPresetSummariesParamsConnectorType `form:"connectorType,omitempty" json:"connectorType,omitempty"`
	DeprecatedEntityType *string                                               `form:"deprecatedEntityType,omitempty" json:"deprecatedEntityType,omitempty"`
	EntityType           *PresetsServiceListPresetSummariesParamsEntityType    `form:"entityType,omitempty" json:"entityType,omitempty"`
}

// PresetsServiceListPresetSummariesParamsConnectorType defines parameters for PresetsServiceListPresetSummaries.
type PresetsServiceListPresetSummariesParamsConnectorType string

// PresetsServiceListPresetSummariesParamsEntityType defines parameters for PresetsServiceListPresetSummaries.
type PresetsServiceListPresetSummariesParamsEntityType string

// PresetsServiceGetSystemDefaultPresetSummaryParams defines parameters for PresetsServiceGetSystemDefaultPresetSummary.
type PresetsServiceGetSystemDefaultPresetSummaryParams struct {
	ConnectorType        *PresetsServiceGetSystemDefaultPresetSummaryParamsConnectorType `form:"connectorType,omitempty" json:"connectorType,omitempty"`
	DeprecatedEntityType *string                                                         `form:"deprecatedEntityType,omitempty" json:"deprecatedEntityType,omitempty"`
	EntityType           *PresetsServiceGetSystemDefaultPresetSummaryParamsEntityType    `form:"entityType,omitempty" json:"entityType,omitempty"`
}

// PresetsServiceGetSystemDefaultPresetSummaryParamsConnectorType defines parameters for PresetsServiceGetSystemDefaultPresetSummary.
type PresetsServiceGetSystemDefaultPresetSummaryParamsConnectorType string

// PresetsServiceGetSystemDefaultPresetSummaryParamsEntityType defines parameters for PresetsServiceGetSystemDefaultPresetSummary.
type PresetsServiceGetSystemDefaultPresetSummaryParamsEntityType string

// GlobalRoutersServiceListGlobalRoutersParams defines parameters for GlobalRoutersServiceListGlobalRouters.
type GlobalRoutersServiceListGlobalRoutersParams struct {
	DeprecatedEntityType *string                                                `form:"deprecatedEntityType,omitempty" json:"deprecatedEntityType,omitempty"`
	EntityType           *GlobalRoutersServiceListGlobalRoutersParamsEntityType `form:"entityType,omitempty" json:"entityType,omitempty"`
}

// GlobalRoutersServiceListGlobalRoutersParamsEntityType defines parameters for GlobalRoutersServiceListGlobalRouters.
type GlobalRoutersServiceListGlobalRoutersParamsEntityType string

// GlobalRoutersServiceDeleteGlobalRouterParams defines parameters for GlobalRoutersServiceDeleteGlobalRouter.
type GlobalRoutersServiceDeleteGlobalRouterParams struct {
	DeprecatedIdentifierId           *string `form:"deprecatedIdentifier.id,omitempty" json:"deprecatedIdentifier.id,omitempty"`
	DeprecatedIdentifierUserFacingId *string `form:"deprecatedIdentifier.userFacingId,omitempty" json:"deprecatedIdentifier.userFacingId,omitempty"`

	// IdentifierId The unique identifier automatically generated by the service
	IdentifierId *string `form:"identifier.id,omitempty" json:"identifier.id,omitempty"`

	// IdentifierUserDefinedId The unique identifier provided by the user
	IdentifierUserDefinedId *string `form:"identifier.userDefinedId,omitempty" json:"identifier.userDefinedId,omitempty"`
}

// GlobalRoutersServiceGetGlobalRouterParams defines parameters for GlobalRoutersServiceGetGlobalRouter.
type GlobalRoutersServiceGetGlobalRouterParams struct {
	DeprecatedIdentifierId           *string `form:"deprecatedIdentifier.id,omitempty" json:"deprecatedIdentifier.id,omitempty"`
	DeprecatedIdentifierUserFacingId *string `form:"deprecatedIdentifier.userFacingId,omitempty" json:"deprecatedIdentifier.userFacingId,omitempty"`

	// IdentifierId The unique identifier automatically generated by the service
	IdentifierId *string `form:"identifier.id,omitempty" json:"identifier.id,omitempty"`

	// IdentifierUserDefinedId The unique identifier provided by the user
	IdentifierUserDefinedId *string `form:"identifier.userDefinedId,omitempty" json:"identifier.userDefinedId,omitempty"`
}

// GlobalRoutersServiceBatchGetGlobalRoutersParams defines parameters for GlobalRoutersServiceBatchGetGlobalRouters.
type GlobalRoutersServiceBatchGetGlobalRoutersParams struct {
	GlobalRouterIds *[]string `form:"globalRouterIds,omitempty" json:"globalRouterIds,omitempty"`
}

// OutgoingWebhooksServiceListOutgoingWebhooksParams defines parameters for OutgoingWebhooksServiceListOutgoingWebhooks.
type OutgoingWebhooksServiceListOutgoingWebhooksParams struct {
	Type OutgoingWebhooksServiceListOutgoingWebhooksParamsType `form:"type" json:"type"`
}

// OutgoingWebhooksServiceListOutgoingWebhooksParamsType defines parameters for OutgoingWebhooksServiceListOutgoingWebhooks.
type OutgoingWebhooksServiceListOutgoingWebhooksParamsType string

// OutgoingWebhooksServiceGetOutgoingWebhookTypeDetailsParamsType defines parameters for OutgoingWebhooksServiceGetOutgoingWebhookTypeDetails.
type OutgoingWebhooksServiceGetOutgoingWebhookTypeDetailsParamsType string

// PoliciesServiceGetCompanyPoliciesParams defines parameters for PoliciesServiceGetCompanyPolicies.
type PoliciesServiceGetCompanyPoliciesParams struct {
	EnabledOnly bool                                              `form:"enabledOnly" json:"enabledOnly"`
	SourceType  PoliciesServiceGetCompanyPoliciesParamsSourceType `form:"sourceType" json:"sourceType"`
}

// PoliciesServiceGetCompanyPoliciesParamsSourceType defines parameters for PoliciesServiceGetCompanyPolicies.
type PoliciesServiceGetCompanyPoliciesParamsSourceType string

// ScopesServiceGetTeamScopesByIdsParams defines parameters for ScopesServiceGetTeamScopesByIds.
type ScopesServiceGetTeamScopesByIdsParams struct {
	Ids []string `form:"ids" json:"ids"`
}

// SlosServiceBatchGetSlosParams defines parameters for SlosServiceBatchGetSlos.
type SlosServiceBatchGetSlosParams struct {
	Ids []string `form:"ids" json:"ids"`
}

// SamlConfigurationServiceGetConfigurationParams defines parameters for SamlConfigurationServiceGetConfiguration.
type SamlConfigurationServiceGetConfigurationParams struct {
	TeamId int64 `form:"teamId" json:"teamId"`
}

// SamlConfigurationServiceGetSPParametersParams defines parameters for SamlConfigurationServiceGetSPParameters.
type SamlConfigurationServiceGetSPParametersParams struct {
	TeamId int64 `form:"teamId" json:"teamId"`
}

// TeamPermissionsMgmtServiceGetTeamGroupByNameParams defines parameters for TeamPermissionsMgmtServiceGetTeamGroupByName.
type TeamPermissionsMgmtServiceGetTeamGroupByNameParams struct {
	Name *string `form:"name,omitempty" json:"name,omitempty"`
}

// TeamPermissionsMgmtServiceGetTeamGroupsParams defines parameters for TeamPermissionsMgmtServiceGetTeamGroups.
type TeamPermissionsMgmtServiceGetTeamGroupsParams struct {
	TeamIdId *int64 `form:"teamId.id,omitempty" json:"teamId.id,omitempty"`
}

// TeamPermissionsMgmtServiceRemoveUsersFromTeamGroupsParams defines parameters for TeamPermissionsMgmtServiceRemoveUsersFromTeamGroups.
type TeamPermissionsMgmtServiceRemoveUsersFromTeamGroupsParams struct {
	TeamIdId *int64 `form:"teamId.id,omitempty" json:"teamId.id,omitempty"`
}

// TeamPermissionsMgmtServiceGetGroupUsersParams defines parameters for TeamPermissionsMgmtServiceGetGroupUsers.
type TeamPermissionsMgmtServiceGetGroupUsersParams struct {
	// PageSize / Pagination size. Defaults to 100 if empty
	PageSize *int64 `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// PageToken / Optional pagination continuation token
	// / Contains an encoded cursor
	PageToken *string `form:"pageToken,omitempty" json:"pageToken,omitempty"`
}

// ViewsFoldersServiceReplaceViewFolderJSONBody defines parameters for ViewsFoldersServiceReplaceViewFolder.
type ViewsFoldersServiceReplaceViewFolderJSONBody struct {
	// Name Folder name
	Name string `json:"name"`
}

// ViewsServiceReplaceViewJSONBody defines parameters for ViewsServiceReplaceView.
type ViewsServiceReplaceViewJSONBody struct {
	Filters *V1SelectedFilters `json:"filters,omitempty"`

	// FolderId Unique identifier for folders
	FolderId      *string `json:"folderId,omitempty"`
	IsCompactMode *bool               `json:"isCompactMode,omitempty"`

	// Name View name
	Name          string          `json:"name"`
	SearchQuery   *V1SearchQuery  `json:"searchQuery,omitempty"`
	TimeSelection V1TimeSelection `json:"timeSelection"`
}

// DataUsageServiceGetDataUsageParams defines parameters for DataUsageServiceGetDataUsage.
type DataUsageServiceGetDataUsageParams struct {
	DateRangeFromDate *time.Time `form:"dateRange.fromDate,omitempty" json:"dateRange.fromDate,omitempty"`
	DateRangeToDate   *time.Time `form:"dateRange.toDate,omitempty" json:"dateRange.toDate,omitempty"`

	// Resolution Aggregation resolution. Minimum supported value is 1h
	//
	// Do note that to avoid overloading the service we enforce resolution limits
	// that depend on the server configuration. This is configured by the server.
	// This means that, for instance, requests with 1 hour resolution for an interval of 30 days will be rejected but accepted for 1 day interval.
	//
	// Resolution must be between 1 hour and date_range interval
	Resolution *string `form:"resolution,omitempty" json:"resolution,omitempty"`

	// Aggregate List of aggregate parameters.
	// i.e. if AggregateBy is [AGGREGATE_BY_PILLAR, AGGREGATE_BY_PRIORITY], then the response will stream data aggregated by pillar and priority.
	Aggregate *[]DataUsageServiceGetDataUsageParamsAggregate `form:"aggregate,omitempty" json:"aggregate,omitempty"`
}

// DataUsageServiceGetDataUsageParamsAggregate defines parameters for DataUsageServiceGetDataUsage.
type DataUsageServiceGetDataUsageParamsAggregate string

// DataUsageServiceGetLogsCountParams defines parameters for DataUsageServiceGetLogsCount.
type DataUsageServiceGetLogsCountParams struct {
	DateRangeFromDate *time.Time `form:"dateRange.fromDate,omitempty" json:"dateRange.fromDate,omitempty"`
	DateRangeToDate   *time.Time `form:"dateRange.toDate,omitempty" json:"dateRange.toDate,omitempty"`

	// Resolution Aggregation resolution with second precision.
	//
	// Resolution must be between 1 second and date_range interval
	Resolution         *string   `form:"resolution,omitempty" json:"resolution,omitempty"`
	FiltersApplication *[]string `form:"filters.application,omitempty" json:"filters.application,omitempty"`
	FiltersSubsystem   *[]string `form:"filters.subsystem,omitempty" json:"filters.subsystem,omitempty"`
}

// DataUsageServiceGetSpansCountParams defines parameters for DataUsageServiceGetSpansCount.
type DataUsageServiceGetSpansCountParams struct {
	DateRangeFromDate *time.Time `form:"dateRange.fromDate,omitempty" json:"dateRange.fromDate,omitempty"`
	DateRangeToDate   *time.Time `form:"dateRange.toDate,omitempty" json:"dateRange.toDate,omitempty"`

	// Resolution Aggregation resolution with second precision.
	//
	// Resolution must be between 1 second and date_range interval
	Resolution         *string   `form:"resolution,omitempty" json:"resolution,omitempty"`
	FiltersApplication *[]string `form:"filters.application,omitempty" json:"filters.application,omitempty"`
	FiltersSubsystem   *[]string `form:"filters.subsystem,omitempty" json:"filters.subsystem,omitempty"`
}

// AlertDefsServiceSetActiveParams defines parameters for AlertDefsServiceSetActive.
type AlertDefsServiceSetActiveParams struct {
	// Active Whether to enable or disable the alert definition
	Active bool `form:"active" json:"active"`
}

// AlertEventServiceGetAlertEventsStatsParams defines parameters for AlertEventServiceGetAlertEventsStats.
type AlertEventServiceGetAlertEventsStatsParams struct {
	Ids *[]string `form:"ids,omitempty" json:"ids,omitempty"`
}

// AlertEventServiceGetAlertEventParams defines parameters for AlertEventServiceGetAlertEvent.
type AlertEventServiceGetAlertEventParams struct {
	PaginationPageSize  *int64  `form:"pagination.pageSize,omitempty" json:"pagination.pageSize,omitempty"`
	PaginationPageToken *string `form:"pagination.pageToken,omitempty" json:"pagination.pageToken,omitempty"`
}

// EventsServiceListEventsParams defines parameters for EventsServiceListEvents.
type EventsServiceListEventsParams struct {
	FilterTimestampFrom                  time.Time                                                          `form:"filter.timestamp.from" json:"filter.timestamp.from"`
	FilterTimestampTo                    time.Time                                                          `form:"filter.timestamp.to" json:"filter.timestamp.to"`
	FilterCxEventTypes                   []string                                                           `form:"filter.cxEventTypes" json:"filter.cxEventTypes"`
	FilterCxEventKeys                    []string                                                           `form:"filter.cxEventKeys" json:"filter.cxEventKeys"`
	FilterCxEventMetadataFiltersOperator *EventsServiceListEventsParamsFilterCxEventMetadataFiltersOperator `form:"filter.cxEventMetadataFilters.operator,omitempty" json:"filter.cxEventMetadataFilters.operator,omitempty"`
	PaginationPageSize                   *int64                                                             `form:"pagination.pageSize,omitempty" json:"pagination.pageSize,omitempty"`
	PaginationPageToken                  *string                                                            `form:"pagination.pageToken,omitempty" json:"pagination.pageToken,omitempty"`
}

// EventsServiceListEventsParamsFilterCxEventMetadataFiltersOperator defines parameters for EventsServiceListEvents.
type EventsServiceListEventsParamsFilterCxEventMetadataFiltersOperator string

// EventsServiceBatchGetEventParams defines parameters for EventsServiceBatchGetEvent.
type EventsServiceBatchGetEventParams struct {
	Ids                 *[]string `form:"ids,omitempty" json:"ids,omitempty"`
	PaginationPageSize  *int64    `form:"pagination.pageSize,omitempty" json:"pagination.pageSize,omitempty"`
	PaginationPageToken *string   `form:"pagination.pageToken,omitempty" json:"pagination.pageToken,omitempty"`
	FilterTimestampFrom time.Time `form:"filter.timestamp.from" json:"filter.timestamp.from"`
	FilterTimestampTo   time.Time `form:"filter.timestamp.to" json:"filter.timestamp.to"`
}

// EventsServiceGetEventParams defines parameters for EventsServiceGetEvent.
type EventsServiceGetEventParams struct {
	PaginationPageSize  *int64  `form:"pagination.pageSize,omitempty" json:"pagination.pageSize,omitempty"`
	PaginationPageToken *string `form:"pagination.pageToken,omitempty" json:"pagination.pageToken,omitempty"`
}

// EventsServiceListEventsCountParams defines parameters for EventsServiceListEventsCount.
type EventsServiceListEventsCountParams struct {
	FilterTimestampFrom                  time.Time                                                               `form:"filter.timestamp.from" json:"filter.timestamp.from"`
	FilterTimestampTo                    time.Time                                                               `form:"filter.timestamp.to" json:"filter.timestamp.to"`
	FilterCxEventTypes                   []string                                                                `form:"filter.cxEventTypes" json:"filter.cxEventTypes"`
	FilterCxEventKeys                    []string                                                                `form:"filter.cxEventKeys" json:"filter.cxEventKeys"`
	FilterCxEventMetadataFiltersOperator *EventsServiceListEventsCountParamsFilterCxEventMetadataFiltersOperator `form:"filter.cxEventMetadataFilters.operator,omitempty" json:"filter.cxEventMetadataFilters.operator,omitempty"`
}

// EventsServiceListEventsCountParamsFilterCxEventMetadataFiltersOperator defines parameters for EventsServiceListEventsCount.
type EventsServiceListEventsCountParamsFilterCxEventMetadataFiltersOperator string

// EventsServiceGetEventsStatisticsParams defines parameters for EventsServiceGetEventsStatistics.
type EventsServiceGetEventsStatisticsParams struct {
	FilterTimestampFrom                  time.Time                                                                   `form:"filter.timestamp.from" json:"filter.timestamp.from"`
	FilterTimestampTo                    time.Time                                                                   `form:"filter.timestamp.to" json:"filter.timestamp.to"`
	FilterCxEventTypes                   []string                                                                    `form:"filter.cxEventTypes" json:"filter.cxEventTypes"`
	FilterCxEventKeys                    []string                                                                    `form:"filter.cxEventKeys" json:"filter.cxEventKeys"`
	FilterCxEventMetadataFiltersOperator *EventsServiceGetEventsStatisticsParamsFilterCxEventMetadataFiltersOperator `form:"filter.cxEventMetadataFilters.operator,omitempty" json:"filter.cxEventMetadataFilters.operator,omitempty"`
}

// EventsServiceGetEventsStatisticsParamsFilterCxEventMetadataFiltersOperator defines parameters for EventsServiceGetEventsStatistics.
type EventsServiceGetEventsStatisticsParamsFilterCxEventMetadataFiltersOperator string

// RuleGroupsServiceGetRuleGroupModelMappingJSONRequestBody defines body for RuleGroupsServiceGetRuleGroupModelMapping for application/json ContentType.
type RuleGroupsServiceGetRuleGroupModelMappingJSONRequestBody = V1GetRuleGroupModelMappingRequest

// RuleGroupsServiceCreateRuleGroupJSONRequestBody defines body for RuleGroupsServiceCreateRuleGroup for application/json ContentType.
type RuleGroupsServiceCreateRuleGroupJSONRequestBody = V1CreateRuleGroupRequest

// RuleGroupsServiceGetCompanyUsageLimitsJSONRequestBody defines body for RuleGroupsServiceGetCompanyUsageLimits for application/json ContentType.
type RuleGroupsServiceGetCompanyUsageLimitsJSONRequestBody = V1GetCompanyUsageLimitsRequest

// RuleGroupsServiceUpdateRuleGroupJSONRequestBody defines body for RuleGroupsServiceUpdateRuleGroup for application/json ContentType.
type RuleGroupsServiceUpdateRuleGroupJSONRequestBody = V1CreateRuleGroupRequest

// Events2MetricServiceCreateE2MJSONRequestBody defines body for Events2MetricServiceCreateE2M for application/json ContentType.
type Events2MetricServiceCreateE2MJSONRequestBody = V2E2MCreateParams

// Events2MetricServiceReplaceE2MJSONRequestBody defines body for Events2MetricServiceReplaceE2M for application/json ContentType.
type Events2MetricServiceReplaceE2MJSONRequestBody = V2E2M

// Events2MetricServiceAtomicBatchExecuteE2MJSONRequestBody defines body for Events2MetricServiceAtomicBatchExecuteE2M for application/json ContentType.
type Events2MetricServiceAtomicBatchExecuteE2MJSONRequestBody = V2AtomicBatchExecuteE2MRequest

// EnrichmentServiceAddEnrichmentsJSONRequestBody defines body for EnrichmentServiceAddEnrichments for application/json ContentType.
type EnrichmentServiceAddEnrichmentsJSONRequestBody = V1AddEnrichmentsRequest

// EnrichmentServiceAtomicOverwriteEnrichmentsJSONRequestBody defines body for EnrichmentServiceAtomicOverwriteEnrichments for application/json ContentType.
type EnrichmentServiceAtomicOverwriteEnrichmentsJSONRequestBody = V1AtomicOverwriteEnrichmentsRequest

// MetricsTcoServiceAddJSONRequestBody defines body for MetricsTcoServiceAdd for application/json ContentType.
type MetricsTcoServiceAddJSONRequestBody = MetricsTcoAddRequest

// MetricsTcoServiceDeleteJSONRequestBody defines body for MetricsTcoServiceDelete for application/json ContentType.
type MetricsTcoServiceDeleteJSONRequestBody = MetricsTcoDeleteRequest

// ContextualDataIntegrationServiceSaveContextualDataIntegrationJSONRequestBody defines body for ContextualDataIntegrationServiceSaveContextualDataIntegration for application/json ContentType.
type ContextualDataIntegrationServiceSaveContextualDataIntegrationJSONRequestBody = V1SaveContextualDataIntegrationRequest

// ContextualDataIntegrationServiceUpdateContextualDataIntegrationJSONRequestBody defines body for ContextualDataIntegrationServiceUpdateContextualDataIntegration for application/json ContentType.
type ContextualDataIntegrationServiceUpdateContextualDataIntegrationJSONRequestBody = V1UpdateContextualDataIntegrationRequest

// ContextualDataIntegrationServiceTestContextualDataIntegrationJSONRequestBody defines body for ContextualDataIntegrationServiceTestContextualDataIntegration for application/json ContentType.
type ContextualDataIntegrationServiceTestContextualDataIntegrationJSONRequestBody = V1TestContextualDataIntegrationRequest

// CustomEnrichmentServiceCreateCustomEnrichmentJSONRequestBody defines body for CustomEnrichmentServiceCreateCustomEnrichment for application/json ContentType.
type CustomEnrichmentServiceCreateCustomEnrichmentJSONRequestBody = V1CreateCustomEnrichmentRequest

// CustomEnrichmentServiceUpdateCustomEnrichmentJSONRequestBody defines body for CustomEnrichmentServiceUpdateCustomEnrichment for application/json ContentType.
type CustomEnrichmentServiceUpdateCustomEnrichmentJSONRequestBody = V1UpdateCustomEnrichmentRequest

// DashboardsServiceCreateDashboardJSONRequestBody defines body for DashboardsServiceCreateDashboard for application/json ContentType.
type DashboardsServiceCreateDashboardJSONRequestBody = ServicesCreateDashboardRequest

// DashboardsServiceReplaceDashboardJSONRequestBody defines body for DashboardsServiceReplaceDashboard for application/json ContentType.
type DashboardsServiceReplaceDashboardJSONRequestBody = ServicesReplaceDashboardRequest

// DashboardsServiceReplaceDefaultDashboardJSONRequestBody defines body for DashboardsServiceReplaceDefaultDashboard for application/json ContentType.
type DashboardsServiceReplaceDefaultDashboardJSONRequestBody = DashboardsServiceReplaceDefaultDashboardBody

// DashboardsServiceAssignDashboardFolderJSONRequestBody defines body for DashboardsServiceAssignDashboardFolder for application/json ContentType.
type DashboardsServiceAssignDashboardFolderJSONRequestBody = DashboardsServiceAssignDashboardFolderBody

// DashboardsServicePinDashboardJSONRequestBody defines body for DashboardsServicePinDashboard for application/json ContentType.
type DashboardsServicePinDashboardJSONRequestBody = DashboardsServicePinDashboardBody

// DashboardsServiceUnpinDashboardJSONRequestBody defines body for DashboardsServiceUnpinDashboard for application/json ContentType.
type DashboardsServiceUnpinDashboardJSONRequestBody = DashboardsServiceUnpinDashboardBody

// DashboardFoldersServiceCreateDashboardFolderJSONRequestBody defines body for DashboardFoldersServiceCreateDashboardFolder for application/json ContentType.
type DashboardFoldersServiceCreateDashboardFolderJSONRequestBody = ServicesCreateDashboardFolderRequest

// DashboardFoldersServiceReplaceDashboardFolderJSONRequestBody defines body for DashboardFoldersServiceReplaceDashboardFolder for application/json ContentType.
type DashboardFoldersServiceReplaceDashboardFolderJSONRequestBody = ServicesReplaceDashboardFolderRequest

// ExtensionDeploymentServiceDeployExtensionJSONRequestBody defines body for ExtensionDeploymentServiceDeployExtension for application/json ContentType.
type ExtensionDeploymentServiceDeployExtensionJSONRequestBody = V1DeployExtensionRequest

// ExtensionDeploymentServiceUndeployExtensionJSONRequestBody defines body for ExtensionDeploymentServiceUndeployExtension for application/json ContentType.
type ExtensionDeploymentServiceUndeployExtensionJSONRequestBody = V1UndeployExtensionRequest

// ExtensionDeploymentServiceUpdateExtensionJSONRequestBody defines body for ExtensionDeploymentServiceUpdateExtension for application/json ContentType.
type ExtensionDeploymentServiceUpdateExtensionJSONRequestBody = V1UpdateExtensionRequest

// ExtensionTestingServiceCleanupTestingRevisionJSONRequestBody defines body for ExtensionTestingServiceCleanupTestingRevision for application/json ContentType.
type ExtensionTestingServiceCleanupTestingRevisionJSONRequestBody = V1CleanupTestingRevisionRequest

// ExtensionTestingServiceInitializeTestingRevisionJSONRequestBody defines body for ExtensionTestingServiceInitializeTestingRevision for application/json ContentType.
type ExtensionTestingServiceInitializeTestingRevisionJSONRequestBody = V1InitializeTestingRevisionRequest

// ExtensionTestingServiceTestExtensionRevisionJSONRequestBody defines body for ExtensionTestingServiceTestExtensionRevision for application/json ContentType.
type ExtensionTestingServiceTestExtensionRevisionJSONRequestBody = V1TestExtensionRevisionRequest

// ExtensionServiceGetAllExtensionsJSONRequestBody defines body for ExtensionServiceGetAllExtensions for application/json ContentType.
type ExtensionServiceGetAllExtensionsJSONRequestBody = V1GetAllExtensionsRequest

// IncidentsServiceListIncidentsJSONRequestBody defines body for IncidentsServiceListIncidents for application/json ContentType.
type IncidentsServiceListIncidentsJSONRequestBody = V1ListIncidentsRequest

// IncidentsServiceAcknowledgeIncidentsJSONRequestBody defines body for IncidentsServiceAcknowledgeIncidents for application/json ContentType.
type IncidentsServiceAcknowledgeIncidentsJSONRequestBody = V1AcknowledgeIncidentsRequest

// IncidentsServiceAssignIncidentsJSONRequestBody defines body for IncidentsServiceAssignIncidents for application/json ContentType.
type IncidentsServiceAssignIncidentsJSONRequestBody = V1AssignIncidentsRequest

// IncidentsServiceCloseIncidentsJSONRequestBody defines body for IncidentsServiceCloseIncidents for application/json ContentType.
type IncidentsServiceCloseIncidentsJSONRequestBody = V1CloseIncidentsRequest

// IncidentsServiceGetFilterValuesJSONRequestBody defines body for IncidentsServiceGetFilterValues for application/json ContentType.
type IncidentsServiceGetFilterValuesJSONRequestBody = V1GetFilterValuesRequest

// IncidentsServiceListIncidentEventsJSONRequestBody defines body for IncidentsServiceListIncidentEvents for application/json ContentType.
type IncidentsServiceListIncidentEventsJSONRequestBody = V1ListIncidentEventsRequest

// IncidentsServiceListIncidentEventsFilterValuesJSONRequestBody defines body for IncidentsServiceListIncidentEventsFilterValues for application/json ContentType.
type IncidentsServiceListIncidentEventsFilterValuesJSONRequestBody = V1ListIncidentEventsFilterValuesRequest

// IncidentsServiceListIncidentEventsTotalCountJSONRequestBody defines body for IncidentsServiceListIncidentEventsTotalCount for application/json ContentType.
type IncidentsServiceListIncidentEventsTotalCountJSONRequestBody = V1ListIncidentEventsTotalCountRequest

// IncidentsServiceListIncidentAggregationsJSONRequestBody defines body for IncidentsServiceListIncidentAggregations for application/json ContentType.
type IncidentsServiceListIncidentAggregationsJSONRequestBody = V1ListIncidentAggregationsRequest

// IncidentsServiceResolveIncidentsJSONRequestBody defines body for IncidentsServiceResolveIncidents for application/json ContentType.
type IncidentsServiceResolveIncidentsJSONRequestBody = V1ResolveIncidentsRequest

// IncidentsServiceUnassignIncidentsJSONRequestBody defines body for IncidentsServiceUnassignIncidents for application/json ContentType.
type IncidentsServiceUnassignIncidentsJSONRequestBody = V1UnassignIncidentsRequest

// IntegrationServiceSaveIntegrationJSONRequestBody defines body for IntegrationServiceSaveIntegration for application/json ContentType.
type IntegrationServiceSaveIntegrationJSONRequestBody = V1SaveIntegrationRequest

// IntegrationServiceUpdateIntegrationJSONRequestBody defines body for IntegrationServiceUpdateIntegration for application/json ContentType.
type IntegrationServiceUpdateIntegrationJSONRequestBody = V1UpdateIntegrationRequest

// IntegrationServiceTestIntegrationJSONRequestBody defines body for IntegrationServiceTestIntegration for application/json ContentType.
type IntegrationServiceTestIntegrationJSONRequestBody = V1TestIntegrationRequest

// IntegrationServiceSyncRumDataJSONRequestBody defines body for IntegrationServiceSyncRumData for application/json ContentType.
type IntegrationServiceSyncRumDataJSONRequestBody = V1SyncRumDataRequest

// MetricsConfiguratorPublicServiceConfigureTenantJSONRequestBody defines body for MetricsConfiguratorPublicServiceConfigureTenant for application/json ContentType.
type MetricsConfiguratorPublicServiceConfigureTenantJSONRequestBody = MetricsConfiguratorConfigureTenantRequest

// MetricsConfiguratorPublicServiceUpdateJSONRequestBody defines body for MetricsConfiguratorPublicServiceUpdate for application/json ContentType.
type MetricsConfiguratorPublicServiceUpdateJSONRequestBody = MetricsConfiguratorUpdateRequest

// MetricsConfiguratorPublicServiceValidateBucketJSONRequestBody defines body for MetricsConfiguratorPublicServiceValidateBucket for application/json ContentType.
type MetricsConfiguratorPublicServiceValidateBucketJSONRequestBody = MetricsConfiguratorValidateBucketRequest

// ConnectorsServiceReplaceConnectorJSONRequestBody defines body for ConnectorsServiceReplaceConnector for application/json ContentType.
type ConnectorsServiceReplaceConnectorJSONRequestBody = V1Connector

// ConnectorsServiceCreateConnectorJSONRequestBody defines body for ConnectorsServiceCreateConnector for application/json ContentType.
type ConnectorsServiceCreateConnectorJSONRequestBody = V1Connector

// TestingServiceTestConnectorConfigJSONRequestBody defines body for TestingServiceTestConnectorConfig for application/json ContentType.
type TestingServiceTestConnectorConfigJSONRequestBody = V1TestConnectorConfigRequest

// TestingServiceTestDestinationJSONRequestBody defines body for TestingServiceTestDestination for application/json ContentType.
type TestingServiceTestDestinationJSONRequestBody = V1TestDestinationRequest

// TestingServiceTestExistingConnectorJSONRequestBody defines body for TestingServiceTestExistingConnector for application/json ContentType.
type TestingServiceTestExistingConnectorJSONRequestBody = V1TestExistingConnectorRequest

// TestingServiceTestExistingPresetJSONRequestBody defines body for TestingServiceTestExistingPreset for application/json ContentType.
type TestingServiceTestExistingPresetJSONRequestBody = V1TestExistingPresetRequest

// TestingServiceTestPresetConfigJSONRequestBody defines body for TestingServiceTestPresetConfig for application/json ContentType.
type TestingServiceTestPresetConfigJSONRequestBody = V1TestPresetConfigRequest

// TestingServiceTestRoutingConditionValidJSONRequestBody defines body for TestingServiceTestRoutingConditionValid for application/json ContentType.
type TestingServiceTestRoutingConditionValidJSONRequestBody = V1TestRoutingConditionValidRequest

// TestingServiceTestTemplateRenderJSONRequestBody defines body for TestingServiceTestTemplateRender for application/json ContentType.
type TestingServiceTestTemplateRenderJSONRequestBody = V1TestTemplateRenderRequest

// PresetsServiceCreateCustomPresetJSONRequestBody defines body for PresetsServiceCreateCustomPreset for application/json ContentType.
type PresetsServiceCreateCustomPresetJSONRequestBody = Presetsv1Preset

// PresetsServiceReplaceCustomPresetJSONRequestBody defines body for PresetsServiceReplaceCustomPreset for application/json ContentType.
type PresetsServiceReplaceCustomPresetJSONRequestBody = Presetsv1Preset

// GlobalRoutersServiceCreateGlobalRouterJSONRequestBody defines body for GlobalRoutersServiceCreateGlobalRouter for application/json ContentType.
type GlobalRoutersServiceCreateGlobalRouterJSONRequestBody = V1GlobalRouter

// GlobalRoutersServiceReplaceGlobalRouterJSONRequestBody defines body for GlobalRoutersServiceReplaceGlobalRouter for application/json ContentType.
type GlobalRoutersServiceReplaceGlobalRouterJSONRequestBody = V1GlobalRouter

// OutgoingWebhooksServiceCreateOutgoingWebhookJSONRequestBody defines body for OutgoingWebhooksServiceCreateOutgoingWebhook for application/json ContentType.
type OutgoingWebhooksServiceCreateOutgoingWebhookJSONRequestBody = V1CreateOutgoingWebhookRequest

// OutgoingWebhooksServiceUpdateOutgoingWebhookJSONRequestBody defines body for OutgoingWebhooksServiceUpdateOutgoingWebhook for application/json ContentType.
type OutgoingWebhooksServiceUpdateOutgoingWebhookJSONRequestBody = V1UpdateOutgoingWebhookRequest

// OutgoingWebhooksServiceTestOutgoingWebhookJSONRequestBody defines body for OutgoingWebhooksServiceTestOutgoingWebhook for application/json ContentType.
type OutgoingWebhooksServiceTestOutgoingWebhookJSONRequestBody = V1TestOutgoingWebhookRequest

// OutgoingWebhooksServiceTestExistingOutgoingWebhookJSONRequestBody defines body for OutgoingWebhooksServiceTestExistingOutgoingWebhook for application/json ContentType.
type OutgoingWebhooksServiceTestExistingOutgoingWebhookJSONRequestBody = V1TestExistingOutgoingWebhookRequest

// PoliciesServiceCreatePolicyJSONRequestBody defines body for PoliciesServiceCreatePolicy for application/json ContentType.
type PoliciesServiceCreatePolicyJSONRequestBody = V1CreatePolicyRequest

// PoliciesServiceUpdatePolicyJSONRequestBody defines body for PoliciesServiceUpdatePolicy for application/json ContentType.
type PoliciesServiceUpdatePolicyJSONRequestBody = V1UpdatePolicyRequest

// PoliciesServiceAtomicOverwriteLogPoliciesJSONRequestBody defines body for PoliciesServiceAtomicOverwriteLogPolicies for application/json ContentType.
type PoliciesServiceAtomicOverwriteLogPoliciesJSONRequestBody = V1AtomicOverwriteLogPoliciesRequest

// PoliciesServiceAtomicOverwriteSpanPoliciesJSONRequestBody defines body for PoliciesServiceAtomicOverwriteSpanPolicies for application/json ContentType.
type PoliciesServiceAtomicOverwriteSpanPoliciesJSONRequestBody = V1AtomicOverwriteSpanPoliciesRequest

// PoliciesServiceAtomicBatchCreatePolicyJSONRequestBody defines body for PoliciesServiceAtomicBatchCreatePolicy for application/json ContentType.
type PoliciesServiceAtomicBatchCreatePolicyJSONRequestBody = V1AtomicBatchCreatePolicyRequest

// PoliciesServiceBulkTestLogPoliciesJSONRequestBody defines body for PoliciesServiceBulkTestLogPolicies for application/json ContentType.
type PoliciesServiceBulkTestLogPoliciesJSONRequestBody = V1BulkTestLogPoliciesRequest

// PoliciesServiceReorderPoliciesJSONRequestBody defines body for PoliciesServiceReorderPolicies for application/json ContentType.
type PoliciesServiceReorderPoliciesJSONRequestBody = V1ReorderPoliciesRequest

// PoliciesServiceTogglePolicyJSONRequestBody defines body for PoliciesServiceTogglePolicy for application/json ContentType.
type PoliciesServiceTogglePolicyJSONRequestBody = V1TogglePolicyRequest

// RetentionsServiceUpdateRetentionsJSONRequestBody defines body for RetentionsServiceUpdateRetentions for application/json ContentType.
type RetentionsServiceUpdateRetentionsJSONRequestBody = V1UpdateRetentionsRequest

// RetentionsServiceActivateRetentionsJSONRequestBody defines body for RetentionsServiceActivateRetentions for application/json ContentType.
type RetentionsServiceActivateRetentionsJSONRequestBody = V1ActivateRetentionsRequest

// RuleGroupSetsCreateJSONRequestBody defines body for RuleGroupSetsCreate for application/json ContentType.
type RuleGroupSetsCreateJSONRequestBody = V1CreateRuleGroupSet

// RuleGroupSetsUpdateJSONRequestBody defines body for RuleGroupSetsUpdate for application/json ContentType.
type RuleGroupSetsUpdateJSONRequestBody = V1RuleGroupSetsUpdateBody

// ScopesServiceCreateScopeJSONRequestBody defines body for ScopesServiceCreateScope for application/json ContentType.
type ScopesServiceCreateScopeJSONRequestBody = V1CreateScopeRequest

// ScopesServiceUpdateScopeJSONRequestBody defines body for ScopesServiceUpdateScope for application/json ContentType.
type ScopesServiceUpdateScopeJSONRequestBody = V1UpdateScopeRequest

// SlosServiceCreateSloJSONRequestBody defines body for SlosServiceCreateSlo for application/json ContentType.
type SlosServiceCreateSloJSONRequestBody = V1Slo

// SlosServiceReplaceSloJSONRequestBody defines body for SlosServiceReplaceSlo for application/json ContentType.
type SlosServiceReplaceSloJSONRequestBody = V1Slo

// SamlConfigurationServiceSetActiveJSONRequestBody defines body for SamlConfigurationServiceSetActive for application/json ContentType.
type SamlConfigurationServiceSetActiveJSONRequestBody = Ssov2SetActiveRequest

// SamlConfigurationServiceSetIDPParametersJSONRequestBody defines body for SamlConfigurationServiceSetIDPParameters for application/json ContentType.
type SamlConfigurationServiceSetIDPParametersJSONRequestBody = V2SetIDPParametersRequest

// TeamPermissionsMgmtServiceCreateTeamGroupJSONRequestBody defines body for TeamPermissionsMgmtServiceCreateTeamGroup for application/json ContentType.
type TeamPermissionsMgmtServiceCreateTeamGroupJSONRequestBody = V1CreateTeamGroupRequest

// TeamPermissionsMgmtServiceUpdateTeamGroupJSONRequestBody defines body for TeamPermissionsMgmtServiceUpdateTeamGroup for application/json ContentType.
type TeamPermissionsMgmtServiceUpdateTeamGroupJSONRequestBody = V1UpdateTeamGroupRequest

// TeamPermissionsMgmtServiceAddUsersToTeamGroupsJSONRequestBody defines body for TeamPermissionsMgmtServiceAddUsersToTeamGroups for application/json ContentType.
type TeamPermissionsMgmtServiceAddUsersToTeamGroupsJSONRequestBody = V1AddUsersToTeamGroupsRequest

// TeamPermissionsMgmtServiceSetTeamGroupScopeJSONRequestBody defines body for TeamPermissionsMgmtServiceSetTeamGroupScope for application/json ContentType.
type TeamPermissionsMgmtServiceSetTeamGroupScopeJSONRequestBody = TeamPermissionsMgmtServiceSetTeamGroupScopeBody

// TeamPermissionsMgmtServiceAddUsersToTeamGroupJSONRequestBody defines body for TeamPermissionsMgmtServiceAddUsersToTeamGroup for application/json ContentType.
type TeamPermissionsMgmtServiceAddUsersToTeamGroupJSONRequestBody = V1TeamPermissionsMgmtServiceAddUsersToTeamGroupBody

// ViewsFoldersServiceCreateViewFolderJSONRequestBody defines body for ViewsFoldersServiceCreateViewFolder for application/json ContentType.
type ViewsFoldersServiceCreateViewFolderJSONRequestBody = ServicesCreateViewFolderRequest

// ViewsFoldersServiceReplaceViewFolderJSONRequestBody defines body for ViewsFoldersServiceReplaceViewFolder for application/json ContentType.
type ViewsFoldersServiceReplaceViewFolderJSONRequestBody ViewsFoldersServiceReplaceViewFolderJSONBody

// ViewsServiceCreateViewJSONRequestBody defines body for ViewsServiceCreateView for application/json ContentType.
type ViewsServiceCreateViewJSONRequestBody = ServicesCreateViewRequest

// ViewsServiceReplaceViewJSONRequestBody defines body for ViewsServiceReplaceView for application/json ContentType.
type ViewsServiceReplaceViewJSONRequestBody ViewsServiceReplaceViewJSONBody

// ActionsServiceCreateActionJSONRequestBody defines body for ActionsServiceCreateAction for application/json ContentType.
type ActionsServiceCreateActionJSONRequestBody = V2CreateActionRequest

// ActionsServiceReplaceActionJSONRequestBody defines body for ActionsServiceReplaceAction for application/json ContentType.
type ActionsServiceReplaceActionJSONRequestBody = V2ReplaceActionRequest

// ActionsServiceAtomicBatchExecuteActionsJSONRequestBody defines body for ActionsServiceAtomicBatchExecuteActions for application/json ContentType.
type ActionsServiceAtomicBatchExecuteActionsJSONRequestBody = V2AtomicBatchExecuteActionsRequest

// ActionsServiceOrderActionsJSONRequestBody defines body for ActionsServiceOrderActions for application/json ContentType.
type ActionsServiceOrderActionsJSONRequestBody = V2OrderActionsRequest

// DataUsageServiceGetDailyUsageEvaluationTokensJSONRequestBody defines body for DataUsageServiceGetDailyUsageEvaluationTokens for application/json ContentType.
type DataUsageServiceGetDailyUsageEvaluationTokensJSONRequestBody = V2GetDailyUsageEvaluationTokensRequest

// DataUsageServiceGetDailyUsageProcessedGbsJSONRequestBody defines body for DataUsageServiceGetDailyUsageProcessedGbs for application/json ContentType.
type DataUsageServiceGetDailyUsageProcessedGbsJSONRequestBody = V2GetDailyUsageProcessedGbsRequest

// DataUsageServiceGetDailyUsageUnitsJSONRequestBody defines body for DataUsageServiceGetDailyUsageUnits for application/json ContentType.
type DataUsageServiceGetDailyUsageUnitsJSONRequestBody = V2GetDailyUsageUnitsRequest

// DataUsageServiceUpdateDataUsageMetricsExportStatusJSONRequestBody defines body for DataUsageServiceUpdateDataUsageMetricsExportStatus for application/json ContentType.
type DataUsageServiceUpdateDataUsageMetricsExportStatusJSONRequestBody = V2UpdateDataUsageMetricsExportStatusRequest

// TargetServiceSetTargetJSONRequestBody defines body for TargetServiceSetTarget for application/json ContentType.
type TargetServiceSetTargetJSONRequestBody = V2SetTargetRequest

// TargetServiceValidateTargetJSONRequestBody defines body for TargetServiceValidateTarget for application/json ContentType.
type TargetServiceValidateTargetJSONRequestBody = V2ValidateTargetRequest

// AlertDefsServiceCreateAlertDefJSONRequestBody defines body for AlertDefsServiceCreateAlertDef for application/json ContentType.
type AlertDefsServiceCreateAlertDefJSONRequestBody = V3AlertDefProperties

// AlertDefsServiceReplaceAlertDefJSONRequestBody defines body for AlertDefsServiceReplaceAlertDef for application/json ContentType.
type AlertDefsServiceReplaceAlertDefJSONRequestBody = V3ReplaceAlertDefRequest

// ApiKeysServiceCreateApiKeyJSONRequestBody defines body for ApiKeysServiceCreateApiKey for application/json ContentType.
type ApiKeysServiceCreateApiKeyJSONRequestBody = V3CreateApiKeyRequest

// ApiKeysServiceUpdateApiKeyJSONRequestBody defines body for ApiKeysServiceUpdateApiKey for application/json ContentType.
type ApiKeysServiceUpdateApiKeyJSONRequestBody = ApiKeysServiceUpdateApiKeyBody

// Getter for additional properties for ProtobufAny. Returns the specified
// element and whether it was found
func (a ProtobufAny) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ProtobufAny
func (a *ProtobufAny) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ProtobufAny to handle AdditionalProperties
func (a *ProtobufAny) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if raw, found := object["@type"]; found {
		err = json.Unmarshal(raw, &a.Type)
		if err != nil {
			return fmt.Errorf("error reading '@type': %w", err)
		}
		delete(object, "@type")
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ProtobufAny to handle AdditionalProperties
func (a ProtobufAny) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	if a.Type != nil {
		object["@type"], err = json.Marshal(a.Type)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '@type': %w", err)
		}
	}

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
